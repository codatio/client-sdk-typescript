/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetCommerceInfoRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=companyId",
  })
  companyId: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=connectionId",
  })
  connectionId: string;
}

export class GetCommerceInfoSourceModifiedDateAccountBalances extends SpeakeasyBase {
  /**
   * The account's current balance
   */
  @SpeakeasyMetadata()
  @Expose({ name: "available" })
  available?: number;

  /**
   * The currency of the account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: string;

  /**
   * Funds that are not yet available in the balance
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pending" })
  pending?: number;

  /**
   * Funds reserved as holdings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reserved" })
  reserved?: number;
}

export enum GetCommerceInfoSourceModifiedDateAddressTypeEnum {
  Billing = "Billing",
  Delivery = "Delivery",
}

export class GetCommerceInfoSourceModifiedDateAddress extends SpeakeasyBase {
  /**
   * The third line of the address, or city
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  /**
   * The country for the address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * The first line of the address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "line1" })
  line1?: string;

  /**
   * The second line of the address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "line2" })
  line2?: string;

  /**
   * The postal (or zip) code for the address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postalCode" })
  postalCode?: string;

  /**
   * The fourth line of the address, or region
   */
  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  region?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: GetCommerceInfoSourceModifiedDateAddressTypeEnum;
}

/**
 * The type of phone number
 */
export enum GetCommerceInfoSourceModifiedDatePhoneNumbersTypeEnum {
  Primary = "Primary",
  Landline = "Landline",
  Mobile = "Mobile",
  Fax = "Fax",
  Unknown = "Unknown",
}

export class GetCommerceInfoSourceModifiedDatePhoneNumbers extends SpeakeasyBase {
  /**
   * A phone number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number: string;

  /**
   * The type of phone number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: GetCommerceInfoSourceModifiedDatePhoneNumbersTypeEnum;
}

/**
 * In the Codat system, company information includes standard commercial details about
 *
 * @remarks
 * a linked company, such as their address, phone number, and company registration.
 *
 * Explore our [data coverage](https://knowledge.codat.io/supported-features/commerce?view=tab-by-data-type&dataType=companyInfo) for this data type.
 *
 */
export class GetCommerceInfoSourceModifiedDate extends SpeakeasyBase {
  /**
   * The available and current cash balances for the company's accounts
   */
  @SpeakeasyMetadata({
    elemType: GetCommerceInfoSourceModifiedDateAccountBalances,
  })
  @Expose({ name: "accountBalances" })
  @Type(() => GetCommerceInfoSourceModifiedDateAccountBalances)
  accountBalances?: GetCommerceInfoSourceModifiedDateAccountBalances[];

  /**
   * Addresses associated with the company
   */
  @SpeakeasyMetadata({ elemType: GetCommerceInfoSourceModifiedDateAddress })
  @Expose({ name: "addresses" })
  @Type(() => GetCommerceInfoSourceModifiedDateAddress)
  addresses?: GetCommerceInfoSourceModifiedDateAddress[];

  /**
   * The currency data type in Codat is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, e.g. _GBP_.
   *
   * @remarks
   *
   * ## Unknown currencies
   *
   * In line with the ISO 4217 specification, the code _XXX_ is used when the data source does not return a currency for a transaction.
   *
   * There are only a very small number of edge cases where this currency code is returned by the Codat system.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "baseCurrency" })
  baseCurrency?: string;

  /**
   * Identifier or reference for the company in the commerce platform
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commercePlatformRef" })
  commercePlatformRef?: string;

  /**
   * The full legal name of the company
   */
  @SpeakeasyMetadata()
  @Expose({ name: "companyLegalName" })
  companyLegalName?: string;

  /**
   * The name of the company
   */
  @SpeakeasyMetadata()
  @Expose({ name: "companyName" })
  companyName?: string;

  /**
   * The date the entity was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdDate" })
  createdDate?: string;

  /**
   * The date on which this record was last modified in Codat.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modifiedDate" })
  modifiedDate?: string;

  /**
   * Phone numbers associated with the company
   */
  @SpeakeasyMetadata({
    elemType: GetCommerceInfoSourceModifiedDatePhoneNumbers,
  })
  @Expose({ name: "phoneNumbers" })
  @Type(() => GetCommerceInfoSourceModifiedDatePhoneNumbers)
  phoneNumbers?: GetCommerceInfoSourceModifiedDatePhoneNumbers[];

  /**
   * The registration number of the company
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registrationNumber" })
  registrationNumber?: string;

  /**
   * The date on which this record was last modified in the originating system
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceModifiedDate" })
  sourceModifiedDate?: string;

  /**
   * URL addresses for the originating system. For example, potential use cases include 'deeplinking' to the originating system
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceUrls" })
  sourceUrls?: Record<string, string>;

  /**
   * Web links associated with the company
   */
  @SpeakeasyMetadata()
  @Expose({ name: "webLinks" })
  webLinks?: any[];
}

export class GetCommerceInfoResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  sourceModifiedDate?: GetCommerceInfoSourceModifiedDate;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
