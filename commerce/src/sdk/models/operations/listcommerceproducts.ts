/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ListCommerceProductsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=companyId",
  })
  companyId: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=connectionId",
  })
  connectionId: string;

  /**
   * Field to order results by. [Read more](https://docs.codat.io/using-the-api/ordering-results).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=orderBy",
  })
  orderBy?: string;

  /**
   * Page number. [Read more](https://docs.codat.io/using-the-api/paging).
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page: number;

  /**
   * Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pageSize",
  })
  pageSize?: number;

  /**
   * Codat query string. [Read more](https://docs.codat.io/using-the-api/querying).
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=query" })
  query?: string;
}

export class ListCommerceProducts200ApplicationJSONLinksHypertextReference extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;
}

export class ListCommerceProducts200ApplicationJSONLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "current" })
  @Type(() => ListCommerceProducts200ApplicationJSONLinksHypertextReference)
  current: ListCommerceProducts200ApplicationJSONLinksHypertextReference;

  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  @Type(() => ListCommerceProducts200ApplicationJSONLinksHypertextReference)
  next?: ListCommerceProducts200ApplicationJSONLinksHypertextReference;

  @SpeakeasyMetadata()
  @Expose({ name: "previous" })
  @Type(() => ListCommerceProducts200ApplicationJSONLinksHypertextReference)
  previous?: ListCommerceProducts200ApplicationJSONLinksHypertextReference;

  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  @Type(() => ListCommerceProducts200ApplicationJSONLinksHypertextReference)
  self: ListCommerceProducts200ApplicationJSONLinksHypertextReference;
}

export enum ListCommerceProducts200ApplicationJSONProductSourceModifiedDateStatusEnum {
  Unknown = "Unknown",
  Published = "Published",
  Unpublished = "Unpublished",
}

/**
 * Represents a variation of a product available for sale, for example an item of clothing
 *
 * @remarks
 * may be available for sale in multiple sizes and colors
 *
 */
export class ListCommerceProducts200ApplicationJSONProductSourceModifiedDate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "barcode" })
  barcode?: string;

  /**
   * The date the entity was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdDate" })
  createdDate?: string;

  /**
   * A unique, persistent identifier for this record
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "inventory" })
  inventory?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "isTaxEnabled" })
  isTaxEnabled?: boolean;

  /**
   * The date on which this record was last modified in Codat.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modifiedDate" })
  modifiedDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "prices" })
  prices?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "shippingRequired" })
  shippingRequired?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "sku" })
  sku?: string;

  /**
   * The date on which this record was last modified in the originating system
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceModifiedDate" })
  sourceModifiedDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ListCommerceProducts200ApplicationJSONProductSourceModifiedDateStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "unitOfMeasure" })
  unitOfMeasure?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "vatPercentage" })
  vatPercentage?: number;
}

/**
 * A Product is an item in the company's inventory, and includes information
 *
 * @remarks
 * about the price and quantity of all products, and variants thereof, available for sale
 *
 */
export class ListCommerceProducts200ApplicationJSONProduct extends SpeakeasyBase {
  /**
   * Retail category that the product is assigned to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "categorization" })
  categorization?: string;

  /**
   * Description of the product recorded in the commerce or point of sale platform.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * A unique, persistent identifier for this record
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Whether the product represents a gift card or voucher that
   *
   * @remarks
   * can be redeemed in the commerce or POS platform
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isGiftCard" })
  isGiftCard?: boolean;

  /**
   * Name of the product in the commerce or POS system
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata({
    elemType: ListCommerceProducts200ApplicationJSONProductSourceModifiedDate,
  })
  @Expose({ name: "variants" })
  @Type(() => ListCommerceProducts200ApplicationJSONProductSourceModifiedDate)
  variants?: ListCommerceProducts200ApplicationJSONProductSourceModifiedDate[];
}

/**
 * OK
 */
export class ListCommerceProducts200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => ListCommerceProducts200ApplicationJSONLinks)
  links: ListCommerceProducts200ApplicationJSONLinks;

  @SpeakeasyMetadata()
  @Expose({ name: "pageNumber" })
  pageNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "pageSize" })
  pageSize: number;

  @SpeakeasyMetadata({
    elemType: ListCommerceProducts200ApplicationJSONProduct,
  })
  @Expose({ name: "results" })
  @Type(() => ListCommerceProducts200ApplicationJSONProduct)
  results?: ListCommerceProducts200ApplicationJSONProduct[];

  @SpeakeasyMetadata()
  @Expose({ name: "totalResults" })
  totalResults: number;
}

export class ListCommerceProductsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  listCommerceProducts200ApplicationJSONObject?: ListCommerceProducts200ApplicationJSON;
}
