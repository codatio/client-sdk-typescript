/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AddressType } from "./addresstype";
import { Expose, Type } from "class-transformer";

/**
 * Supplemental data is additional data you can include in our standard data types.
 *
 * @remarks
 *
 * It is referenced as a configured dynamic key value pair that is unique to the accounting platform. [Learn more](https://docs.codat.io/using-the-api/additional-data) about supplemental data.
 */
export class AddressSupplementalData extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "content" })
    content?: Record<string, Record<string, any>>;
}

export class Address extends SpeakeasyBase {
    /**
     * The third line of the address, or city
     */
    @SpeakeasyMetadata()
    @Expose({ name: "city" })
    city?: string;

    /**
     * The country for the address
     */
    @SpeakeasyMetadata()
    @Expose({ name: "country" })
    country?: string;

    /**
     * The first line of the address
     */
    @SpeakeasyMetadata()
    @Expose({ name: "line1" })
    line1?: string;

    /**
     * The second line of the address
     */
    @SpeakeasyMetadata()
    @Expose({ name: "line2" })
    line2?: string;

    /**
     * The postal (or zip) code for the address
     */
    @SpeakeasyMetadata()
    @Expose({ name: "postalCode" })
    postalCode?: string;

    /**
     * The fourth line of the address, or region
     */
    @SpeakeasyMetadata()
    @Expose({ name: "region" })
    region?: string;

    /**
     * Supplemental data is additional data you can include in our standard data types.
     *
     * @remarks
     *
     * It is referenced as a configured dynamic key value pair that is unique to the accounting platform. [Learn more](https://docs.codat.io/using-the-api/additional-data) about supplemental data.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "supplementalData" })
    @Type(() => AddressSupplementalData)
    supplementalData?: AddressSupplementalData;

    /**
     * The type of the address
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: AddressType;
}
