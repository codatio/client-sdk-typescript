/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetCompaniesCompanyIdPushRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=companyId",
  })
  companyId: string;

  /**
   * Field to order results by. [Read more](https://docs.codat.io/using-the-api/ordering-results).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=orderBy",
  })
  orderBy?: string;

  /**
   * Page number. [Read more](https://docs.codat.io/using-the-api/paging).
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page: number;

  /**
   * Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pageSize",
  })
  pageSize?: number;

  /**
   * Codat query string. [Read more](https://docs.codat.io/using-the-api/querying).
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=query" })
  query?: string;
}

export class GetCompaniesCompanyIdPush200ApplicationJSONLinksHypertextReference extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;
}

export class GetCompaniesCompanyIdPush200ApplicationJSONLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "current" })
  @Type(
    () => GetCompaniesCompanyIdPush200ApplicationJSONLinksHypertextReference
  )
  current: GetCompaniesCompanyIdPush200ApplicationJSONLinksHypertextReference;

  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  @Type(
    () => GetCompaniesCompanyIdPush200ApplicationJSONLinksHypertextReference
  )
  next?: GetCompaniesCompanyIdPush200ApplicationJSONLinksHypertextReference;

  @SpeakeasyMetadata()
  @Expose({ name: "previous" })
  @Type(
    () => GetCompaniesCompanyIdPush200ApplicationJSONLinksHypertextReference
  )
  previous?: GetCompaniesCompanyIdPush200ApplicationJSONLinksHypertextReference;

  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  @Type(
    () => GetCompaniesCompanyIdPush200ApplicationJSONLinksHypertextReference
  )
  self: GetCompaniesCompanyIdPush200ApplicationJSONLinksHypertextReference;
}

export class GetCompaniesCompanyIdPush200ApplicationJSONResultsChangesPushOperationRecordRef extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "dataType" })
  dataType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

export enum GetCompaniesCompanyIdPush200ApplicationJSONResultsChangesTypeEnum {
  Unknown = "Unknown",
  Created = "Created",
  Modified = "Modified",
  Deleted = "Deleted",
  AttachmentUploaded = "AttachmentUploaded",
}

export class GetCompaniesCompanyIdPush200ApplicationJSONResultsChanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attachmentId" })
  attachmentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recordRef" })
  @Type(
    () =>
      GetCompaniesCompanyIdPush200ApplicationJSONResultsChangesPushOperationRecordRef
  )
  recordRef?: GetCompaniesCompanyIdPush200ApplicationJSONResultsChangesPushOperationRecordRef;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: GetCompaniesCompanyIdPush200ApplicationJSONResultsChangesTypeEnum;
}

/**
 * The status of the push operation.
 */
export enum GetCompaniesCompanyIdPush200ApplicationJSONResultsStatusEnum {
  Pending = "Pending",
  Failed = "Failed",
  Success = "Success",
  TimedOut = "TimedOut",
}

export class GetCompaniesCompanyIdPush200ApplicationJSONResultsValidationValidationItem extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "itemId" })
  itemId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "validatorName" })
  validatorName?: string;
}

/**
 * A human-readable object describing validation decisions Codat has made when pushing data into the platform. If a push has failed because of validation errors, they will be detailed here.
 */
export class GetCompaniesCompanyIdPush200ApplicationJSONResultsValidation extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      GetCompaniesCompanyIdPush200ApplicationJSONResultsValidationValidationItem,
  })
  @Expose({ name: "errors" })
  @Type(
    () =>
      GetCompaniesCompanyIdPush200ApplicationJSONResultsValidationValidationItem
  )
  errors?: GetCompaniesCompanyIdPush200ApplicationJSONResultsValidationValidationItem[];

  @SpeakeasyMetadata({
    elemType:
      GetCompaniesCompanyIdPush200ApplicationJSONResultsValidationValidationItem,
  })
  @Expose({ name: "warnings" })
  @Type(
    () =>
      GetCompaniesCompanyIdPush200ApplicationJSONResultsValidationValidationItem
  )
  warnings?: GetCompaniesCompanyIdPush200ApplicationJSONResultsValidationValidationItem[];
}

export class GetCompaniesCompanyIdPush200ApplicationJSONResults extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: GetCompaniesCompanyIdPush200ApplicationJSONResultsChanges,
  })
  @Expose({ name: "changes" })
  @Type(() => GetCompaniesCompanyIdPush200ApplicationJSONResultsChanges)
  changes?: GetCompaniesCompanyIdPush200ApplicationJSONResultsChanges[];

  /**
   * Unique identifier for your SMB in Codat.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "companyId" })
  companyId: string;

  /**
   * The datetime when the push was completed, null if Pending.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "completedOnUtc" })
  completedOnUtc?: string;

  /**
   * Unique identifier for a company's data connection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dataConnectionKey" })
  dataConnectionKey: string;

  /**
   * The type of data being pushed, eg invoices, customers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dataType" })
  dataType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "errorMessage" })
  errorMessage?: string;

  /**
   * A unique identifier generated by Codat to represent this single push operation. This identifier can be used to track the status of the push, and should be persisted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pushOperationKey" })
  pushOperationKey: string;

  /**
   * The datetime when the push was requested.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestedOnUtc" })
  requestedOnUtc: string;

  /**
   * The status of the push operation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: GetCompaniesCompanyIdPush200ApplicationJSONResultsStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statusCode" })
  statusCode: number;

  @SpeakeasyMetadata()
  @Expose({ name: "timeoutInMinutes" })
  timeoutInMinutes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "timeoutInSeconds" })
  timeoutInSeconds?: number;

  /**
   * A human-readable object describing validation decisions Codat has made when pushing data into the platform. If a push has failed because of validation errors, they will be detailed here.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validation" })
  @Type(() => GetCompaniesCompanyIdPush200ApplicationJSONResultsValidation)
  validation?: GetCompaniesCompanyIdPush200ApplicationJSONResultsValidation;
}

/**
 * OK
 */
export class GetCompaniesCompanyIdPush200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => GetCompaniesCompanyIdPush200ApplicationJSONLinks)
  links: GetCompaniesCompanyIdPush200ApplicationJSONLinks;

  @SpeakeasyMetadata()
  @Expose({ name: "pageNumber" })
  pageNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "pageSize" })
  pageSize: number;

  @SpeakeasyMetadata({
    elemType: GetCompaniesCompanyIdPush200ApplicationJSONResults,
  })
  @Expose({ name: "results" })
  @Type(() => GetCompaniesCompanyIdPush200ApplicationJSONResults)
  results?: GetCompaniesCompanyIdPush200ApplicationJSONResults[];

  @SpeakeasyMetadata()
  @Expose({ name: "totalResults" })
  totalResults: number;
}

export class GetCompaniesCompanyIdPushResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  getCompaniesCompanyIdPush200ApplicationJSONObject?: GetCompaniesCompanyIdPush200ApplicationJSON;
}
