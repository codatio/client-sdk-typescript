/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetCompaniesCompanyIdDataStatusRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=companyId",
  })
  companyId: string;
}

/**
 * One or more of the resources you referenced could not be found.
 *
 * @remarks
 * This might be because your company or data connection id is wrong, or was already deleted.
 */
export class GetCompaniesCompanyIdDataStatus404ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "canBeRetried" })
  canBeRetried?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "correlationId" })
  correlationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "detailedErrorCode" })
  detailedErrorCode?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "service" })
  service?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "statusCode" })
  statusCode?: number;
}

/**
 * Your API request was not properly authorized.
 */
export class GetCompaniesCompanyIdDataStatus401ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "canBeRetried" })
  canBeRetried?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "correlationId" })
  correlationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "detailedErrorCode" })
  detailedErrorCode?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "service" })
  service?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "statusCode" })
  statusCode?: number;
}

/**
 * Describes the state of data in the Codat cache for a company and data type
 */
export class GetCompaniesCompanyIdDataStatus200ApplicationJSONDataStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "currentStatus" })
  currentStatus: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dataType" })
  dataType: string;

  /**
   * In Codat's data model, dates and times are represented using the <a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:
   *
   * @remarks
   *
   * ```
   * 2020-10-08T22:40:50Z
   * 2021-01-01T00:00:00
   * ```
   *
   *
   *
   * When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
   *
   * - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
   * - Unqualified local time: `2021-11-15T01:00:00`
   * - UTC time offsets: `2021-11-15T01:00:00-05:00`
   *
   * > ðŸ“˜ Time zones
   * >
   * > Not all dates from Codat will contain information about time zones.
   * > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastSuccessfulSync" })
  lastSuccessfulSync: string;

  @SpeakeasyMetadata()
  @Expose({ name: "latestSuccessfulSyncId" })
  latestSuccessfulSyncId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "latestSyncId" })
  latestSyncId?: string;
}

/**
 * OK
 */
export class GetCompaniesCompanyIdDataStatus200ApplicationJSON extends SpeakeasyBase {
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dataType1" })
  @Type(() => GetCompaniesCompanyIdDataStatus200ApplicationJSONDataStatus)
  dataType1?: GetCompaniesCompanyIdDataStatus200ApplicationJSONDataStatus;

  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dataType2" })
  @Type(() => GetCompaniesCompanyIdDataStatus200ApplicationJSONDataStatus)
  dataType2?: GetCompaniesCompanyIdDataStatus200ApplicationJSONDataStatus;
}

export class GetCompaniesCompanyIdDataStatusResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  getCompaniesCompanyIdDataStatus200ApplicationJSONObject?: GetCompaniesCompanyIdDataStatus200ApplicationJSON;

  /**
   * Your API request was not properly authorized.
   */
  @SpeakeasyMetadata()
  getCompaniesCompanyIdDataStatus401ApplicationJSONObject?: GetCompaniesCompanyIdDataStatus401ApplicationJSON;

  /**
   * One or more of the resources you referenced could not be found.
   *
   * @remarks
   * This might be because your company or data connection id is wrong, or was already deleted.
   */
  @SpeakeasyMetadata()
  getCompaniesCompanyIdDataStatus404ApplicationJSONObject?: GetCompaniesCompanyIdDataStatus404ApplicationJSON;
}
