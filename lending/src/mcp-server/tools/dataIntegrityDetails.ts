/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { dataIntegrityDetails } from "../../funcs/dataIntegrityDetails.js";
import * as operations from "../../sdk/models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.ListDataIntegrityDetailsRequest$inboundSchema,
};

export const tool$dataIntegrityDetails: ToolDefinition<typeof args> = {
  name: "data-integrity-details",
  description: `List data integrity details

The *List data integrity details* endpoint returns the match result record by record for a given data type, filtered based on a query string in the same way as summary results.

The [details](https://docs.codat.io/lending-api#/schemas/DataIntegrityDetail) are paginated and support ordering, following the same conventions as our other data endpoints.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await dataIntegrityDetails(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
