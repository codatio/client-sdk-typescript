/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { loanWritebackDirectCostsGetCreateModel } from "../../funcs/loanWritebackDirectCostsGetCreateModel.js";
import * as operations from "../../sdk/models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetCreateDirectCostsModelRequest$inboundSchema,
};

export const tool$loanWritebackDirectCostsGetCreateModel: ToolDefinition<
  typeof args
> = {
  name: "loan-writeback-direct-costs-get-create-model",
  description: `Get create direct cost model

The *Get create direct cost model* endpoint returns the expected data for the request payload when creating a [direct cost](https://docs.codat.io/lending-api#/schemas/DirectCost) for a given company and integration.

[Direct costs](https://docs.codat.io/lending-api#/schemas/DirectCost) are purchases of items that are paid off at the point of the purchase.

**Integration-specific behaviour**

See the *response examples* for integration-specific indicative models.
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await loanWritebackDirectCostsGetCreateModel(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
