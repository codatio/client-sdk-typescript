/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { bankStatementsUploadBankStatementData } from "../../funcs/bankStatementsUploadBankStatementData.js";
import * as operations from "../../sdk/models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.UploadBankStatementDataRequest$inboundSchema,
};

export const tool$bankStatementsUploadBankStatementData: ToolDefinition<
  typeof args
> = {
  name: "bank-statements-upload-bank-statement-data",
  description: `Upload data

During an active session, use the **Upload data* endpoint to uploads a page of bank accounts or bank transactions data to the session.

Make sure you created configuration for the account using the [*Set upload configuration*](https://docs.codat.io/lending-api#/operations/set-bank-statement-upload-configuration) endpoint before attempting an upload. `,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await bankStatementsUploadBankStatementData(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    return formatResult(void 0, apiCall);
  },
};
