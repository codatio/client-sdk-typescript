/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { companiesCreate } from "../../funcs/companiesCreate.js";
import * as shared from "../../sdk/models/shared/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: shared.CompanyRequestBody$inboundSchema.optional(),
};

export const tool$companiesCreate: ToolDefinition<typeof args> = {
  name: "companies-create",
  description: `Create company

Use the *Create company* endpoint to create a new [company](https://docs.codat.io/lending-api#/schemas/Company) that represents your customer in Codat. 

A [company](https://docs.codat.io/lending-api#/schemas/Company) represents a business sharing access to their data.
Each company can have multiple [connections](https://docs.codat.io/lending-api#/schemas/Connection) to different data sources, such as one connection to Xero for accounting data, two connections to Plaid for two bank accounts, and a connection to Zettle for POS data.

If forbidden characters (see \`name\` pattern) are present in the request, a company will be created with the forbidden characters removed. For example, \`Company (Codat[1])\` with be created as \`Company Codat1\`.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await companiesCreate(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
