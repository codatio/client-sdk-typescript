/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { loanWritebackBankAccountsGetCreateUpdateModel } from "../../funcs/loanWritebackBankAccountsGetCreateUpdateModel.js";
import * as operations from "../../sdk/models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetCreateUpdateBankAccountsModelRequest$inboundSchema,
};

export const tool$loanWritebackBankAccountsGetCreateUpdateModel: ToolDefinition<
  typeof args
> = {
  name: "loan-writeback-bank-accounts-get-create-update-model",
  description: `Get create/update bank account model

The *Get create/update bank account model* endpoint returns the expected data for the request payload when creating and updating a [bank account](https://docs.codat.io/lending-api#/schemas/BankAccount) for a given company and integration.

[Bank accounts](https://docs.codat.io/lending-api#/schemas/BankAccount) are financial accounts maintained by a bank or other financial institution.

**Integration-specific behaviour**

See the *response examples* for integration-specific indicative models.
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] =
      await loanWritebackBankAccountsGetCreateUpdateModel(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
