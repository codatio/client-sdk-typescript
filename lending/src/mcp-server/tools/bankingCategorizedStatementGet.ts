/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { bankingCategorizedStatementGet } from "../../funcs/bankingCategorizedStatementGet.js";
import * as operations from "../../sdk/models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetCategorizedBankStatementRequest$inboundSchema,
};

export const tool$bankingCategorizedStatementGet: ToolDefinition<typeof args> =
  {
    name: "banking-categorized-statement-get",
    description: `Get categorized bank statement

> **Categorization engine**
>
> The categorization engine uses machine learning and has been fully trained against Plaid and TrueLayer banking data sources. It is not fully trained against the Basiq banking data source.

The _Get categorized bank statement_ endpoint provides a fully categorized list of banking transactions for a company. Accounts and transaction data are obtained from the company's banking data sources.`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] = await bankingCategorizedStatementGet(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
