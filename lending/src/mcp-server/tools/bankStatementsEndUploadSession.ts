/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { bankStatementsEndUploadSession } from "../../funcs/bankStatementsEndUploadSession.js";
import * as operations from "../../sdk/models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.EndBankStatementUploadSessionRequest$inboundSchema,
};

export const tool$bankStatementsEndUploadSession: ToolDefinition<typeof args> =
  {
    name: "bank-statements-end-upload-session",
    description: `End upload session

Use the *End upload session* endpoint to finalize a bank statement upload session. Include a \`status\` in the request body to indicate if you want to cancel the processing of the dataset or trigger the ingestion and enrichment of the data.

A session is a one-time process that enables you to upload bank statements to Codat. It will time out after 90 minutes if no data is uploaded.`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] = await bankStatementsEndUploadSession(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      return formatResult(void 0, apiCall);
    },
  };
