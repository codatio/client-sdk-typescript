/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { bankStatementsStartUploadSession } from "../../funcs/bankStatementsStartUploadSession.js";
import * as operations from "../../sdk/models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.StartBankStatementUploadSessionRequest$inboundSchema,
};

export const tool$bankStatementsStartUploadSession: ToolDefinition<
  typeof args
> = {
  name: "bank-statements-start-upload-session",
  description: `Start upload session

Use the *Start upload session* endpoint to initiate a bank statement upload session for a given company.

A session is a one-time process that enables you to upload bank statements to Codat. It will time out after 90 minutes if no data is uploaded. 

You can only have one active session per data type at a time. You can complete or cancel a session using the [*End upload session*](https://docs.codat.io/lending-api#/operations/end-bank-statement-upload-session) endpoint.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await bankStatementsStartUploadSession(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
