/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountsReceivableInvoicesList } from "../../funcs/accountsReceivableInvoicesList.js";
import * as operations from "../../sdk/models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.ListAccountingInvoicesRequest$inboundSchema,
};

export const tool$accountsReceivableInvoicesList: ToolDefinition<typeof args> =
  {
    name: "accounts-receivable-invoices-list",
    description: `List invoices

The *List invoices* endpoint returns a list of [invoices](https://docs.codat.io/lending-api#/schemas/Invoice) for a given company's connection.

[Invoices](https://docs.codat.io/lending-api#/schemas/Invoice) are itemized records of goods sold or services provided to a customer.

Before using this endpoint, you must have [retrieved data for the company](https://docs.codat.io/lending-api#/operations/refresh-company-data).
    
### Useful queries

- Outstanding invoices - \`query = amountDue > 0\`
- Invoices due after a certain date: \`query = dueDate > 2021-01-28\`

[Read more about querying](https://docs.codat.io/using-the-api/querying).

### Tips and traps

To access the \`paymentAllocations\` property, ensure that the \`payments\` data type is queued and cached in Codat before retrieving \`invoices\` from Codat's cache.
`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] = await accountsReceivableInvoicesList(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
