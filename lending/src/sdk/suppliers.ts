/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountsPayableSuppliersDownloadAttachment } from "../funcs/accountsPayableSuppliersDownloadAttachment.js";
import { accountsPayableSuppliersGet } from "../funcs/accountsPayableSuppliersGet.js";
import { accountsPayableSuppliersGetAttachment } from "../funcs/accountsPayableSuppliersGetAttachment.js";
import { accountsPayableSuppliersList } from "../funcs/accountsPayableSuppliersList.js";
import { accountsPayableSuppliersListAttachments } from "../funcs/accountsPayableSuppliersListAttachments.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Suppliers extends ClientSDK {
  /**
   * List suppliers
   *
   * @remarks
   * The *List suppliers* endpoint returns a list of [suppliers](https://docs.codat.io/lending-api#/schemas/Supplier) for a given company's connection.
   *
   * [Suppliers](https://docs.codat.io/lending-api#/schemas/Supplier) are people or organizations that provide something, such as a product or service.
   *
   * Before using this endpoint, you must have [retrieved data for the company](https://docs.codat.io/lending-api#/operations/refresh-company-data).
   */
  async list(
    request: operations.ListAccountingSuppliersRequest,
    options?: RequestOptions,
  ): Promise<shared.AccountingSuppliers> {
    return unwrapAsync(accountsPayableSuppliersList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get supplier
   *
   * @remarks
   * The *Get supplier* endpoint returns a single supplier for a given supplierId.
   *
   * [Suppliers](https://docs.codat.io/lending-api#/schemas/Supplier) are people or organizations that provide something, such as a product or service.
   *
   * Check out our [coverage explorer](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=suppliers) for integrations that support getting a specific supplier.
   *
   * Before using this endpoint, you must have [retrieved data for the company](https://docs.codat.io/lending-api#/operations/refresh-company-data).
   */
  async get(
    request: operations.GetAccountingSupplierRequest,
    options?: RequestOptions,
  ): Promise<shared.AccountingSupplier> {
    return unwrapAsync(accountsPayableSuppliersGet(
      this,
      request,
      options,
    ));
  }

  /**
   * List supplier attachments
   *
   * @remarks
   * The *List supplier attachments* endpoint returns a list of attachments available to download for given `supplierId`.
   *
   * [Suppliers](https://docs.codat.io/lending-api#/schemas/Supplier) are people or organizations that provide something, such as a product or service.
   *
   * Check out our [coverage explorer](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=suppliers) for integrations that support listing supplier attachments.
   */
  async listAttachments(
    request: operations.ListAccountingSupplierAttachmentsRequest,
    options?: RequestOptions,
  ): Promise<shared.Attachments> {
    return unwrapAsync(accountsPayableSuppliersListAttachments(
      this,
      request,
      options,
    ));
  }

  /**
   * Get supplier attachment
   *
   * @remarks
   * The *Get supplier attachment* endpoint returns a specific attachment for a given `supplierId` and `attachmentId`.
   *
   * [Suppliers](https://docs.codat.io/lending-api#/schemas/Supplier) are people or organizations that provide something, such as a product or service.
   *
   * Check out our [coverage explorer](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=suppliers) for integrations that support getting a supplier attachment.
   */
  async getAttachment(
    request: operations.GetAccountingSupplierAttachmentRequest,
    options?: RequestOptions,
  ): Promise<shared.AccountingAttachment> {
    return unwrapAsync(accountsPayableSuppliersGetAttachment(
      this,
      request,
      options,
    ));
  }

  /**
   * Download supplier attachment
   *
   * @remarks
   * The *Download supplier attachment* endpoint downloads a specific attachment for a given `supplierId` and `attachmentId`.
   *
   * [Suppliers](https://docs.codat.io/lending-api#/schemas/Supplier) are people or organizations that provide something, such as a product or service.
   *
   * Check out our [coverage explorer](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=suppliers) for integrations that support downloading a supplier attachment.
   */
  async downloadAttachment(
    request: operations.DownloadAccountingSupplierAttachmentRequest,
    options?: RequestOptions,
  ): Promise<ReadableStream<Uint8Array>> {
    return unwrapAsync(accountsPayableSuppliersDownloadAttachment(
      this,
      request,
      options,
    ));
  }
}
