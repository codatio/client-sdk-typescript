/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountsPayableBillPaymentsGet } from "../funcs/accountsPayableBillPaymentsGet.js";
import { accountsPayableBillPaymentsList } from "../funcs/accountsPayableBillPaymentsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class BillPayments extends ClientSDK {
  /**
   * List bill payments
   *
   * @remarks
   * The *List bill payments* endpoint returns a list of [bill payments](https://docs.codat.io/lending-api#/schemas/BillPayment) for a given company's connection.
   *
   * [Bill payments](https://docs.codat.io/lending-api#/schemas/BillPayment) are an allocation of money within any customer accounts payable account.
   *
   * Before using this endpoint, you must have [retrieved data for the company](https://docs.codat.io/lending-api#/operations/refresh-company-data).
   */
  async list(
    request: operations.ListAccountingBillPaymentsRequest,
    options?: RequestOptions,
  ): Promise<shared.AccountingBillPayments> {
    return unwrapAsync(accountsPayableBillPaymentsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get bill payment
   *
   * @remarks
   * The *Get bill payment* endpoint returns a single bill payment for a given billPaymentId.
   *
   * [Bill payments](https://docs.codat.io/lending-api#/schemas/BillPayment) are an allocation of money within any customer accounts payable account.
   *
   * Check out our [coverage explorer](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=billPayments) for integrations that support getting a specific bill payment.
   *
   * Before using this endpoint, you must have [retrieved data for the company](https://docs.codat.io/lending-api#/operations/refresh-company-data).
   */
  async get(
    request: operations.GetAccountingBillPaymentRequest,
    options?: RequestOptions,
  ): Promise<shared.AccountingBillPayment> {
    return unwrapAsync(accountsPayableBillPaymentsGet(
      this,
      request,
      options,
    ));
  }
}
