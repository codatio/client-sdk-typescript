/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { loanWritebackSuppliersCreate } from "../funcs/loanWritebackSuppliersCreate.js";
import { loanWritebackSuppliersGetCreateUpdateModel } from "../funcs/loanWritebackSuppliersGetCreateUpdateModel.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class CodatLendingSuppliers extends ClientSDK {
  /**
   * Get create/update supplier model
   *
   * @remarks
   * The *Get create/update supplier model* endpoint returns the expected data for the request payload when creating and updating a [supplier](https://docs.codat.io/lending-api#/schemas/Supplier) for a given company and integration.
   *
   * [Suppliers](https://docs.codat.io/lending-api#/schemas/Supplier) are people or organizations that provide something, such as a product or service.
   *
   * **Integration-specific behaviour**
   *
   * See the *response examples* for integration-specific indicative models.
   */
  async getCreateUpdateModel(
    request: operations.GetCreateUpdateSuppliersModelRequest,
    options?: RequestOptions,
  ): Promise<shared.PushOption> {
    return unwrapAsync(loanWritebackSuppliersGetCreateUpdateModel(
      this,
      request,
      options,
    ));
  }

  /**
   * Create supplier
   *
   * @remarks
   * The *Create supplier* endpoint creates a new [supplier](https://docs.codat.io/lending-api#/schemas/Supplier) for a given company's connection.
   *
   * [Suppliers](https://docs.codat.io/lending-api#/schemas/Supplier) are people or organizations that provide something, such as a product or service.
   *
   * **Integration-specific behaviour**
   *
   * Required data may vary by integration. To see what data to post, first call [Get create/update supplier model](https://docs.codat.io/lending-api#/operations/get-create-update-suppliers-model).
   */
  async create(
    request: operations.CreateSupplierRequest,
    options?: RequestOptions,
  ): Promise<shared.AccountingCreateSupplierResponse> {
    return unwrapAsync(loanWritebackSuppliersCreate(
      this,
      request,
      options,
    ));
  }
}
