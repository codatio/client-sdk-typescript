/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { salesMetricsGetCustomerRetention } from "../funcs/salesMetricsGetCustomerRetention.js";
import { salesMetricsGetLifetimeValue } from "../funcs/salesMetricsGetLifetimeValue.js";
import { salesMetricsGetRevenue } from "../funcs/salesMetricsGetRevenue.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Metrics extends ClientSDK {
  /**
   * Get commerce revenue metrics
   *
   * @remarks
   * The *Get revenue report* endpoint returns the revenue and revenue growth for a specific company connection over one or more periods of time.
   *
   * This detail helps you assess a merchant's health and advise them on performance improvement strategies. It also provides you with key insights you need to assess the credit risk of a company.
   *
   * Learn more about the formulas used to calculate the revenue metrics [here](https://docs.codat.io/lending/commerce-metrics/overview#what-metrics-are-available).
   *
   * Refer to the [commerce reporting structure](https://docs.codat.io/lending/commerce-metrics/reporting-structure) page for more details on commerce reports in Lending.
   *
   * #### Response structure
   *
   * The Revenue report's dimensions and measures are:
   *
   * | Index         | Dimensions |
   * |---------------|------------|
   * |   `index` = 0 | Period     |
   * |   `index` = 1 | Revenue    |
   *
   * | Index         | Measures                                                                                                                 |
   * |---------------|--------------------------------------------------------------------------------------------------------------------------|
   * | `index` = 0   | Value                                                                                                                    |
   * | `index` = 1   | Percentage change, defined as the change between the current and previous periods' values and expressed as a percentage. |
   *
   * The report data then combines multiple reporting dimensions and measures and outputs the value of each combination.
   */
  async getRevenue(
    request: operations.GetCommerceRevenueMetricsRequest,
    options?: RequestOptions,
  ): Promise<shared.CommerceReport> {
    return unwrapAsync(salesMetricsGetRevenue(
      this,
      request,
      options,
    ));
  }

  /**
   * Get customer retention metrics
   *
   * @remarks
   * The *Get customer retention metrics* endpoint returns customer retention insights for a specific company's commerce connection over one or more periods of time.
   *
   * This detail helps you assess a merchant's health and advise them on performance improvement strategies. It also provides you with key insights you need to assess the credit risk of a company.
   *
   * #### Customer retention metrics
   *
   * - __Existing customers__: the number of unique customers that have placed an order(s) in the specified period and any previous period.
   * - __New customers__: the number of unique customers that have placed an order(s) in the specified period and none in any previous period.
   * - __Total customers__: the total number of existing and new customers within the specified period.
   * - __Retention rate__: the ratio of existing customers within the specified period compared to the total customers at the end of the previous period represented as a percentage.
   * - __Repeat rate__: the ratio of existing customers to total customers over the specified period represented as a percentage.
   *
   * Learn more about the formulas used to calculate customer retention metrics [here](https://docs.codat.io/lending/commerce-metrics/overview#what-metrics-are-available).
   *
   * #### Response structure
   *
   * The Customer retention report's dimensions and measures are:
   *
   * | Index                       | Dimensions                 |
   * |-----------------------------|----------------------------|
   * | `index` = 0                 | Period                     |
   * | `index` = 1                 | Customer retention metrics |
   *
   * | Index                | Measures    |
   * |----------------------|------------|
   * | `index` = 0          | Count      |
   * | `index` = 1          | Percentage |
   *
   * The report data then combines multiple reporting dimensions and measures and outputs the value of each combination.
   */
  async getCustomerRetention(
    request: operations.GetCommerceCustomerRetentionMetricsRequest,
    options?: RequestOptions,
  ): Promise<shared.CommerceReport> {
    return unwrapAsync(salesMetricsGetCustomerRetention(
      this,
      request,
      options,
    ));
  }

  /**
   * Get lifetime value metrics
   *
   * @remarks
   * The *Get lifetime value metrics* endpoint returns the average revenue that a specific company will generate throughout its lifespan over one or more periods of time.
   *
   * This detail helps you assess a merchant's health and advise them on performance improvement strategies. It also provides you with key insights you need to assess the credit risk of a company.
   *
   * Learn more about the formulas used to calculate the lifetime value metrics [here](https://docs.codat.io/lending/commerce-metrics/overview#what-metrics-are-available).
   *
   * Refer to the [commerce reporting structure](https://docs.codat.io/lending/commerce-metrics/reporting-structure) page for more detail on commerce reports in Lending.
   *
   * #### Response structure
   *
   * The Lifetime value report's dimensions and measures are:
   *
   * | Index         | Dimensions             |
   * |---------------|------------------------|
   * | `index` = 0   | Period                 |
   * | `index` = 1   | Lifetime value metrics |
   *
   * | Index             | Measures |
   * |-------------------|---------|
   * |   `index` = 1     | Value   |
   *
   * The report data then combines multiple reporting dimensions and measures and outputs the value of each combination.
   */
  async getLifetimeValue(
    request: operations.GetCommerceLifetimeValueMetricsRequest,
    options?: RequestOptions,
  ): Promise<shared.CommerceReport> {
    return unwrapAsync(salesMetricsGetLifetimeValue(
      this,
      request,
      options,
    ));
  }
}
