/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClientSDK } from "../lib/sdks.js";
import { AccountingBankData } from "./accountingbankdata.js";
import { AccountsPayable } from "./accountspayable.js";
import { AccountsReceivable } from "./accountsreceivable.js";
import { Banking } from "./banking.js";
import { BankStatements } from "./bankstatements.js";
import { Companies } from "./companies.js";
import { CompanyInfo } from "./companyinfo.js";
import { Connections } from "./connections.js";
import { DataIntegrity } from "./dataintegrity.js";
import { ExcelReports } from "./excelreports.js";
import { FileUpload } from "./fileupload.js";
import { FinancialStatements } from "./financialstatements.js";
import { Liabilities } from "./liabilities.js";
import { LoanWriteback } from "./loanwriteback.js";
import { ManageData } from "./managedata.js";
import { Sales } from "./sales.js";
import { Transactions } from "./transactions.js";

export class CodatLending extends ClientSDK {
  private _companies?: Companies;
  get companies(): Companies {
    return (this._companies ??= new Companies(this.options$));
  }

  private _connections?: Connections;
  get connections(): Connections {
    return (this._connections ??= new Connections(this.options$));
  }

  private _manageData?: ManageData;
  get manageData(): ManageData {
    return (this._manageData ??= new ManageData(this.options$));
  }

  private _dataIntegrity?: DataIntegrity;
  get dataIntegrity(): DataIntegrity {
    return (this._dataIntegrity ??= new DataIntegrity(this.options$));
  }

  private _financialStatements?: FinancialStatements;
  get financialStatements(): FinancialStatements {
    return (this._financialStatements ??= new FinancialStatements(
      this.options$,
    ));
  }

  private _banking?: Banking;
  get banking(): Banking {
    return (this._banking ??= new Banking(this.options$));
  }

  private _accountsReceivable?: AccountsReceivable;
  get accountsReceivable(): AccountsReceivable {
    return (this._accountsReceivable ??= new AccountsReceivable(this.options$));
  }

  private _liabilities?: Liabilities;
  get liabilities(): Liabilities {
    return (this._liabilities ??= new Liabilities(this.options$));
  }

  private _sales?: Sales;
  get sales(): Sales {
    return (this._sales ??= new Sales(this.options$));
  }

  private _excelReports?: ExcelReports;
  get excelReports(): ExcelReports {
    return (this._excelReports ??= new ExcelReports(this.options$));
  }

  private _transactions?: Transactions;
  get transactions(): Transactions {
    return (this._transactions ??= new Transactions(this.options$));
  }

  private _accountsPayable?: AccountsPayable;
  get accountsPayable(): AccountsPayable {
    return (this._accountsPayable ??= new AccountsPayable(this.options$));
  }

  private _companyInfo?: CompanyInfo;
  get companyInfo(): CompanyInfo {
    return (this._companyInfo ??= new CompanyInfo(this.options$));
  }

  private _accountingBankData?: AccountingBankData;
  get accountingBankData(): AccountingBankData {
    return (this._accountingBankData ??= new AccountingBankData(this.options$));
  }

  private _fileUpload?: FileUpload;
  get fileUpload(): FileUpload {
    return (this._fileUpload ??= new FileUpload(this.options$));
  }

  private _loanWriteback?: LoanWriteback;
  get loanWriteback(): LoanWriteback {
    return (this._loanWriteback ??= new LoanWriteback(this.options$));
  }

  private _bankStatements?: BankStatements;
  get bankStatements(): BankStatements {
    return (this._bankStatements ??= new BankStatements(this.options$));
  }
}
