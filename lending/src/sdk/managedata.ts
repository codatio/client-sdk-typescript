/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { manageDataGetStatus } from "../funcs/manageDataGetStatus.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import { PullOperations } from "./pulloperations.js";
import { Refresh } from "./refresh.js";
import { unwrapAsync } from "./types/fp.js";

export class ManageData extends ClientSDK {
  private _refresh?: Refresh;
  get refresh(): Refresh {
    return (this._refresh ??= new Refresh(this.options$));
  }

  private _pullOperations?: PullOperations;
  get pullOperations(): PullOperations {
    return (this._pullOperations ??= new PullOperations(this.options$));
  }

  /**
   * Get data status
   *
   * @remarks
   * Get the state of each data type for a company
   */
  async getStatus(
    request: operations.GetDataStatusRequest,
    options?: RequestOptions,
  ): Promise<operations.GetDataStatusDataStatuses> {
    return unwrapAsync(manageDataGetStatus(
      this,
      request,
      options,
    ));
  }
}
