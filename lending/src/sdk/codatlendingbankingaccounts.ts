/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { bankingAccountsGet } from "../funcs/bankingAccountsGet.js";
import { bankingAccountsList } from "../funcs/bankingAccountsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class CodatLendingBankingAccounts extends ClientSDK {
  /**
   * List accounts
   *
   * @remarks
   * The *List accounts* endpoint returns a list of [accounts](https://docs.codat.io/lending-api#/schemas/Account) for a given company's connection.
   *
   * [Accounts](https://docs.codat.io/lending-api#/schemas/Account) are financial accounts maintained by a bank or other financial institution.
   *
   * Before using this endpoint, you must have [retrieved data for the company](https://docs.codat.io/lending-api#/operations/refresh-company-data).
   */
  async list(
    request: operations.ListBankingAccountsRequest,
    options?: RequestOptions,
  ): Promise<shared.BankingAccounts> {
    return unwrapAsync(bankingAccountsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get account
   *
   * @remarks
   * The *Get account* endpoint returns a single account for a given accountId.
   *
   * [Accounts](https://docs.codat.io/lending-api#/schemas/Account) are financial accounts maintained by a bank or other financial institution.
   *
   * Before using this endpoint, you must have [retrieved data for the company](https://docs.codat.io/lending-api#/operations/refresh-company-data).
   */
  async get(
    request: operations.GetBankingAccountRequest,
    options?: RequestOptions,
  ): Promise<shared.BankingAccount> {
    return unwrapAsync(bankingAccountsGet(
      this,
      request,
      options,
    ));
  }
}
