/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The type of the address
 */
export const CommerceAddressType = {
  Billing: "Billing",
  Delivery: "Delivery",
  Order: "Order",
  Inventory: "Inventory",
  Unknown: "Unknown",
} as const;
/**
 * The type of the address
 */
export type CommerceAddressType = ClosedEnum<typeof CommerceAddressType>;

/** @internal */
export const CommerceAddressType$inboundSchema: z.ZodNativeEnum<
  typeof CommerceAddressType
> = z.nativeEnum(CommerceAddressType);

/** @internal */
export const CommerceAddressType$outboundSchema: z.ZodNativeEnum<
  typeof CommerceAddressType
> = CommerceAddressType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CommerceAddressType$ {
  /** @deprecated use `CommerceAddressType$inboundSchema` instead. */
  export const inboundSchema = CommerceAddressType$inboundSchema;
  /** @deprecated use `CommerceAddressType$outboundSchema` instead. */
  export const outboundSchema = CommerceAddressType$outboundSchema;
}
