/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type DataIntegrityConnectionId = {
  /**
   * An array of strings. The connection IDs for the type specified in the url.
   */
  source?: Array<string> | undefined;
  /**
   * An array of strings. The connection IDs for the type being matched to.
   */
  target?: Array<string> | undefined;
};

/** @internal */
export const DataIntegrityConnectionId$inboundSchema: z.ZodType<
  DataIntegrityConnectionId,
  z.ZodTypeDef,
  unknown
> = z.object({
  source: z.array(z.string()).optional(),
  target: z.array(z.string()).optional(),
});

/** @internal */
export type DataIntegrityConnectionId$Outbound = {
  source?: Array<string> | undefined;
  target?: Array<string> | undefined;
};

/** @internal */
export const DataIntegrityConnectionId$outboundSchema: z.ZodType<
  DataIntegrityConnectionId$Outbound,
  z.ZodTypeDef,
  DataIntegrityConnectionId
> = z.object({
  source: z.array(z.string()).optional(),
  target: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataIntegrityConnectionId$ {
  /** @deprecated use `DataIntegrityConnectionId$inboundSchema` instead. */
  export const inboundSchema = DataIntegrityConnectionId$inboundSchema;
  /** @deprecated use `DataIntegrityConnectionId$outboundSchema` instead. */
  export const outboundSchema = DataIntegrityConnectionId$outboundSchema;
  /** @deprecated use `DataIntegrityConnectionId$Outbound` instead. */
  export type Outbound = DataIntegrityConnectionId$Outbound;
}
