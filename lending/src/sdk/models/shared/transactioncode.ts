/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Code to identify the underlying transaction.
 */
export const TransactionCode = {
  Unknown: "Unknown",
  Fee: "Fee",
  Payment: "Payment",
  Cash: "Cash",
  Transfer: "Transfer",
  Interest: "Interest",
  Cashback: "Cashback",
  Cheque: "Cheque",
  DirectDebit: "DirectDebit",
  Purchase: "Purchase",
  StandingOrder: "StandingOrder",
  Adjustment: "Adjustment",
  Credit: "Credit",
  Other: "Other",
  NotSupported: "NotSupported",
} as const;
/**
 * Code to identify the underlying transaction.
 */
export type TransactionCode = ClosedEnum<typeof TransactionCode>;

/** @internal */
export const TransactionCode$inboundSchema: z.ZodNativeEnum<
  typeof TransactionCode
> = z.nativeEnum(TransactionCode);

/** @internal */
export const TransactionCode$outboundSchema: z.ZodNativeEnum<
  typeof TransactionCode
> = TransactionCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TransactionCode$ {
  /** @deprecated use `TransactionCode$inboundSchema` instead. */
  export const inboundSchema = TransactionCode$inboundSchema;
  /** @deprecated use `TransactionCode$outboundSchema` instead. */
  export const outboundSchema = TransactionCode$outboundSchema;
}
