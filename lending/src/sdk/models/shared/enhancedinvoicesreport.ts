/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  EnhancedInvoiceReportItem,
  EnhancedInvoiceReportItem$inboundSchema,
  EnhancedInvoiceReportItem$Outbound,
  EnhancedInvoiceReportItem$outboundSchema,
} from "./enhancedinvoicereportitem.js";
import {
  ReportInfo,
  ReportInfo$inboundSchema,
  ReportInfo$Outbound,
  ReportInfo$outboundSchema,
} from "./reportinfo.js";

/**
 * The enhanced invoices report takes the key elements of the Invoices report verifying those marked as paid in the accounting software have actually been paid by matching with the bank statement.
 */
export type EnhancedInvoicesReport = {
  /**
   * Report additional information, which is specific to Lending API reports.
   */
  reportInfo?: ReportInfo | undefined;
  reportItems?: Array<EnhancedInvoiceReportItem> | undefined;
};

/** @internal */
export const EnhancedInvoicesReport$inboundSchema: z.ZodType<
  EnhancedInvoicesReport,
  z.ZodTypeDef,
  unknown
> = z.object({
  reportInfo: ReportInfo$inboundSchema.optional(),
  reportItems: z.array(EnhancedInvoiceReportItem$inboundSchema).optional(),
});

/** @internal */
export type EnhancedInvoicesReport$Outbound = {
  reportInfo?: ReportInfo$Outbound | undefined;
  reportItems?: Array<EnhancedInvoiceReportItem$Outbound> | undefined;
};

/** @internal */
export const EnhancedInvoicesReport$outboundSchema: z.ZodType<
  EnhancedInvoicesReport$Outbound,
  z.ZodTypeDef,
  EnhancedInvoicesReport
> = z.object({
  reportInfo: ReportInfo$outboundSchema.optional(),
  reportItems: z.array(EnhancedInvoiceReportItem$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EnhancedInvoicesReport$ {
  /** @deprecated use `EnhancedInvoicesReport$inboundSchema` instead. */
  export const inboundSchema = EnhancedInvoicesReport$inboundSchema;
  /** @deprecated use `EnhancedInvoicesReport$outboundSchema` instead. */
  export const outboundSchema = EnhancedInvoicesReport$outboundSchema;
  /** @deprecated use `EnhancedInvoicesReport$Outbound` instead. */
  export type Outbound = EnhancedInvoicesReport$Outbound;
}

export function enhancedInvoicesReportToJSON(
  enhancedInvoicesReport: EnhancedInvoicesReport,
): string {
  return JSON.stringify(
    EnhancedInvoicesReport$outboundSchema.parse(enhancedInvoicesReport),
  );
}

export function enhancedInvoicesReportFromJSON(
  jsonString: string,
): SafeParseResult<EnhancedInvoicesReport, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EnhancedInvoicesReport$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EnhancedInvoicesReport' from JSON`,
  );
}
