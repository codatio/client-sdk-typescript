/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { Decimal as Decimal$ } from "../../types/decimal.js";

export type ProductPrice = {
  /**
   * The currency data type in Codat is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, e.g. _GBP_.
   *
   * @remarks
   *
   * ## Unknown currencies
   *
   * In line with the ISO 4217 specification, the code _XXX_ is used when the data source does not return a currency for a transaction.
   *
   * There are only a very small number of edge cases where this currency code is returned by the Codat system.
   */
  currency?: string | undefined;
  /**
   * The product variant's unit price.
   */
  unitPrice?: Decimal$ | number | undefined;
};

/** @internal */
export const ProductPrice$inboundSchema: z.ZodType<
  ProductPrice,
  z.ZodTypeDef,
  unknown
> = z.object({
  currency: z.string().optional(),
  unitPrice: z.number().transform(v => new Decimal$(v)).optional(),
});

/** @internal */
export type ProductPrice$Outbound = {
  currency?: string | undefined;
  unitPrice?: number | undefined;
};

/** @internal */
export const ProductPrice$outboundSchema: z.ZodType<
  ProductPrice$Outbound,
  z.ZodTypeDef,
  ProductPrice
> = z.object({
  currency: z.string().optional(),
  unitPrice: z.union([z.instanceof(Decimal$), z.number()]).transform(v =>
    typeof v === "number" ? v : v.toNumber()
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductPrice$ {
  /** @deprecated use `ProductPrice$inboundSchema` instead. */
  export const inboundSchema = ProductPrice$inboundSchema;
  /** @deprecated use `ProductPrice$outboundSchema` instead. */
  export const outboundSchema = ProductPrice$outboundSchema;
  /** @deprecated use `ProductPrice$Outbound` instead. */
  export type Outbound = ProductPrice$Outbound;
}
