/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  AccountCategoryLevel,
  AccountCategoryLevel$inboundSchema,
  AccountCategoryLevel$Outbound,
  AccountCategoryLevel$outboundSchema,
} from "./accountcategorylevel.js";

export type EnhancedReportAccountCategory = {
  /**
   * Returns a status of "Suggested" or "Confirmed". If an account has a confirmed category, it will replace any suggested category returned.
   */
  status?: string | undefined;
  levels?: Array<AccountCategoryLevel> | undefined;
};

/** @internal */
export const EnhancedReportAccountCategory$inboundSchema: z.ZodType<
  EnhancedReportAccountCategory,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.string().optional(),
  levels: z.array(AccountCategoryLevel$inboundSchema).optional(),
});

/** @internal */
export type EnhancedReportAccountCategory$Outbound = {
  status?: string | undefined;
  levels?: Array<AccountCategoryLevel$Outbound> | undefined;
};

/** @internal */
export const EnhancedReportAccountCategory$outboundSchema: z.ZodType<
  EnhancedReportAccountCategory$Outbound,
  z.ZodTypeDef,
  EnhancedReportAccountCategory
> = z.object({
  status: z.string().optional(),
  levels: z.array(AccountCategoryLevel$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EnhancedReportAccountCategory$ {
  /** @deprecated use `EnhancedReportAccountCategory$inboundSchema` instead. */
  export const inboundSchema = EnhancedReportAccountCategory$inboundSchema;
  /** @deprecated use `EnhancedReportAccountCategory$outboundSchema` instead. */
  export const outboundSchema = EnhancedReportAccountCategory$outboundSchema;
  /** @deprecated use `EnhancedReportAccountCategory$Outbound` instead. */
  export type Outbound = EnhancedReportAccountCategory$Outbound;
}
