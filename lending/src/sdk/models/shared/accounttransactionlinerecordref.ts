/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Name of underlying data type.
 */
export const AccountTransactionLineRecordRefDataType = {
  BankTransactions: "bankTransactions",
  BillCreditNotes: "billCreditNotes",
  BillPayments: "billPayments",
  Bills: "bills",
  CreditNotes: "creditNotes",
  DirectCosts: "directCosts",
  DirectIncomes: "directIncomes",
  Invoices: "invoices",
  JournalEntries: "journalEntries",
  Payments: "payments",
  Transfers: "transfers",
} as const;
/**
 * Name of underlying data type.
 */
export type AccountTransactionLineRecordRefDataType = ClosedEnum<
  typeof AccountTransactionLineRecordRefDataType
>;

/**
 * Links an account transaction line to the underlying record that created it.
 */
export type AccountTransactionLineRecordRef = {
  /**
   * 'id' of the underlying record or data type.
   */
  id?: string | undefined;
  /**
   * Name of underlying data type.
   */
  dataType?: AccountTransactionLineRecordRefDataType | undefined;
};

/** @internal */
export const AccountTransactionLineRecordRefDataType$inboundSchema:
  z.ZodNativeEnum<typeof AccountTransactionLineRecordRefDataType> = z
    .nativeEnum(AccountTransactionLineRecordRefDataType);

/** @internal */
export const AccountTransactionLineRecordRefDataType$outboundSchema:
  z.ZodNativeEnum<typeof AccountTransactionLineRecordRefDataType> =
    AccountTransactionLineRecordRefDataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountTransactionLineRecordRefDataType$ {
  /** @deprecated use `AccountTransactionLineRecordRefDataType$inboundSchema` instead. */
  export const inboundSchema =
    AccountTransactionLineRecordRefDataType$inboundSchema;
  /** @deprecated use `AccountTransactionLineRecordRefDataType$outboundSchema` instead. */
  export const outboundSchema =
    AccountTransactionLineRecordRefDataType$outboundSchema;
}

/** @internal */
export const AccountTransactionLineRecordRef$inboundSchema: z.ZodType<
  AccountTransactionLineRecordRef,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  dataType: AccountTransactionLineRecordRefDataType$inboundSchema.optional(),
});

/** @internal */
export type AccountTransactionLineRecordRef$Outbound = {
  id?: string | undefined;
  dataType?: string | undefined;
};

/** @internal */
export const AccountTransactionLineRecordRef$outboundSchema: z.ZodType<
  AccountTransactionLineRecordRef$Outbound,
  z.ZodTypeDef,
  AccountTransactionLineRecordRef
> = z.object({
  id: z.string().optional(),
  dataType: AccountTransactionLineRecordRefDataType$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountTransactionLineRecordRef$ {
  /** @deprecated use `AccountTransactionLineRecordRef$inboundSchema` instead. */
  export const inboundSchema = AccountTransactionLineRecordRef$inboundSchema;
  /** @deprecated use `AccountTransactionLineRecordRef$outboundSchema` instead. */
  export const outboundSchema = AccountTransactionLineRecordRef$outboundSchema;
  /** @deprecated use `AccountTransactionLineRecordRef$Outbound` instead. */
  export type Outbound = AccountTransactionLineRecordRef$Outbound;
}
