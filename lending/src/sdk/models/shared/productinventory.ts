/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { Decimal as Decimal$ } from "../../types/decimal.js";
import {
  ProductInventoryLocation,
  ProductInventoryLocation$inboundSchema,
  ProductInventoryLocation$Outbound,
  ProductInventoryLocation$outboundSchema,
} from "./productinventorylocation.js";

/**
 * Information about the total inventory as well as the locations inventory is in.
 */
export type ProductInventory = {
  /**
   * The total quantity of stock remaining across locations.
   */
  totalQuantity?: Decimal$ | number | null | undefined;
  locations?: Array<ProductInventoryLocation> | undefined;
};

/** @internal */
export const ProductInventory$inboundSchema: z.ZodType<
  ProductInventory,
  z.ZodTypeDef,
  unknown
> = z.object({
  totalQuantity: z.nullable(z.number().transform(v => new Decimal$(v)))
    .optional(),
  locations: z.array(ProductInventoryLocation$inboundSchema).optional(),
});

/** @internal */
export type ProductInventory$Outbound = {
  totalQuantity?: number | null | undefined;
  locations?: Array<ProductInventoryLocation$Outbound> | undefined;
};

/** @internal */
export const ProductInventory$outboundSchema: z.ZodType<
  ProductInventory$Outbound,
  z.ZodTypeDef,
  ProductInventory
> = z.object({
  totalQuantity: z.nullable(
    z.union([z.instanceof(Decimal$), z.number()]).transform(v =>
      typeof v === "number" ? v : v.toNumber()
    ),
  ).optional(),
  locations: z.array(ProductInventoryLocation$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductInventory$ {
  /** @deprecated use `ProductInventory$inboundSchema` instead. */
  export const inboundSchema = ProductInventory$inboundSchema;
  /** @deprecated use `ProductInventory$outboundSchema` instead. */
  export const outboundSchema = ProductInventory$outboundSchema;
  /** @deprecated use `ProductInventory$Outbound` instead. */
  export type Outbound = ProductInventory$Outbound;
}
