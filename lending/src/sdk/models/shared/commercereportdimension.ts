/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type CommerceReportDimensionItems = {
  /**
   * The dimension's items index.
   */
  index?: number | undefined;
};

export type CommerceReportDimension = {
  /**
   * The dimension's index.
   */
  index?: number | undefined;
  /**
   * The dimension's display name.
   */
  displayName?: string | undefined;
  /**
   * The dimension's type.
   */
  type?: string | undefined;
  items?: Array<CommerceReportDimensionItems> | undefined;
};

/** @internal */
export const CommerceReportDimensionItems$inboundSchema: z.ZodType<
  CommerceReportDimensionItems,
  z.ZodTypeDef,
  unknown
> = z.object({
  index: z.number().int().optional(),
});

/** @internal */
export type CommerceReportDimensionItems$Outbound = {
  index?: number | undefined;
};

/** @internal */
export const CommerceReportDimensionItems$outboundSchema: z.ZodType<
  CommerceReportDimensionItems$Outbound,
  z.ZodTypeDef,
  CommerceReportDimensionItems
> = z.object({
  index: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CommerceReportDimensionItems$ {
  /** @deprecated use `CommerceReportDimensionItems$inboundSchema` instead. */
  export const inboundSchema = CommerceReportDimensionItems$inboundSchema;
  /** @deprecated use `CommerceReportDimensionItems$outboundSchema` instead. */
  export const outboundSchema = CommerceReportDimensionItems$outboundSchema;
  /** @deprecated use `CommerceReportDimensionItems$Outbound` instead. */
  export type Outbound = CommerceReportDimensionItems$Outbound;
}

/** @internal */
export const CommerceReportDimension$inboundSchema: z.ZodType<
  CommerceReportDimension,
  z.ZodTypeDef,
  unknown
> = z.object({
  index: z.number().int().optional(),
  displayName: z.string().optional(),
  type: z.string().optional(),
  items: z.array(z.lazy(() => CommerceReportDimensionItems$inboundSchema))
    .optional(),
});

/** @internal */
export type CommerceReportDimension$Outbound = {
  index?: number | undefined;
  displayName?: string | undefined;
  type?: string | undefined;
  items?: Array<CommerceReportDimensionItems$Outbound> | undefined;
};

/** @internal */
export const CommerceReportDimension$outboundSchema: z.ZodType<
  CommerceReportDimension$Outbound,
  z.ZodTypeDef,
  CommerceReportDimension
> = z.object({
  index: z.number().int().optional(),
  displayName: z.string().optional(),
  type: z.string().optional(),
  items: z.array(z.lazy(() => CommerceReportDimensionItems$outboundSchema))
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CommerceReportDimension$ {
  /** @deprecated use `CommerceReportDimension$inboundSchema` instead. */
  export const inboundSchema = CommerceReportDimension$inboundSchema;
  /** @deprecated use `CommerceReportDimension$outboundSchema` instead. */
  export const outboundSchema = CommerceReportDimension$outboundSchema;
  /** @deprecated use `CommerceReportDimension$Outbound` instead. */
  export type Outbound = CommerceReportDimension$Outbound;
}
