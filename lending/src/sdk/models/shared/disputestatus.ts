/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Current status of the dispute
 */
export const DisputeStatus = {
  Won: "Won",
  Lost: "Lost",
  Accepted: "Accepted",
  Processing: "Processing",
  ChargeRefunded: "ChargeRefunded",
  EvidenceRequired: "EvidenceRequired",
  InquiryEvidenceRequired: "InquiryEvidenceRequired",
  InquiryProcessing: "InquiryProcessing",
  InquiryClosed: "InquiryClosed",
  WaitingThirdParty: "WaitingThirdParty",
  Unknown: "Unknown",
} as const;
/**
 * Current status of the dispute
 */
export type DisputeStatus = ClosedEnum<typeof DisputeStatus>;

/** @internal */
export const DisputeStatus$inboundSchema: z.ZodNativeEnum<
  typeof DisputeStatus
> = z.nativeEnum(DisputeStatus);

/** @internal */
export const DisputeStatus$outboundSchema: z.ZodNativeEnum<
  typeof DisputeStatus
> = DisputeStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DisputeStatus$ {
  /** @deprecated use `DisputeStatus$inboundSchema` instead. */
  export const inboundSchema = DisputeStatus$inboundSchema;
  /** @deprecated use `DisputeStatus$outboundSchema` instead. */
  export const outboundSchema = DisputeStatus$outboundSchema;
}
