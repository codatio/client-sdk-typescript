/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The Payment Method to which the payment is linked in the accounting software.
 */
export type PaymentMethodRef = {
  /**
   * The unique identifier of the location being referenced.
   */
  id: string;
  /**
   * Name of the location being referenced.
   */
  name?: string | undefined;
};

/** @internal */
export const PaymentMethodRef$inboundSchema: z.ZodType<
  PaymentMethodRef,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  name: z.string().optional(),
});

/** @internal */
export type PaymentMethodRef$Outbound = {
  id: string;
  name?: string | undefined;
};

/** @internal */
export const PaymentMethodRef$outboundSchema: z.ZodType<
  PaymentMethodRef$Outbound,
  z.ZodTypeDef,
  PaymentMethodRef
> = z.object({
  id: z.string(),
  name: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentMethodRef$ {
  /** @deprecated use `PaymentMethodRef$inboundSchema` instead. */
  export const inboundSchema = PaymentMethodRef$inboundSchema;
  /** @deprecated use `PaymentMethodRef$outboundSchema` instead. */
  export const outboundSchema = PaymentMethodRef$outboundSchema;
  /** @deprecated use `PaymentMethodRef$Outbound` instead. */
  export type Outbound = PaymentMethodRef$Outbound;
}

export function paymentMethodRefToJSON(
  paymentMethodRef: PaymentMethodRef,
): string {
  return JSON.stringify(
    PaymentMethodRef$outboundSchema.parse(paymentMethodRef),
  );
}

export function paymentMethodRefFromJSON(
  jsonString: string,
): SafeParseResult<PaymentMethodRef, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaymentMethodRef$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaymentMethodRef' from JSON`,
  );
}
