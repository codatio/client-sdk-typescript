/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Links the current record to the underlying record or data type that created it.
 *
 * @remarks
 *
 * For example, if a journal entry is generated based on an invoice, this property allows you to connect the journal entry to the underlying invoice in our data model.
 */
export type RecordRef = {
  /**
   * 'id' of the underlying record or data type.
   */
  id?: string | undefined;
  /**
   * Allowed name of the 'dataType'.
   */
  dataType?: string | undefined;
};

/** @internal */
export const RecordRef$inboundSchema: z.ZodType<
  RecordRef,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  dataType: z.string().optional(),
});

/** @internal */
export type RecordRef$Outbound = {
  id?: string | undefined;
  dataType?: string | undefined;
};

/** @internal */
export const RecordRef$outboundSchema: z.ZodType<
  RecordRef$Outbound,
  z.ZodTypeDef,
  RecordRef
> = z.object({
  id: z.string().optional(),
  dataType: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecordRef$ {
  /** @deprecated use `RecordRef$inboundSchema` instead. */
  export const inboundSchema = RecordRef$inboundSchema;
  /** @deprecated use `RecordRef$outboundSchema` instead. */
  export const outboundSchema = RecordRef$outboundSchema;
  /** @deprecated use `RecordRef$Outbound` instead. */
  export type Outbound = RecordRef$Outbound;
}
