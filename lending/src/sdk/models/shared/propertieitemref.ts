/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Reference to the item the line is linked to.
 */
export type PropertieItemRef = {
  /**
   * Unique identifier for the item in the accounting software.
   */
  id: string;
  /**
   * Name of the item in the accounting software.
   */
  name?: string | null | undefined;
};

/** @internal */
export const PropertieItemRef$inboundSchema: z.ZodType<
  PropertieItemRef,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  name: z.nullable(z.string()).optional(),
});

/** @internal */
export type PropertieItemRef$Outbound = {
  id: string;
  name?: string | null | undefined;
};

/** @internal */
export const PropertieItemRef$outboundSchema: z.ZodType<
  PropertieItemRef$Outbound,
  z.ZodTypeDef,
  PropertieItemRef
> = z.object({
  id: z.string(),
  name: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertieItemRef$ {
  /** @deprecated use `PropertieItemRef$inboundSchema` instead. */
  export const inboundSchema = PropertieItemRef$inboundSchema;
  /** @deprecated use `PropertieItemRef$outboundSchema` instead. */
  export const outboundSchema = PropertieItemRef$outboundSchema;
  /** @deprecated use `PropertieItemRef$Outbound` instead. */
  export type Outbound = PropertieItemRef$Outbound;
}

export function propertieItemRefToJSON(
  propertieItemRef: PropertieItemRef,
): string {
  return JSON.stringify(
    PropertieItemRef$outboundSchema.parse(propertieItemRef),
  );
}

export function propertieItemRefFromJSON(
  jsonString: string,
): SafeParseResult<PropertieItemRef, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PropertieItemRef$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PropertieItemRef' from JSON`,
  );
}
