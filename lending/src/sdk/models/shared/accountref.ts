/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * An account reference containing the account id and name.
 */
export type AccountRef = {
  /**
   * The id of the account.
   */
  id?: string | undefined;
  /**
   * The name of the account.
   */
  name?: string | undefined;
};

/** @internal */
export const AccountRef$inboundSchema: z.ZodType<
  AccountRef,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
});

/** @internal */
export type AccountRef$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
};

/** @internal */
export const AccountRef$outboundSchema: z.ZodType<
  AccountRef$Outbound,
  z.ZodTypeDef,
  AccountRef
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountRef$ {
  /** @deprecated use `AccountRef$inboundSchema` instead. */
  export const inboundSchema = AccountRef$inboundSchema;
  /** @deprecated use `AccountRef$outboundSchema` instead. */
  export const outboundSchema = AccountRef$outboundSchema;
  /** @deprecated use `AccountRef$Outbound` instead. */
  export type Outbound = AccountRef$Outbound;
}
