/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The bank or other financial institution providing the account.
 */
export type AccountInstitution = {
  /**
   * The institution's ID, according to the provider.
   */
  id?: string | undefined;
  /**
   * The institution's name, according to the underlying provider.
   */
  name?: string | undefined;
};

/** @internal */
export const AccountInstitution$inboundSchema: z.ZodType<
  AccountInstitution,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
});

/** @internal */
export type AccountInstitution$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
};

/** @internal */
export const AccountInstitution$outboundSchema: z.ZodType<
  AccountInstitution$Outbound,
  z.ZodTypeDef,
  AccountInstitution
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountInstitution$ {
  /** @deprecated use `AccountInstitution$inboundSchema` instead. */
  export const inboundSchema = AccountInstitution$inboundSchema;
  /** @deprecated use `AccountInstitution$outboundSchema` instead. */
  export const outboundSchema = AccountInstitution$outboundSchema;
  /** @deprecated use `AccountInstitution$Outbound` instead. */
  export type Outbound = AccountInstitution$Outbound;
}
