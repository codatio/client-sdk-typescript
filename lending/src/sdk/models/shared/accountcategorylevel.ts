/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { Decimal as Decimal$ } from "../../types/decimal.js";

/**
 * An object containing an ordered list of account category levels.
 */
export type AccountCategoryLevel = {
  /**
   * Account category name.
   */
  levelName?: string | undefined;
  /**
   * Confidence level of the category. This will only be populated where `status` is `Suggested`.
   */
  confidence?: Decimal$ | number | undefined;
};

/** @internal */
export const AccountCategoryLevel$inboundSchema: z.ZodType<
  AccountCategoryLevel,
  z.ZodTypeDef,
  unknown
> = z.object({
  levelName: z.string().optional(),
  confidence: z.number().transform(v => new Decimal$(v)).optional(),
});

/** @internal */
export type AccountCategoryLevel$Outbound = {
  levelName?: string | undefined;
  confidence?: number | undefined;
};

/** @internal */
export const AccountCategoryLevel$outboundSchema: z.ZodType<
  AccountCategoryLevel$Outbound,
  z.ZodTypeDef,
  AccountCategoryLevel
> = z.object({
  levelName: z.string().optional(),
  confidence: z.union([z.instanceof(Decimal$), z.number()]).transform(v =>
    typeof v === "number" ? v : v.toNumber()
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountCategoryLevel$ {
  /** @deprecated use `AccountCategoryLevel$inboundSchema` instead. */
  export const inboundSchema = AccountCategoryLevel$inboundSchema;
  /** @deprecated use `AccountCategoryLevel$outboundSchema` instead. */
  export const outboundSchema = AccountCategoryLevel$outboundSchema;
  /** @deprecated use `AccountCategoryLevel$Outbound` instead. */
  export type Outbound = AccountCategoryLevel$Outbound;
}
