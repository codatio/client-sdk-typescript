/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetCategorizedProfitAndLossStatementRequest = {
  /**
   * Unique identifier for a company.
   */
  companyId: string;
  /**
   * The date in which the report is created up to. Users must specify a specific date, however the response will be provided for the full month.
   */
  reportDate?: string | undefined;
  /**
   * The number of periods to return. If not provided, 12 periods will be used as the default value.
   */
  numberOfPeriods?: number | undefined;
};

/** @internal */
export const GetCategorizedProfitAndLossStatementRequest$inboundSchema:
  z.ZodType<
    GetCategorizedProfitAndLossStatementRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    companyId: z.string(),
    reportDate: z.string().optional(),
    numberOfPeriods: z.number().int().optional(),
  });

/** @internal */
export type GetCategorizedProfitAndLossStatementRequest$Outbound = {
  companyId: string;
  reportDate?: string | undefined;
  numberOfPeriods?: number | undefined;
};

/** @internal */
export const GetCategorizedProfitAndLossStatementRequest$outboundSchema:
  z.ZodType<
    GetCategorizedProfitAndLossStatementRequest$Outbound,
    z.ZodTypeDef,
    GetCategorizedProfitAndLossStatementRequest
  > = z.object({
    companyId: z.string(),
    reportDate: z.string().optional(),
    numberOfPeriods: z.number().int().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCategorizedProfitAndLossStatementRequest$ {
  /** @deprecated use `GetCategorizedProfitAndLossStatementRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetCategorizedProfitAndLossStatementRequest$inboundSchema;
  /** @deprecated use `GetCategorizedProfitAndLossStatementRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetCategorizedProfitAndLossStatementRequest$outboundSchema;
  /** @deprecated use `GetCategorizedProfitAndLossStatementRequest$Outbound` instead. */
  export type Outbound = GetCategorizedProfitAndLossStatementRequest$Outbound;
}

export function getCategorizedProfitAndLossStatementRequestToJSON(
  getCategorizedProfitAndLossStatementRequest:
    GetCategorizedProfitAndLossStatementRequest,
): string {
  return JSON.stringify(
    GetCategorizedProfitAndLossStatementRequest$outboundSchema.parse(
      getCategorizedProfitAndLossStatementRequest,
    ),
  );
}

export function getCategorizedProfitAndLossStatementRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetCategorizedProfitAndLossStatementRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetCategorizedProfitAndLossStatementRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetCategorizedProfitAndLossStatementRequest' from JSON`,
  );
}
