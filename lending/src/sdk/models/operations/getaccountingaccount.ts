/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type GetAccountingAccountRequest = {
  /**
   * Unique identifier for a company.
   */
  companyId: string;
  /**
   * Unique identifier for an account.
   */
  accountId: string;
};

/** @internal */
export const GetAccountingAccountRequest$inboundSchema: z.ZodType<
  GetAccountingAccountRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  companyId: z.string(),
  accountId: z.string(),
});

/** @internal */
export type GetAccountingAccountRequest$Outbound = {
  companyId: string;
  accountId: string;
};

/** @internal */
export const GetAccountingAccountRequest$outboundSchema: z.ZodType<
  GetAccountingAccountRequest$Outbound,
  z.ZodTypeDef,
  GetAccountingAccountRequest
> = z.object({
  companyId: z.string(),
  accountId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAccountingAccountRequest$ {
  /** @deprecated use `GetAccountingAccountRequest$inboundSchema` instead. */
  export const inboundSchema = GetAccountingAccountRequest$inboundSchema;
  /** @deprecated use `GetAccountingAccountRequest$outboundSchema` instead. */
  export const outboundSchema = GetAccountingAccountRequest$outboundSchema;
  /** @deprecated use `GetAccountingAccountRequest$Outbound` instead. */
  export type Outbound = GetAccountingAccountRequest$Outbound;
}
