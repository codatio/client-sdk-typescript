/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetAccountingDirectCostRequest = {
  /**
   * Unique identifier for a company.
   */
  companyId: string;
  /**
   * Unique identifier for a connection.
   */
  connectionId: string;
  /**
   * Unique identifier for a direct cost.
   */
  directCostId: string;
};

/** @internal */
export const GetAccountingDirectCostRequest$inboundSchema: z.ZodType<
  GetAccountingDirectCostRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  companyId: z.string(),
  connectionId: z.string(),
  directCostId: z.string(),
});

/** @internal */
export type GetAccountingDirectCostRequest$Outbound = {
  companyId: string;
  connectionId: string;
  directCostId: string;
};

/** @internal */
export const GetAccountingDirectCostRequest$outboundSchema: z.ZodType<
  GetAccountingDirectCostRequest$Outbound,
  z.ZodTypeDef,
  GetAccountingDirectCostRequest
> = z.object({
  companyId: z.string(),
  connectionId: z.string(),
  directCostId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAccountingDirectCostRequest$ {
  /** @deprecated use `GetAccountingDirectCostRequest$inboundSchema` instead. */
  export const inboundSchema = GetAccountingDirectCostRequest$inboundSchema;
  /** @deprecated use `GetAccountingDirectCostRequest$outboundSchema` instead. */
  export const outboundSchema = GetAccountingDirectCostRequest$outboundSchema;
  /** @deprecated use `GetAccountingDirectCostRequest$Outbound` instead. */
  export type Outbound = GetAccountingDirectCostRequest$Outbound;
}

export function getAccountingDirectCostRequestToJSON(
  getAccountingDirectCostRequest: GetAccountingDirectCostRequest,
): string {
  return JSON.stringify(
    GetAccountingDirectCostRequest$outboundSchema.parse(
      getAccountingDirectCostRequest,
    ),
  );
}

export function getAccountingDirectCostRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetAccountingDirectCostRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAccountingDirectCostRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAccountingDirectCostRequest' from JSON`,
  );
}
