/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type CreateBankTransactionsRequest = {
  /**
   * Unique identifier for a company.
   */
  companyId: string;
  /**
   * Unique identifier for a connection.
   */
  connectionId: string;
  /**
   * Unique identifier for an account.
   */
  accountId: string;
  /**
   * Time limit for the push operation to complete before it is timed out.
   */
  timeoutInMinutes?: number | undefined;
  /**
   * Allow a sync upon push completion.
   */
  allowSyncOnPushComplete?: boolean | undefined;
  accountingCreateBankTransactions?:
    | shared.AccountingCreateBankTransactions
    | undefined;
};

/** @internal */
export const CreateBankTransactionsRequest$inboundSchema: z.ZodType<
  CreateBankTransactionsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  companyId: z.string(),
  connectionId: z.string(),
  accountId: z.string(),
  timeoutInMinutes: z.number().int().optional(),
  allowSyncOnPushComplete: z.boolean().default(true),
  AccountingCreateBankTransactions: shared
    .AccountingCreateBankTransactions$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "AccountingCreateBankTransactions": "accountingCreateBankTransactions",
  });
});

/** @internal */
export type CreateBankTransactionsRequest$Outbound = {
  companyId: string;
  connectionId: string;
  accountId: string;
  timeoutInMinutes?: number | undefined;
  allowSyncOnPushComplete: boolean;
  AccountingCreateBankTransactions?:
    | shared.AccountingCreateBankTransactions$Outbound
    | undefined;
};

/** @internal */
export const CreateBankTransactionsRequest$outboundSchema: z.ZodType<
  CreateBankTransactionsRequest$Outbound,
  z.ZodTypeDef,
  CreateBankTransactionsRequest
> = z.object({
  companyId: z.string(),
  connectionId: z.string(),
  accountId: z.string(),
  timeoutInMinutes: z.number().int().optional(),
  allowSyncOnPushComplete: z.boolean().default(true),
  accountingCreateBankTransactions: shared
    .AccountingCreateBankTransactions$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    accountingCreateBankTransactions: "AccountingCreateBankTransactions",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateBankTransactionsRequest$ {
  /** @deprecated use `CreateBankTransactionsRequest$inboundSchema` instead. */
  export const inboundSchema = CreateBankTransactionsRequest$inboundSchema;
  /** @deprecated use `CreateBankTransactionsRequest$outboundSchema` instead. */
  export const outboundSchema = CreateBankTransactionsRequest$outboundSchema;
  /** @deprecated use `CreateBankTransactionsRequest$Outbound` instead. */
  export type Outbound = CreateBankTransactionsRequest$Outbound;
}
