/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type UploadFilesRequest = {
  /**
   * Unique identifier for a company.
   */
  companyId: string;
  /**
   * Unique identifier for a connection.
   */
  connectionId: string;
  fileUpload?: shared.FileUpload | undefined;
};

/** @internal */
export const UploadFilesRequest$inboundSchema: z.ZodType<
  UploadFilesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  companyId: z.string(),
  connectionId: z.string(),
  FileUpload: shared.FileUpload$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "FileUpload": "fileUpload",
  });
});

/** @internal */
export type UploadFilesRequest$Outbound = {
  companyId: string;
  connectionId: string;
  FileUpload?: shared.FileUpload$Outbound | undefined;
};

/** @internal */
export const UploadFilesRequest$outboundSchema: z.ZodType<
  UploadFilesRequest$Outbound,
  z.ZodTypeDef,
  UploadFilesRequest
> = z.object({
  companyId: z.string(),
  connectionId: z.string(),
  fileUpload: shared.FileUpload$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    fileUpload: "FileUpload",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UploadFilesRequest$ {
  /** @deprecated use `UploadFilesRequest$inboundSchema` instead. */
  export const inboundSchema = UploadFilesRequest$inboundSchema;
  /** @deprecated use `UploadFilesRequest$outboundSchema` instead. */
  export const outboundSchema = UploadFilesRequest$outboundSchema;
  /** @deprecated use `UploadFilesRequest$Outbound` instead. */
  export type Outbound = UploadFilesRequest$Outbound;
}
