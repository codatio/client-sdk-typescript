/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DownloadAccountingCustomerAttachmentRequest = {
  /**
   * Unique identifier for a company.
   */
  companyId: string;
  /**
   * Unique identifier for a connection.
   */
  connectionId: string;
  /**
   * Unique identifier for a customer.
   */
  customerId: string;
  /**
   * Unique identifier for an attachment.
   */
  attachmentId: string;
};

/** @internal */
export const DownloadAccountingCustomerAttachmentRequest$inboundSchema:
  z.ZodType<
    DownloadAccountingCustomerAttachmentRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    companyId: z.string(),
    connectionId: z.string(),
    customerId: z.string(),
    attachmentId: z.string(),
  });

/** @internal */
export type DownloadAccountingCustomerAttachmentRequest$Outbound = {
  companyId: string;
  connectionId: string;
  customerId: string;
  attachmentId: string;
};

/** @internal */
export const DownloadAccountingCustomerAttachmentRequest$outboundSchema:
  z.ZodType<
    DownloadAccountingCustomerAttachmentRequest$Outbound,
    z.ZodTypeDef,
    DownloadAccountingCustomerAttachmentRequest
  > = z.object({
    companyId: z.string(),
    connectionId: z.string(),
    customerId: z.string(),
    attachmentId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DownloadAccountingCustomerAttachmentRequest$ {
  /** @deprecated use `DownloadAccountingCustomerAttachmentRequest$inboundSchema` instead. */
  export const inboundSchema =
    DownloadAccountingCustomerAttachmentRequest$inboundSchema;
  /** @deprecated use `DownloadAccountingCustomerAttachmentRequest$outboundSchema` instead. */
  export const outboundSchema =
    DownloadAccountingCustomerAttachmentRequest$outboundSchema;
  /** @deprecated use `DownloadAccountingCustomerAttachmentRequest$Outbound` instead. */
  export type Outbound = DownloadAccountingCustomerAttachmentRequest$Outbound;
}

export function downloadAccountingCustomerAttachmentRequestToJSON(
  downloadAccountingCustomerAttachmentRequest:
    DownloadAccountingCustomerAttachmentRequest,
): string {
  return JSON.stringify(
    DownloadAccountingCustomerAttachmentRequest$outboundSchema.parse(
      downloadAccountingCustomerAttachmentRequest,
    ),
  );
}

export function downloadAccountingCustomerAttachmentRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DownloadAccountingCustomerAttachmentRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DownloadAccountingCustomerAttachmentRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DownloadAccountingCustomerAttachmentRequest' from JSON`,
  );
}
