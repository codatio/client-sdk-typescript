/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Data source type.
 */
export const QueryParamSourceType = {
  Banking: "banking",
  Commerce: "commerce",
  Accounting: "accounting",
} as const;
/**
 * Data source type.
 */
export type QueryParamSourceType = ClosedEnum<typeof QueryParamSourceType>;

export type ListLoanTransactionsRequest = {
  /**
   * Unique identifier for a company.
   */
  companyId: string;
  /**
   * Data source type.
   */
  sourceType: QueryParamSourceType;
};

/** @internal */
export const QueryParamSourceType$inboundSchema: z.ZodNativeEnum<
  typeof QueryParamSourceType
> = z.nativeEnum(QueryParamSourceType);

/** @internal */
export const QueryParamSourceType$outboundSchema: z.ZodNativeEnum<
  typeof QueryParamSourceType
> = QueryParamSourceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryParamSourceType$ {
  /** @deprecated use `QueryParamSourceType$inboundSchema` instead. */
  export const inboundSchema = QueryParamSourceType$inboundSchema;
  /** @deprecated use `QueryParamSourceType$outboundSchema` instead. */
  export const outboundSchema = QueryParamSourceType$outboundSchema;
}

/** @internal */
export const ListLoanTransactionsRequest$inboundSchema: z.ZodType<
  ListLoanTransactionsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  companyId: z.string(),
  sourceType: QueryParamSourceType$inboundSchema,
});

/** @internal */
export type ListLoanTransactionsRequest$Outbound = {
  companyId: string;
  sourceType: string;
};

/** @internal */
export const ListLoanTransactionsRequest$outboundSchema: z.ZodType<
  ListLoanTransactionsRequest$Outbound,
  z.ZodTypeDef,
  ListLoanTransactionsRequest
> = z.object({
  companyId: z.string(),
  sourceType: QueryParamSourceType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListLoanTransactionsRequest$ {
  /** @deprecated use `ListLoanTransactionsRequest$inboundSchema` instead. */
  export const inboundSchema = ListLoanTransactionsRequest$inboundSchema;
  /** @deprecated use `ListLoanTransactionsRequest$outboundSchema` instead. */
  export const outboundSchema = ListLoanTransactionsRequest$outboundSchema;
  /** @deprecated use `ListLoanTransactionsRequest$Outbound` instead. */
  export type Outbound = ListLoanTransactionsRequest$Outbound;
}
