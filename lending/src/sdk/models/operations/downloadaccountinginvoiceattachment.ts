/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DownloadAccountingInvoiceAttachmentRequest = {
  /**
   * Unique identifier for a company.
   */
  companyId: string;
  /**
   * Unique identifier for a connection.
   */
  connectionId: string;
  /**
   * Unique identifier for an invoice.
   */
  invoiceId: string;
  /**
   * Unique identifier for an attachment.
   */
  attachmentId: string;
};

/** @internal */
export const DownloadAccountingInvoiceAttachmentRequest$inboundSchema:
  z.ZodType<DownloadAccountingInvoiceAttachmentRequest, z.ZodTypeDef, unknown> =
    z.object({
      companyId: z.string(),
      connectionId: z.string(),
      invoiceId: z.string(),
      attachmentId: z.string(),
    });

/** @internal */
export type DownloadAccountingInvoiceAttachmentRequest$Outbound = {
  companyId: string;
  connectionId: string;
  invoiceId: string;
  attachmentId: string;
};

/** @internal */
export const DownloadAccountingInvoiceAttachmentRequest$outboundSchema:
  z.ZodType<
    DownloadAccountingInvoiceAttachmentRequest$Outbound,
    z.ZodTypeDef,
    DownloadAccountingInvoiceAttachmentRequest
  > = z.object({
    companyId: z.string(),
    connectionId: z.string(),
    invoiceId: z.string(),
    attachmentId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DownloadAccountingInvoiceAttachmentRequest$ {
  /** @deprecated use `DownloadAccountingInvoiceAttachmentRequest$inboundSchema` instead. */
  export const inboundSchema =
    DownloadAccountingInvoiceAttachmentRequest$inboundSchema;
  /** @deprecated use `DownloadAccountingInvoiceAttachmentRequest$outboundSchema` instead. */
  export const outboundSchema =
    DownloadAccountingInvoiceAttachmentRequest$outboundSchema;
  /** @deprecated use `DownloadAccountingInvoiceAttachmentRequest$Outbound` instead. */
  export type Outbound = DownloadAccountingInvoiceAttachmentRequest$Outbound;
}

export function downloadAccountingInvoiceAttachmentRequestToJSON(
  downloadAccountingInvoiceAttachmentRequest:
    DownloadAccountingInvoiceAttachmentRequest,
): string {
  return JSON.stringify(
    DownloadAccountingInvoiceAttachmentRequest$outboundSchema.parse(
      downloadAccountingInvoiceAttachmentRequest,
    ),
  );
}

export function downloadAccountingInvoiceAttachmentRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DownloadAccountingInvoiceAttachmentRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DownloadAccountingInvoiceAttachmentRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DownloadAccountingInvoiceAttachmentRequest' from JSON`,
  );
}
