/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DownloadAccountingDirectCostAttachmentRequest = {
  /**
   * Unique identifier for a company.
   */
  companyId: string;
  /**
   * Unique identifier for a connection.
   */
  connectionId: string;
  /**
   * Unique identifier for a direct cost.
   */
  directCostId: string;
  /**
   * Unique identifier for an attachment.
   */
  attachmentId: string;
};

/** @internal */
export const DownloadAccountingDirectCostAttachmentRequest$inboundSchema:
  z.ZodType<
    DownloadAccountingDirectCostAttachmentRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    companyId: z.string(),
    connectionId: z.string(),
    directCostId: z.string(),
    attachmentId: z.string(),
  });

/** @internal */
export type DownloadAccountingDirectCostAttachmentRequest$Outbound = {
  companyId: string;
  connectionId: string;
  directCostId: string;
  attachmentId: string;
};

/** @internal */
export const DownloadAccountingDirectCostAttachmentRequest$outboundSchema:
  z.ZodType<
    DownloadAccountingDirectCostAttachmentRequest$Outbound,
    z.ZodTypeDef,
    DownloadAccountingDirectCostAttachmentRequest
  > = z.object({
    companyId: z.string(),
    connectionId: z.string(),
    directCostId: z.string(),
    attachmentId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DownloadAccountingDirectCostAttachmentRequest$ {
  /** @deprecated use `DownloadAccountingDirectCostAttachmentRequest$inboundSchema` instead. */
  export const inboundSchema =
    DownloadAccountingDirectCostAttachmentRequest$inboundSchema;
  /** @deprecated use `DownloadAccountingDirectCostAttachmentRequest$outboundSchema` instead. */
  export const outboundSchema =
    DownloadAccountingDirectCostAttachmentRequest$outboundSchema;
  /** @deprecated use `DownloadAccountingDirectCostAttachmentRequest$Outbound` instead. */
  export type Outbound = DownloadAccountingDirectCostAttachmentRequest$Outbound;
}

export function downloadAccountingDirectCostAttachmentRequestToJSON(
  downloadAccountingDirectCostAttachmentRequest:
    DownloadAccountingDirectCostAttachmentRequest,
): string {
  return JSON.stringify(
    DownloadAccountingDirectCostAttachmentRequest$outboundSchema.parse(
      downloadAccountingDirectCostAttachmentRequest,
    ),
  );
}

export function downloadAccountingDirectCostAttachmentRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DownloadAccountingDirectCostAttachmentRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DownloadAccountingDirectCostAttachmentRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DownloadAccountingDirectCostAttachmentRequest' from JSON`,
  );
}
