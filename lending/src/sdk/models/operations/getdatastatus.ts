/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type GetDataStatusRequest = {
  /**
   * Unique identifier for a company.
   */
  companyId: string;
};

/**
 * OK
 */
export type GetDataStatusDataStatuses = {
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  accountTransactions?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  balanceSheet?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  bankAccounts?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  bankTransactions?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  billCreditNotes?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  billPayments?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  bills?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  cashFlowStatement?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  chartOfAccounts?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  company?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  creditNotes?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  customers?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  directCosts?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  directIncomes?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  invoices?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  itemReceipts?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  items?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  journalEntries?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  journals?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  paymentMethods?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  payments?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  profitAndLoss?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  purchaseOrders?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  salesOrders?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  suppliers?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  taxRates?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  trackingCategories?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  transfers?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  bankingAccountBalances?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  bankingAccounts?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  bankingTransactionCategories?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  bankingTransactions?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  commerceCompanyInfo?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  commerceCustomers?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  commerceDisputes?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  commerceLocations?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  commerceOrders?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  commercePaymentMethods?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  commercePayments?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  commerceProductCategories?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  commerceProducts?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  commerceTaxComponents?: shared.DataStatus | undefined;
  /**
   * Describes the state of data in the Codat cache for a company and data type
   */
  commerceTransactions?: shared.DataStatus | undefined;
};

/** @internal */
export const GetDataStatusRequest$inboundSchema: z.ZodType<
  GetDataStatusRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  companyId: z.string(),
});

/** @internal */
export type GetDataStatusRequest$Outbound = {
  companyId: string;
};

/** @internal */
export const GetDataStatusRequest$outboundSchema: z.ZodType<
  GetDataStatusRequest$Outbound,
  z.ZodTypeDef,
  GetDataStatusRequest
> = z.object({
  companyId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDataStatusRequest$ {
  /** @deprecated use `GetDataStatusRequest$inboundSchema` instead. */
  export const inboundSchema = GetDataStatusRequest$inboundSchema;
  /** @deprecated use `GetDataStatusRequest$outboundSchema` instead. */
  export const outboundSchema = GetDataStatusRequest$outboundSchema;
  /** @deprecated use `GetDataStatusRequest$Outbound` instead. */
  export type Outbound = GetDataStatusRequest$Outbound;
}

/** @internal */
export const GetDataStatusDataStatuses$inboundSchema: z.ZodType<
  GetDataStatusDataStatuses,
  z.ZodTypeDef,
  unknown
> = z.object({
  accountTransactions: shared.DataStatus$inboundSchema.optional(),
  balanceSheet: shared.DataStatus$inboundSchema.optional(),
  bankAccounts: shared.DataStatus$inboundSchema.optional(),
  bankTransactions: shared.DataStatus$inboundSchema.optional(),
  billCreditNotes: shared.DataStatus$inboundSchema.optional(),
  billPayments: shared.DataStatus$inboundSchema.optional(),
  bills: shared.DataStatus$inboundSchema.optional(),
  cashFlowStatement: shared.DataStatus$inboundSchema.optional(),
  chartOfAccounts: shared.DataStatus$inboundSchema.optional(),
  company: shared.DataStatus$inboundSchema.optional(),
  creditNotes: shared.DataStatus$inboundSchema.optional(),
  customers: shared.DataStatus$inboundSchema.optional(),
  directCosts: shared.DataStatus$inboundSchema.optional(),
  directIncomes: shared.DataStatus$inboundSchema.optional(),
  invoices: shared.DataStatus$inboundSchema.optional(),
  itemReceipts: shared.DataStatus$inboundSchema.optional(),
  items: shared.DataStatus$inboundSchema.optional(),
  journalEntries: shared.DataStatus$inboundSchema.optional(),
  journals: shared.DataStatus$inboundSchema.optional(),
  paymentMethods: shared.DataStatus$inboundSchema.optional(),
  payments: shared.DataStatus$inboundSchema.optional(),
  profitAndLoss: shared.DataStatus$inboundSchema.optional(),
  purchaseOrders: shared.DataStatus$inboundSchema.optional(),
  salesOrders: shared.DataStatus$inboundSchema.optional(),
  suppliers: shared.DataStatus$inboundSchema.optional(),
  taxRates: shared.DataStatus$inboundSchema.optional(),
  trackingCategories: shared.DataStatus$inboundSchema.optional(),
  transfers: shared.DataStatus$inboundSchema.optional(),
  "banking-accountBalances": shared.DataStatus$inboundSchema.optional(),
  "banking-accounts": shared.DataStatus$inboundSchema.optional(),
  "banking-transactionCategories": shared.DataStatus$inboundSchema.optional(),
  "banking-transactions": shared.DataStatus$inboundSchema.optional(),
  "commerce-companyInfo": shared.DataStatus$inboundSchema.optional(),
  "commerce-customers": shared.DataStatus$inboundSchema.optional(),
  "commerce-disputes": shared.DataStatus$inboundSchema.optional(),
  "commerce-locations": shared.DataStatus$inboundSchema.optional(),
  "commerce-orders": shared.DataStatus$inboundSchema.optional(),
  "commerce-paymentMethods": shared.DataStatus$inboundSchema.optional(),
  "commerce-payments": shared.DataStatus$inboundSchema.optional(),
  "commerce-productCategories": shared.DataStatus$inboundSchema.optional(),
  "commerce-products": shared.DataStatus$inboundSchema.optional(),
  "commerce-taxComponents": shared.DataStatus$inboundSchema.optional(),
  "commerce-transactions": shared.DataStatus$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "banking-accountBalances": "bankingAccountBalances",
    "banking-accounts": "bankingAccounts",
    "banking-transactionCategories": "bankingTransactionCategories",
    "banking-transactions": "bankingTransactions",
    "commerce-companyInfo": "commerceCompanyInfo",
    "commerce-customers": "commerceCustomers",
    "commerce-disputes": "commerceDisputes",
    "commerce-locations": "commerceLocations",
    "commerce-orders": "commerceOrders",
    "commerce-paymentMethods": "commercePaymentMethods",
    "commerce-payments": "commercePayments",
    "commerce-productCategories": "commerceProductCategories",
    "commerce-products": "commerceProducts",
    "commerce-taxComponents": "commerceTaxComponents",
    "commerce-transactions": "commerceTransactions",
  });
});

/** @internal */
export type GetDataStatusDataStatuses$Outbound = {
  accountTransactions?: shared.DataStatus$Outbound | undefined;
  balanceSheet?: shared.DataStatus$Outbound | undefined;
  bankAccounts?: shared.DataStatus$Outbound | undefined;
  bankTransactions?: shared.DataStatus$Outbound | undefined;
  billCreditNotes?: shared.DataStatus$Outbound | undefined;
  billPayments?: shared.DataStatus$Outbound | undefined;
  bills?: shared.DataStatus$Outbound | undefined;
  cashFlowStatement?: shared.DataStatus$Outbound | undefined;
  chartOfAccounts?: shared.DataStatus$Outbound | undefined;
  company?: shared.DataStatus$Outbound | undefined;
  creditNotes?: shared.DataStatus$Outbound | undefined;
  customers?: shared.DataStatus$Outbound | undefined;
  directCosts?: shared.DataStatus$Outbound | undefined;
  directIncomes?: shared.DataStatus$Outbound | undefined;
  invoices?: shared.DataStatus$Outbound | undefined;
  itemReceipts?: shared.DataStatus$Outbound | undefined;
  items?: shared.DataStatus$Outbound | undefined;
  journalEntries?: shared.DataStatus$Outbound | undefined;
  journals?: shared.DataStatus$Outbound | undefined;
  paymentMethods?: shared.DataStatus$Outbound | undefined;
  payments?: shared.DataStatus$Outbound | undefined;
  profitAndLoss?: shared.DataStatus$Outbound | undefined;
  purchaseOrders?: shared.DataStatus$Outbound | undefined;
  salesOrders?: shared.DataStatus$Outbound | undefined;
  suppliers?: shared.DataStatus$Outbound | undefined;
  taxRates?: shared.DataStatus$Outbound | undefined;
  trackingCategories?: shared.DataStatus$Outbound | undefined;
  transfers?: shared.DataStatus$Outbound | undefined;
  "banking-accountBalances"?: shared.DataStatus$Outbound | undefined;
  "banking-accounts"?: shared.DataStatus$Outbound | undefined;
  "banking-transactionCategories"?: shared.DataStatus$Outbound | undefined;
  "banking-transactions"?: shared.DataStatus$Outbound | undefined;
  "commerce-companyInfo"?: shared.DataStatus$Outbound | undefined;
  "commerce-customers"?: shared.DataStatus$Outbound | undefined;
  "commerce-disputes"?: shared.DataStatus$Outbound | undefined;
  "commerce-locations"?: shared.DataStatus$Outbound | undefined;
  "commerce-orders"?: shared.DataStatus$Outbound | undefined;
  "commerce-paymentMethods"?: shared.DataStatus$Outbound | undefined;
  "commerce-payments"?: shared.DataStatus$Outbound | undefined;
  "commerce-productCategories"?: shared.DataStatus$Outbound | undefined;
  "commerce-products"?: shared.DataStatus$Outbound | undefined;
  "commerce-taxComponents"?: shared.DataStatus$Outbound | undefined;
  "commerce-transactions"?: shared.DataStatus$Outbound | undefined;
};

/** @internal */
export const GetDataStatusDataStatuses$outboundSchema: z.ZodType<
  GetDataStatusDataStatuses$Outbound,
  z.ZodTypeDef,
  GetDataStatusDataStatuses
> = z.object({
  accountTransactions: shared.DataStatus$outboundSchema.optional(),
  balanceSheet: shared.DataStatus$outboundSchema.optional(),
  bankAccounts: shared.DataStatus$outboundSchema.optional(),
  bankTransactions: shared.DataStatus$outboundSchema.optional(),
  billCreditNotes: shared.DataStatus$outboundSchema.optional(),
  billPayments: shared.DataStatus$outboundSchema.optional(),
  bills: shared.DataStatus$outboundSchema.optional(),
  cashFlowStatement: shared.DataStatus$outboundSchema.optional(),
  chartOfAccounts: shared.DataStatus$outboundSchema.optional(),
  company: shared.DataStatus$outboundSchema.optional(),
  creditNotes: shared.DataStatus$outboundSchema.optional(),
  customers: shared.DataStatus$outboundSchema.optional(),
  directCosts: shared.DataStatus$outboundSchema.optional(),
  directIncomes: shared.DataStatus$outboundSchema.optional(),
  invoices: shared.DataStatus$outboundSchema.optional(),
  itemReceipts: shared.DataStatus$outboundSchema.optional(),
  items: shared.DataStatus$outboundSchema.optional(),
  journalEntries: shared.DataStatus$outboundSchema.optional(),
  journals: shared.DataStatus$outboundSchema.optional(),
  paymentMethods: shared.DataStatus$outboundSchema.optional(),
  payments: shared.DataStatus$outboundSchema.optional(),
  profitAndLoss: shared.DataStatus$outboundSchema.optional(),
  purchaseOrders: shared.DataStatus$outboundSchema.optional(),
  salesOrders: shared.DataStatus$outboundSchema.optional(),
  suppliers: shared.DataStatus$outboundSchema.optional(),
  taxRates: shared.DataStatus$outboundSchema.optional(),
  trackingCategories: shared.DataStatus$outboundSchema.optional(),
  transfers: shared.DataStatus$outboundSchema.optional(),
  bankingAccountBalances: shared.DataStatus$outboundSchema.optional(),
  bankingAccounts: shared.DataStatus$outboundSchema.optional(),
  bankingTransactionCategories: shared.DataStatus$outboundSchema.optional(),
  bankingTransactions: shared.DataStatus$outboundSchema.optional(),
  commerceCompanyInfo: shared.DataStatus$outboundSchema.optional(),
  commerceCustomers: shared.DataStatus$outboundSchema.optional(),
  commerceDisputes: shared.DataStatus$outboundSchema.optional(),
  commerceLocations: shared.DataStatus$outboundSchema.optional(),
  commerceOrders: shared.DataStatus$outboundSchema.optional(),
  commercePaymentMethods: shared.DataStatus$outboundSchema.optional(),
  commercePayments: shared.DataStatus$outboundSchema.optional(),
  commerceProductCategories: shared.DataStatus$outboundSchema.optional(),
  commerceProducts: shared.DataStatus$outboundSchema.optional(),
  commerceTaxComponents: shared.DataStatus$outboundSchema.optional(),
  commerceTransactions: shared.DataStatus$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    bankingAccountBalances: "banking-accountBalances",
    bankingAccounts: "banking-accounts",
    bankingTransactionCategories: "banking-transactionCategories",
    bankingTransactions: "banking-transactions",
    commerceCompanyInfo: "commerce-companyInfo",
    commerceCustomers: "commerce-customers",
    commerceDisputes: "commerce-disputes",
    commerceLocations: "commerce-locations",
    commerceOrders: "commerce-orders",
    commercePaymentMethods: "commerce-paymentMethods",
    commercePayments: "commerce-payments",
    commerceProductCategories: "commerce-productCategories",
    commerceProducts: "commerce-products",
    commerceTaxComponents: "commerce-taxComponents",
    commerceTransactions: "commerce-transactions",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDataStatusDataStatuses$ {
  /** @deprecated use `GetDataStatusDataStatuses$inboundSchema` instead. */
  export const inboundSchema = GetDataStatusDataStatuses$inboundSchema;
  /** @deprecated use `GetDataStatusDataStatuses$outboundSchema` instead. */
  export const outboundSchema = GetDataStatusDataStatuses$outboundSchema;
  /** @deprecated use `GetDataStatusDataStatuses$Outbound` instead. */
  export type Outbound = GetDataStatusDataStatuses$Outbound;
}
