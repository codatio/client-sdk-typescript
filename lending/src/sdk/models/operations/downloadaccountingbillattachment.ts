/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DownloadAccountingBillAttachmentRequest = {
  /**
   * Unique identifier for a company.
   */
  companyId: string;
  /**
   * Unique identifier for a connection.
   */
  connectionId: string;
  /**
   * Unique identifier for a bill.
   */
  billId: string;
  /**
   * Unique identifier for an attachment.
   */
  attachmentId: string;
};

/** @internal */
export const DownloadAccountingBillAttachmentRequest$inboundSchema: z.ZodType<
  DownloadAccountingBillAttachmentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  companyId: z.string(),
  connectionId: z.string(),
  billId: z.string(),
  attachmentId: z.string(),
});

/** @internal */
export type DownloadAccountingBillAttachmentRequest$Outbound = {
  companyId: string;
  connectionId: string;
  billId: string;
  attachmentId: string;
};

/** @internal */
export const DownloadAccountingBillAttachmentRequest$outboundSchema: z.ZodType<
  DownloadAccountingBillAttachmentRequest$Outbound,
  z.ZodTypeDef,
  DownloadAccountingBillAttachmentRequest
> = z.object({
  companyId: z.string(),
  connectionId: z.string(),
  billId: z.string(),
  attachmentId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DownloadAccountingBillAttachmentRequest$ {
  /** @deprecated use `DownloadAccountingBillAttachmentRequest$inboundSchema` instead. */
  export const inboundSchema =
    DownloadAccountingBillAttachmentRequest$inboundSchema;
  /** @deprecated use `DownloadAccountingBillAttachmentRequest$outboundSchema` instead. */
  export const outboundSchema =
    DownloadAccountingBillAttachmentRequest$outboundSchema;
  /** @deprecated use `DownloadAccountingBillAttachmentRequest$Outbound` instead. */
  export type Outbound = DownloadAccountingBillAttachmentRequest$Outbound;
}

export function downloadAccountingBillAttachmentRequestToJSON(
  downloadAccountingBillAttachmentRequest:
    DownloadAccountingBillAttachmentRequest,
): string {
  return JSON.stringify(
    DownloadAccountingBillAttachmentRequest$outboundSchema.parse(
      downloadAccountingBillAttachmentRequest,
    ),
  );
}

export function downloadAccountingBillAttachmentRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DownloadAccountingBillAttachmentRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DownloadAccountingBillAttachmentRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DownloadAccountingBillAttachmentRequest' from JSON`,
  );
}
