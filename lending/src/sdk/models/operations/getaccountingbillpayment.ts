/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetAccountingBillPaymentRequest = {
  /**
   * Unique identifier for a company.
   */
  companyId: string;
  /**
   * Unique identifier for a bill payment.
   */
  billPaymentId: string;
};

/** @internal */
export const GetAccountingBillPaymentRequest$inboundSchema: z.ZodType<
  GetAccountingBillPaymentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  companyId: z.string(),
  billPaymentId: z.string(),
});

/** @internal */
export type GetAccountingBillPaymentRequest$Outbound = {
  companyId: string;
  billPaymentId: string;
};

/** @internal */
export const GetAccountingBillPaymentRequest$outboundSchema: z.ZodType<
  GetAccountingBillPaymentRequest$Outbound,
  z.ZodTypeDef,
  GetAccountingBillPaymentRequest
> = z.object({
  companyId: z.string(),
  billPaymentId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAccountingBillPaymentRequest$ {
  /** @deprecated use `GetAccountingBillPaymentRequest$inboundSchema` instead. */
  export const inboundSchema = GetAccountingBillPaymentRequest$inboundSchema;
  /** @deprecated use `GetAccountingBillPaymentRequest$outboundSchema` instead. */
  export const outboundSchema = GetAccountingBillPaymentRequest$outboundSchema;
  /** @deprecated use `GetAccountingBillPaymentRequest$Outbound` instead. */
  export type Outbound = GetAccountingBillPaymentRequest$Outbound;
}

export function getAccountingBillPaymentRequestToJSON(
  getAccountingBillPaymentRequest: GetAccountingBillPaymentRequest,
): string {
  return JSON.stringify(
    GetAccountingBillPaymentRequest$outboundSchema.parse(
      getAccountingBillPaymentRequest,
    ),
  );
}

export function getAccountingBillPaymentRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetAccountingBillPaymentRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAccountingBillPaymentRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAccountingBillPaymentRequest' from JSON`,
  );
}
