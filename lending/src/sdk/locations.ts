/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { salesLocationsGet } from "../funcs/salesLocationsGet.js";
import { salesLocationsList } from "../funcs/salesLocationsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Locations extends ClientSDK {
  /**
   * List locations
   *
   * @remarks
   * The *List locations* endpoint returns a list of [locations](https://docs.codat.io/lending-api#/schemas/Location) for a given company's connection.
   *
   * [Locations](https://docs.codat.io/lending-api#/schemas/Location) hold information on the geographic location at which stocks of [products](https://docs.codat.io/lending-api#/schemas/Product) may be held or where [orders](https://docs.codat.io/lending-api#/schemas/Order) were placed.
   *
   * Before using this endpoint, you must have [retrieved data for the company](https://docs.codat.io/lending-api#/operations/refresh-company-data).
   */
  async list(
    request: operations.ListCommerceLocationsRequest,
    options?: RequestOptions,
  ): Promise<shared.CommerceLocations> {
    return unwrapAsync(salesLocationsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get location
   *
   * @remarks
   * The *Get location* endpoint returns a single location for a given locationId.
   *
   * [Locations](https://docs.codat.io/lending-api#/schemas/Location) hold information on the geographic location at which stocks of [products](https://docs.codat.io/lending-api#/schemas/Product) may be held or where [orders](https://docs.codat.io/lending-api#/schemas/Order) were placed.
   *
   * Check out our [coverage explorer](https://knowledge.codat.io/supported-features/commerce?view=tab-by-data-type&dataType=commerce-locations) for integrations that support getting a specific location.
   *
   * Before using this endpoint, you must have [retrieved data for the company](https://docs.codat.io/lending-api#/operations/refresh-company-data).
   */
  async get(
    request: operations.GetCommerceLocationRequest,
    options?: RequestOptions,
  ): Promise<shared.CommerceLocation> {
    return unwrapAsync(salesLocationsGet(
      this,
      request,
      options,
    ));
  }
}
