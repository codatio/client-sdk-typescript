/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { bankingTransactionsGet } from "../funcs/bankingTransactionsGet.js";
import { bankingTransactionsList } from "../funcs/bankingTransactionsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class CodatLendingTransactions extends ClientSDK {
  /**
   * List transactions
   *
   * @remarks
   * The *List transactions* endpoint returns a list of [transactions](https://docs.codat.io/lending-api#/schemas/Transaction) for a given company's connection.
   *
   * [Transactions](https://docs.codat.io/lending-api#/schemas/Transaction) provide an immutable source of up-to-date information on income and expenditure.
   *
   * Before using this endpoint, you must have [retrieved data for the company](https://docs.codat.io/lending-api#/operations/refresh-company-data).
   */
  async list(
    request: operations.ListBankingTransactionsRequest,
    options?: RequestOptions,
  ): Promise<shared.BankingTransactions> {
    return unwrapAsync(bankingTransactionsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get bank transaction
   *
   * @remarks
   * The *Get transaction* endpoint returns a single transaction for a given transactionId.
   *
   * [Transactions](https://docs.codat.io/lending-api#/schemas/Transaction) provide an immutable source of up-to-date information on income and expenditure.
   *
   * Before using this endpoint, you must have [retrieved data for the company](https://docs.codat.io/lending-api#/operations/refresh-company-data).
   */
  async get(
    request: operations.GetBankingTransactionRequest,
    options?: RequestOptions,
  ): Promise<shared.BankingTransaction> {
    return unwrapAsync(bankingTransactionsGet(
      this,
      request,
      options,
    ));
  }
}
