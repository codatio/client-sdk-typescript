/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { loanWritebackTransfersCreate } from "../funcs/loanWritebackTransfersCreate.js";
import { loanWritebackTransfersGetCreateModel } from "../funcs/loanWritebackTransfersGetCreateModel.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class CodatLendingTransfers extends ClientSDK {
  /**
   * Get create transfer model
   *
   * @remarks
   * The *Get create transfer model* endpoint returns the expected data for the request payload when creating a [transfer](https://docs.codat.io/lending-api#/schemas/Transfer) for a given company and integration.
   *
   * [Transfers](https://docs.codat.io/lending-api#/schemas/Transfer) record the movement of money between two bank accounts, or between a bank account and a nominal account.
   *
   * **Integration-specific behaviour**
   *
   * See the *response examples* for integration-specific indicative models.
   *
   * Check out our [coverage explorer](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=transfers) for integrations that support creating a transfer.
   */
  async getCreateModel(
    request: operations.GetCreateTransfersModelRequest,
    options?: RequestOptions,
  ): Promise<shared.PushOption> {
    return unwrapAsync(loanWritebackTransfersGetCreateModel(
      this,
      request,
      options,
    ));
  }

  /**
   * Create transfer
   *
   * @remarks
   * The *Create transfer* endpoint creates a new [transfer](https://docs.codat.io/lending-api#/schemas/Transfer) for a given company's connection.
   *
   * [Transfers](https://docs.codat.io/lending-api#/schemas/Transfer) record the movement of money between two bank accounts, or between a bank account and a nominal account.
   *
   * **Integration-specific behaviour**
   *
   * Required data may vary by integration. To see what data to post, first call [Get create transfer model](https://docs.codat.io/lending-api#/operations/get-create-transfers-model).
   *
   * Check out our [coverage explorer](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=transfers) for integrations that support creating an account.
   */
  async create(
    request: operations.CreateTransferRequest,
    options?: RequestOptions,
  ): Promise<shared.AccountingCreateTransferResponse> {
    return unwrapAsync(loanWritebackTransfersCreate(
      this,
      request,
      options,
    ));
  }
}
