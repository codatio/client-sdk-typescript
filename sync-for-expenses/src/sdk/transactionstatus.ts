/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { transactionStatusGet } from "../funcs/transactionStatusGet.js";
import { transactionStatusList } from "../funcs/transactionStatusList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class TransactionStatus extends ClientSDK {
  /**
   * List sync transactions
   *
   * @remarks
   * Gets the transactions and status for a sync
   */
  async list(
    request: operations.ListSyncTransactionsRequest,
    options?: RequestOptions,
  ): Promise<shared.Transactions> {
    return unwrapAsync(transactionStatusList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get sync transaction
   *
   * @remarks
   * Gets the status of a transaction for a sync
   */
  async get(
    request: operations.GetSyncTransactionRequest,
    options?: RequestOptions,
  ): Promise<Array<shared.Transaction>> {
    return unwrapAsync(transactionStatusGet(
      this,
      request,
      options,
    ));
  }
}
