/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expensesCreate } from "../funcs/expensesCreate.js";
import { expensesUpdate } from "../funcs/expensesUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Expenses extends ClientSDK {
  /**
   * Create expense transaction
   *
   * @remarks
   * The *Create expense* endpoint creates an [expense transaction](https://docs.codat.io/sync-for-expenses-api#/schemas/ExpenseTransaction) in the accounting software for a given company's connection.
   *
   * [Expense transactions](https://docs.codat.io/sync-for-expenses-api#/schemas/ExpenseTransaction) represent transactions made with a company debit or credit card.
   *
   * ### Supported Integrations
   *
   * | Integration                   | Supported |
   * |-------------------------------|-----------|
   * | Dynamics 365 Business Central | Yes       |
   * | FreeAgent                     | Yes       |
   * | QuickBooks Desktop            | Yes       |
   * | QuickBooks Online             | Yes       |
   * | Oracle NetSuite               | Yes       |
   * | Xero                          | Yes       |
   */
  async create(
    request: operations.CreateExpenseTransactionRequest,
    options?: RequestOptions,
  ): Promise<shared.CreateExpenseResponse> {
    return unwrapAsync(expensesCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Update expense transactions
   *
   * @remarks
   * The *Update expense* endpoint updates an existing [expense transaction](https://docs.codat.io/sync-for-expenses-api#/schemas/UpdateExpenseRequest) in the accounting software for a given company's connection.
   *
   * [Expense transactions](https://docs.codat.io/sync-for-expenses-api#/schemas/UpdateExpenseRequest) represent transactions made with a company debit or credit card.
   *
   * ### Supported Integrations
   * The following integrations are supported for the [Payment](https://docs.codat.io/expenses/sync-process/expense-transactions#transaction-types) transaction `type` only:
   * | Integration           | Supported |
   * |-----------------------|-----------|
   * | FreeAgent             | Yes       |
   * | QuickBooks Online     | Yes       |
   * | Oracle NetSuite       | Yes       |
   * | Xero                  | Yes       |
   */
  async update(
    request: operations.UpdateExpenseTransactionRequest,
    options?: RequestOptions,
  ): Promise<shared.UpdateExpenseResponse> {
    return unwrapAsync(expensesUpdate(
      this,
      request,
      options,
    ));
  }
}
