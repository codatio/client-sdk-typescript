/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { transfersCreate } from "../funcs/transfersCreate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Transfers extends ClientSDK {
  /**
   * Create transfer transaction
   *
   * @remarks
   * Use the *Create transfer* endpoint to create or update a [transfer transaction](https://docs.codat.io/sync-for-expenses-api#/schemas/TransferTransactionRequest) in the accounting software for a given company's connection.
   *
   * Transfers record the movement of money between two bank accounts, or between a bank account and a nominal account. Use them to represent actions such as topping up a debit card account or a balance transfer to another credit card.
   *
   * The `from.amount` and `to.amount` fields are in the native currency of the account.
   *
   * ### Supported Integrations
   * | Integration           | Supported |
   * |-----------------------|-----------|
   * | FreeAgent             | Yes       |
   * | QuickBooks Desktop    | Yes       |
   * | QuickBooks Online     | Yes       |
   * | Xero                  | Yes       |
   */
  async create(
    request: operations.CreateTransferTransactionRequest,
    options?: RequestOptions,
  ): Promise<shared.TransferTransactionResponse> {
    return unwrapAsync(transfersCreate(
      this,
      request,
      options,
    ));
  }
}
