/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { reimbursementsCreate } from "../funcs/reimbursementsCreate.js";
import { reimbursementsUpdate } from "../funcs/reimbursementsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Reimbursements extends ClientSDK {
  /**
   * Create reimbursable expense transaction
   *
   * @remarks
   * Use the *Create reimbursable expense* endpoint to submit an employee expense claim in the accounting platform for a given company's connection.
   *
   * [Reimbursable expense requests](https://docs.codat.io/sync-for-expenses-api#/schemas/ReimbursableExpenseTransactionRequest) are reflected in the accounting software in the form of **Bills** against an employee (who exists as a supplier in the accounting platform).
   *
   * ### Supported Integrations
   * | Integration           | Supported |
   * |-----------------------|-----------|
   * | FreeAgent             | Yes       |
   * | QuickBooks Desktop    | Yes       |
   * | QuickBooks Online     | Yes       |
   * | Oracle NetSuite       | Yes       |
   */
  async create(
    request: operations.CreateReimbursableExpenseTransactionRequest,
    options?: RequestOptions,
  ): Promise<shared.CreateReimbursableExpenseResponse> {
    return unwrapAsync(reimbursementsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Update reimbursable expense transaction
   *
   * @remarks
   * The *Update reimbursable expense* endpoint updates an existing employee expense claim in the accounting platform for a given company's connection.
   *
   * Updating an existing [reimbursable expense transaction](https://docs.codat.io/sync-for-expenses-api#/schemas/UpdateReimbursableExpenseTransactionRequest) will update the existing **bill** against an employee (who exists as a supplier in the accounting software).
   *
   * ### Supported Integrations
   * | Integration           | Supported |
   * |-----------------------|-----------|
   * | FreeAgent             | Yes       |
   * | QuickBooks Online     | Yes       |
   * | Oracle NetSuite       | Yes       |
   */
  async update(
    request: operations.UpdateReimbursableExpenseTransactionRequest,
    options?: RequestOptions,
  ): Promise<shared.CreateReimbursableExpenseResponse> {
    return unwrapAsync(reimbursementsUpdate(
      this,
      request,
      options,
    ));
  }
}
