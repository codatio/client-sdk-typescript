/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    PushOptionChoice,
    PushOptionChoice$inboundSchema,
    PushOptionChoice$Outbound,
    PushOptionChoice$outboundSchema,
} from "./pushoptionchoice.js";
import {
    PushOptionProperty,
    PushOptionProperty$inboundSchema,
    PushOptionProperty$Outbound,
    PushOptionProperty$outboundSchema,
} from "./pushoptionproperty.js";
import {
    PushOptionType,
    PushOptionType$inboundSchema,
    PushOptionType$outboundSchema,
} from "./pushoptiontype.js";
import {
    PushValidationInfo,
    PushValidationInfo$inboundSchema,
    PushValidationInfo$Outbound,
    PushValidationInfo$outboundSchema,
} from "./pushvalidationinfo.js";
import * as z from "zod";

export type PushOption = {
    /**
     * The option type.
     */
    type: PushOptionType;
    /**
     * The property's display name.
     */
    displayName: string;
    /**
     * A description of the property.
     */
    description?: string | undefined;
    /**
     * The property is required if `True`.
     */
    required: boolean;
    properties?: { [k: string]: PushOptionProperty } | null | undefined;
    options?: Array<PushOptionChoice> | null | undefined;
    validation?: PushValidationInfo | undefined;
};

/** @internal */
export const PushOption$inboundSchema: z.ZodType<PushOption, z.ZodTypeDef, unknown> = z.object({
    type: PushOptionType$inboundSchema,
    displayName: z.string(),
    description: z.string().optional(),
    required: z.boolean(),
    properties: z.nullable(z.record(PushOptionProperty$inboundSchema)).optional(),
    options: z.nullable(z.array(PushOptionChoice$inboundSchema)).optional(),
    validation: PushValidationInfo$inboundSchema.optional(),
});

/** @internal */
export type PushOption$Outbound = {
    type: string;
    displayName: string;
    description?: string | undefined;
    required: boolean;
    properties?: { [k: string]: PushOptionProperty$Outbound } | null | undefined;
    options?: Array<PushOptionChoice$Outbound> | null | undefined;
    validation?: PushValidationInfo$Outbound | undefined;
};

/** @internal */
export const PushOption$outboundSchema: z.ZodType<PushOption$Outbound, z.ZodTypeDef, PushOption> =
    z.object({
        type: PushOptionType$outboundSchema,
        displayName: z.string(),
        description: z.string().optional(),
        required: z.boolean(),
        properties: z.nullable(z.record(PushOptionProperty$outboundSchema)).optional(),
        options: z.nullable(z.array(PushOptionChoice$outboundSchema)).optional(),
        validation: PushValidationInfo$outboundSchema.optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PushOption$ {
    /** @deprecated use `PushOption$inboundSchema` instead. */
    export const inboundSchema = PushOption$inboundSchema;
    /** @deprecated use `PushOption$outboundSchema` instead. */
    export const outboundSchema = PushOption$outboundSchema;
    /** @deprecated use `PushOption$Outbound` instead. */
    export type Outbound = PushOption$Outbound;
}
