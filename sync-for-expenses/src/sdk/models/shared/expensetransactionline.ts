/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InvoiceTo } from "./invoiceto";
import { RecordRef } from "./recordref";
import { TrackingRef } from "./trackingref";
import { Expose, Type } from "class-transformer";

export class ExpenseTransactionLine extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "accountRef" })
    @Type(() => RecordRef)
    accountRef: RecordRef;

    /**
     * Unique identifier of the customer the expense is billable to. The invoiceTo object is currently only supported for QBO.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "invoiceTo" })
    @Type(() => InvoiceTo)
    invoiceTo?: InvoiceTo;

    /**
     * Amount of the line, exclusive of tax.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "netAmount" })
    netAmount: number;

    /**
     * Amount of tax for the line.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "taxAmount" })
    taxAmount?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "taxRateRef" })
    @Type(() => RecordRef)
    taxRateRef?: RecordRef;

    @SpeakeasyMetadata({ elemType: TrackingRef })
    @Expose({ name: "trackingRefs" })
    @Type(() => TrackingRef)
    trackingRefs?: TrackingRef[];
}
