/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type SupplierDetails = {
    /**
     * Identifier for the supplier, unique to the company in the accounting platform.
     */
    id?: string | undefined;
};

/** @internal */
export const SupplierDetails$inboundSchema: z.ZodType<SupplierDetails, z.ZodTypeDef, unknown> =
    z.object({
        id: z.string().optional(),
    });

/** @internal */
export type SupplierDetails$Outbound = {
    id?: string | undefined;
};

/** @internal */
export const SupplierDetails$outboundSchema: z.ZodType<
    SupplierDetails$Outbound,
    z.ZodTypeDef,
    SupplierDetails
> = z.object({
    id: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SupplierDetails$ {
    /** @deprecated use `SupplierDetails$inboundSchema` instead. */
    export const inboundSchema = SupplierDetails$inboundSchema;
    /** @deprecated use `SupplierDetails$outboundSchema` instead. */
    export const outboundSchema = SupplierDetails$outboundSchema;
    /** @deprecated use `SupplierDetails$Outbound` instead. */
    export type Outbound = SupplierDetails$Outbound;
}
