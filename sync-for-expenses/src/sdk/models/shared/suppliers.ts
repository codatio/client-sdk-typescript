/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import { Links, Links$inboundSchema, Links$Outbound, Links$outboundSchema } from "./links.js";
import {
    Supplier,
    Supplier$inboundSchema,
    Supplier$Outbound,
    Supplier$outboundSchema,
} from "./supplier.js";
import * as z from "zod";

export type Suppliers = {
    results?: Array<Supplier> | undefined;
    /**
     * Current page number.
     */
    pageNumber: number;
    /**
     * Number of items to return in results array.
     */
    pageSize: number;
    /**
     * Total number of items.
     */
    totalResults: number;
    links: Links;
};

/** @internal */
export const Suppliers$inboundSchema: z.ZodType<Suppliers, z.ZodTypeDef, unknown> = z
    .object({
        results: z.array(Supplier$inboundSchema).optional(),
        pageNumber: z.number().int(),
        pageSize: z.number().int(),
        totalResults: z.number().int(),
        _links: Links$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            _links: "links",
        });
    });

/** @internal */
export type Suppliers$Outbound = {
    results?: Array<Supplier$Outbound> | undefined;
    pageNumber: number;
    pageSize: number;
    totalResults: number;
    _links: Links$Outbound;
};

/** @internal */
export const Suppliers$outboundSchema: z.ZodType<Suppliers$Outbound, z.ZodTypeDef, Suppliers> = z
    .object({
        results: z.array(Supplier$outboundSchema).optional(),
        pageNumber: z.number().int(),
        pageSize: z.number().int(),
        totalResults: z.number().int(),
        links: Links$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            links: "_links",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Suppliers$ {
    /** @deprecated use `Suppliers$inboundSchema` instead. */
    export const inboundSchema = Suppliers$inboundSchema;
    /** @deprecated use `Suppliers$outboundSchema` instead. */
    export const outboundSchema = Suppliers$outboundSchema;
    /** @deprecated use `Suppliers$Outbound` instead. */
    export type Outbound = Suppliers$Outbound;
}
