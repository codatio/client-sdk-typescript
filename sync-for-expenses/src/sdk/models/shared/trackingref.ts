/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The type of the linked reference
 */
export const TrackingRefDataType = {
    TrackingCategories: "trackingCategories",
    Customers: "customers",
} as const;
/**
 * The type of the linked reference
 */
export type TrackingRefDataType = ClosedEnum<typeof TrackingRefDataType>;

export type TrackingRef = {
    /**
     * Unique identifier of the linked reference from mapping options or the unique identifier of the linked customer.
     */
    id?: string | undefined;
    /**
     * The type of the linked reference
     */
    dataType?: TrackingRefDataType | undefined;
};

/** @internal */
export const TrackingRefDataType$inboundSchema: z.ZodNativeEnum<typeof TrackingRefDataType> =
    z.nativeEnum(TrackingRefDataType);

/** @internal */
export const TrackingRefDataType$outboundSchema: z.ZodNativeEnum<typeof TrackingRefDataType> =
    TrackingRefDataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TrackingRefDataType$ {
    /** @deprecated use `TrackingRefDataType$inboundSchema` instead. */
    export const inboundSchema = TrackingRefDataType$inboundSchema;
    /** @deprecated use `TrackingRefDataType$outboundSchema` instead. */
    export const outboundSchema = TrackingRefDataType$outboundSchema;
}

/** @internal */
export const TrackingRef$inboundSchema: z.ZodType<TrackingRef, z.ZodTypeDef, unknown> = z.object({
    id: z.string().optional(),
    dataType: TrackingRefDataType$inboundSchema.default("trackingCategories"),
});

/** @internal */
export type TrackingRef$Outbound = {
    id?: string | undefined;
    dataType: string;
};

/** @internal */
export const TrackingRef$outboundSchema: z.ZodType<
    TrackingRef$Outbound,
    z.ZodTypeDef,
    TrackingRef
> = z.object({
    id: z.string().optional(),
    dataType: TrackingRefDataType$outboundSchema.default("trackingCategories"),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TrackingRef$ {
    /** @deprecated use `TrackingRef$inboundSchema` instead. */
    export const inboundSchema = TrackingRef$inboundSchema;
    /** @deprecated use `TrackingRef$outboundSchema` instead. */
    export const outboundSchema = TrackingRef$outboundSchema;
    /** @deprecated use `TrackingRef$Outbound` instead. */
    export type Outbound = TrackingRef$Outbound;
}
