/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type Attachment = {
    /**
     * Unique ID of company in Codat
     */
    companyId?: string | undefined;
    /**
     * Unique identifier of attachment
     */
    id?: string | undefined;
    /**
     * Unique identifier of transaction
     */
    transactionId?: string | undefined;
};

/** @internal */
export const Attachment$inboundSchema: z.ZodType<Attachment, z.ZodTypeDef, unknown> = z.object({
    companyId: z.string().optional(),
    id: z.string().optional(),
    transactionId: z.string().optional(),
});

/** @internal */
export type Attachment$Outbound = {
    companyId?: string | undefined;
    id?: string | undefined;
    transactionId?: string | undefined;
};

/** @internal */
export const Attachment$outboundSchema: z.ZodType<Attachment$Outbound, z.ZodTypeDef, Attachment> =
    z.object({
        companyId: z.string().optional(),
        id: z.string().optional(),
        transactionId: z.string().optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Attachment$ {
    /** @deprecated use `Attachment$inboundSchema` instead. */
    export const inboundSchema = Attachment$inboundSchema;
    /** @deprecated use `Attachment$outboundSchema` instead. */
    export const outboundSchema = Attachment$outboundSchema;
    /** @deprecated use `Attachment$Outbound` instead. */
    export type Outbound = Attachment$Outbound;
}
