/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as b64$ from "../../../lib/base64.js";
import * as z from "zod";

export type CodatFile = {
    fileName: string;
    content: Uint8Array | string;
};

/** @internal */
export const CodatFile$inboundSchema: z.ZodType<CodatFile, z.ZodTypeDef, unknown> = z.object({
    fileName: z.string(),
    content: b64$.zodInbound,
});

/** @internal */
export type CodatFile$Outbound = {
    fileName: string;
    content: Uint8Array;
};

/** @internal */
export const CodatFile$outboundSchema: z.ZodType<CodatFile$Outbound, z.ZodTypeDef, CodatFile> =
    z.object({
        fileName: z.string(),
        content: b64$.zodOutbound,
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CodatFile$ {
    /** @deprecated use `CodatFile$inboundSchema` instead. */
    export const inboundSchema = CodatFile$inboundSchema;
    /** @deprecated use `CodatFile$outboundSchema` instead. */
    export const outboundSchema = CodatFile$outboundSchema;
    /** @deprecated use `CodatFile$Outbound` instead. */
    export type Outbound = CodatFile$Outbound;
}
