/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type TrackingCategoryMappingInfo = {
  /**
   * Unique identifier of the tracking category.
   */
  id?: string | undefined;
  /**
   * Name of the tracking category as it appears in the accounting software.
   */
  name?: string | undefined;
  /**
   * Boolean of whether the tracking category has child categories.
   */
  hasChildren?: boolean | undefined;
  /**
   * ID of the parent tracking category
   */
  parentId?: string | null | undefined;
};

/** @internal */
export const TrackingCategoryMappingInfo$inboundSchema: z.ZodType<
  TrackingCategoryMappingInfo,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  hasChildren: z.boolean().optional(),
  parentId: z.nullable(z.string()).optional(),
});

/** @internal */
export type TrackingCategoryMappingInfo$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  hasChildren?: boolean | undefined;
  parentId?: string | null | undefined;
};

/** @internal */
export const TrackingCategoryMappingInfo$outboundSchema: z.ZodType<
  TrackingCategoryMappingInfo$Outbound,
  z.ZodTypeDef,
  TrackingCategoryMappingInfo
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  hasChildren: z.boolean().optional(),
  parentId: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TrackingCategoryMappingInfo$ {
  /** @deprecated use `TrackingCategoryMappingInfo$inboundSchema` instead. */
  export const inboundSchema = TrackingCategoryMappingInfo$inboundSchema;
  /** @deprecated use `TrackingCategoryMappingInfo$outboundSchema` instead. */
  export const outboundSchema = TrackingCategoryMappingInfo$outboundSchema;
  /** @deprecated use `TrackingCategoryMappingInfo$Outbound` instead. */
  export type Outbound = TrackingCategoryMappingInfo$Outbound;
}

export function trackingCategoryMappingInfoToJSON(
  trackingCategoryMappingInfo: TrackingCategoryMappingInfo,
): string {
  return JSON.stringify(
    TrackingCategoryMappingInfo$outboundSchema.parse(
      trackingCategoryMappingInfo,
    ),
  );
}

export function trackingCategoryMappingInfoFromJSON(
  jsonString: string,
): SafeParseResult<TrackingCategoryMappingInfo, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TrackingCategoryMappingInfo$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TrackingCategoryMappingInfo' from JSON`,
  );
}
