/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type RecordRef = {
    /**
     * Identifier of linked reference from mapping options.
     */
    id?: string | undefined;
};

/** @internal */
export const RecordRef$inboundSchema: z.ZodType<RecordRef, z.ZodTypeDef, unknown> = z.object({
    id: z.string().optional(),
});

/** @internal */
export type RecordRef$Outbound = {
    id?: string | undefined;
};

/** @internal */
export const RecordRef$outboundSchema: z.ZodType<RecordRef$Outbound, z.ZodTypeDef, RecordRef> =
    z.object({
        id: z.string().optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecordRef$ {
    /** @deprecated use `RecordRef$inboundSchema` instead. */
    export const inboundSchema = RecordRef$inboundSchema;
    /** @deprecated use `RecordRef$outboundSchema` instead. */
    export const outboundSchema = RecordRef$outboundSchema;
    /** @deprecated use `RecordRef$Outbound` instead. */
    export type Outbound = RecordRef$Outbound;
}
