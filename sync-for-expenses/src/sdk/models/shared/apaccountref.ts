/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ApAccountRef = {
  /**
   * Unique identifier for the Accounts Payable account associated with the transaction. The `apAccountRef` object is currently supported only for QuickBooks Desktop.
   */
  id?: string | undefined;
};

/** @internal */
export const ApAccountRef$inboundSchema: z.ZodType<
  ApAccountRef,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
});

/** @internal */
export type ApAccountRef$Outbound = {
  id?: string | undefined;
};

/** @internal */
export const ApAccountRef$outboundSchema: z.ZodType<
  ApAccountRef$Outbound,
  z.ZodTypeDef,
  ApAccountRef
> = z.object({
  id: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApAccountRef$ {
  /** @deprecated use `ApAccountRef$inboundSchema` instead. */
  export const inboundSchema = ApAccountRef$inboundSchema;
  /** @deprecated use `ApAccountRef$outboundSchema` instead. */
  export const outboundSchema = ApAccountRef$outboundSchema;
  /** @deprecated use `ApAccountRef$Outbound` instead. */
  export type Outbound = ApAccountRef$Outbound;
}

export function apAccountRefToJSON(apAccountRef: ApAccountRef): string {
  return JSON.stringify(ApAccountRef$outboundSchema.parse(apAccountRef));
}

export function apAccountRefFromJSON(
  jsonString: string,
): SafeParseResult<ApAccountRef, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ApAccountRef$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApAccountRef' from JSON`,
  );
}
