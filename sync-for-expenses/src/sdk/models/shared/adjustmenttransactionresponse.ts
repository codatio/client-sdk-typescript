/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AdjustmentTransactionResponse = {
  /**
   * Unique id of sync created
   */
  syncId?: string | undefined;
};

/** @internal */
export const AdjustmentTransactionResponse$inboundSchema: z.ZodType<
  AdjustmentTransactionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  syncId: z.string().optional(),
});

/** @internal */
export type AdjustmentTransactionResponse$Outbound = {
  syncId?: string | undefined;
};

/** @internal */
export const AdjustmentTransactionResponse$outboundSchema: z.ZodType<
  AdjustmentTransactionResponse$Outbound,
  z.ZodTypeDef,
  AdjustmentTransactionResponse
> = z.object({
  syncId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AdjustmentTransactionResponse$ {
  /** @deprecated use `AdjustmentTransactionResponse$inboundSchema` instead. */
  export const inboundSchema = AdjustmentTransactionResponse$inboundSchema;
  /** @deprecated use `AdjustmentTransactionResponse$outboundSchema` instead. */
  export const outboundSchema = AdjustmentTransactionResponse$outboundSchema;
  /** @deprecated use `AdjustmentTransactionResponse$Outbound` instead. */
  export type Outbound = AdjustmentTransactionResponse$Outbound;
}

export function adjustmentTransactionResponseToJSON(
  adjustmentTransactionResponse: AdjustmentTransactionResponse,
): string {
  return JSON.stringify(
    AdjustmentTransactionResponse$outboundSchema.parse(
      adjustmentTransactionResponse,
    ),
  );
}

export function adjustmentTransactionResponseFromJSON(
  jsonString: string,
): SafeParseResult<AdjustmentTransactionResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AdjustmentTransactionResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AdjustmentTransactionResponse' from JSON`,
  );
}
