/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type BankAccount = {
    /**
     * The id of the account from which purchases are made
     */
    id?: string | undefined;
};

/** @internal */
export const BankAccount$inboundSchema: z.ZodType<BankAccount, z.ZodTypeDef, unknown> = z.object({
    id: z.string().optional(),
});

/** @internal */
export type BankAccount$Outbound = {
    id?: string | undefined;
};

/** @internal */
export const BankAccount$outboundSchema: z.ZodType<
    BankAccount$Outbound,
    z.ZodTypeDef,
    BankAccount
> = z.object({
    id: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BankAccount$ {
    /** @deprecated use `BankAccount$inboundSchema` instead. */
    export const inboundSchema = BankAccount$inboundSchema;
    /** @deprecated use `BankAccount$outboundSchema` instead. */
    export const outboundSchema = BankAccount$outboundSchema;
    /** @deprecated use `BankAccount$Outbound` instead. */
    export type Outbound = BankAccount$Outbound;
}
