/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetCustomerRequest = {
    /**
     * Unique identifier for a company.
     */
    companyId: string;
    /**
     * Unique identifier for a customer.
     */
    customerId: string;
};

/** @internal */
export const GetCustomerRequest$inboundSchema: z.ZodType<
    GetCustomerRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    companyId: z.string(),
    customerId: z.string(),
});

/** @internal */
export type GetCustomerRequest$Outbound = {
    companyId: string;
    customerId: string;
};

/** @internal */
export const GetCustomerRequest$outboundSchema: z.ZodType<
    GetCustomerRequest$Outbound,
    z.ZodTypeDef,
    GetCustomerRequest
> = z.object({
    companyId: z.string(),
    customerId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCustomerRequest$ {
    /** @deprecated use `GetCustomerRequest$inboundSchema` instead. */
    export const inboundSchema = GetCustomerRequest$inboundSchema;
    /** @deprecated use `GetCustomerRequest$outboundSchema` instead. */
    export const outboundSchema = GetCustomerRequest$outboundSchema;
    /** @deprecated use `GetCustomerRequest$Outbound` instead. */
    export type Outbound = GetCustomerRequest$Outbound;
}
