/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type CreateBankTransactionsRequest = {
    /**
     * Unique identifier for a company.
     */
    companyId: string;
    /**
     * Unique identifier for a connection.
     */
    connectionId: string;
    /**
     * Unique identifier for an account.
     */
    accountId: string;
    /**
     * Time limit for the push operation to complete before it is timed out.
     */
    timeoutInMinutes?: number | undefined;
    /**
     * Allow a sync upon push completion.
     */
    allowSyncOnPushComplete?: boolean | undefined;
    createBankTransactions?: shared.CreateBankTransactions | undefined;
};

/** @internal */
export const CreateBankTransactionsRequest$inboundSchema: z.ZodType<
    CreateBankTransactionsRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        companyId: z.string(),
        connectionId: z.string(),
        accountId: z.string(),
        timeoutInMinutes: z.number().int().optional(),
        allowSyncOnPushComplete: z.boolean().default(true),
        CreateBankTransactions: shared.CreateBankTransactions$inboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            CreateBankTransactions: "createBankTransactions",
        });
    });

/** @internal */
export type CreateBankTransactionsRequest$Outbound = {
    companyId: string;
    connectionId: string;
    accountId: string;
    timeoutInMinutes?: number | undefined;
    allowSyncOnPushComplete: boolean;
    CreateBankTransactions?: shared.CreateBankTransactions$Outbound | undefined;
};

/** @internal */
export const CreateBankTransactionsRequest$outboundSchema: z.ZodType<
    CreateBankTransactionsRequest$Outbound,
    z.ZodTypeDef,
    CreateBankTransactionsRequest
> = z
    .object({
        companyId: z.string(),
        connectionId: z.string(),
        accountId: z.string(),
        timeoutInMinutes: z.number().int().optional(),
        allowSyncOnPushComplete: z.boolean().default(true),
        createBankTransactions: shared.CreateBankTransactions$outboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            createBankTransactions: "CreateBankTransactions",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateBankTransactionsRequest$ {
    /** @deprecated use `CreateBankTransactionsRequest$inboundSchema` instead. */
    export const inboundSchema = CreateBankTransactionsRequest$inboundSchema;
    /** @deprecated use `CreateBankTransactionsRequest$outboundSchema` instead. */
    export const outboundSchema = CreateBankTransactionsRequest$outboundSchema;
    /** @deprecated use `CreateBankTransactionsRequest$Outbound` instead. */
    export type Outbound = CreateBankTransactionsRequest$Outbound;
}
