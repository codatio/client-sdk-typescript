/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";

export type GenerateCredentialsRequest = {
  /**
   * Unique identifier for a company.
   */
  companyId: string;
  /**
   * Unique identifier for a connection.
   */
  connectionId: string;
  requestBody: ReadableStream<Uint8Array> | Blob | ArrayBuffer | Uint8Array;
};

/** @internal */
export const GenerateCredentialsRequest$inboundSchema: z.ZodType<
  GenerateCredentialsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  companyId: z.string(),
  connectionId: z.string(),
  RequestBody: z.union([
    z.instanceof(ReadableStream<Uint8Array>),
    z.instanceof(Blob),
    z.instanceof(ArrayBuffer),
    z.instanceof(Uint8Array),
  ]),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type GenerateCredentialsRequest$Outbound = {
  companyId: string;
  connectionId: string;
  RequestBody: ReadableStream<Uint8Array> | Blob | ArrayBuffer | Uint8Array;
};

/** @internal */
export const GenerateCredentialsRequest$outboundSchema: z.ZodType<
  GenerateCredentialsRequest$Outbound,
  z.ZodTypeDef,
  GenerateCredentialsRequest
> = z.object({
  companyId: z.string(),
  connectionId: z.string(),
  requestBody: z.union([
    z.instanceof(ReadableStream<Uint8Array>),
    z.instanceof(Blob),
    z.instanceof(ArrayBuffer),
    z.instanceof(Uint8Array),
  ]),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenerateCredentialsRequest$ {
  /** @deprecated use `GenerateCredentialsRequest$inboundSchema` instead. */
  export const inboundSchema = GenerateCredentialsRequest$inboundSchema;
  /** @deprecated use `GenerateCredentialsRequest$outboundSchema` instead. */
  export const outboundSchema = GenerateCredentialsRequest$outboundSchema;
  /** @deprecated use `GenerateCredentialsRequest$Outbound` instead. */
  export type Outbound = GenerateCredentialsRequest$Outbound;
}
