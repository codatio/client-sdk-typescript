/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    BankTransactions,
    BankTransactions$inboundSchema,
    BankTransactions$Outbound,
    BankTransactions$outboundSchema,
} from "./banktransactions.js";
import * as z from "zod";

export type CreateBankTransactions = {
    /**
     * Unique identifier for a bank account.
     */
    accountId: string;
    transactions: Array<BankTransactions>;
};

/** @internal */
export const CreateBankTransactions$inboundSchema: z.ZodType<
    CreateBankTransactions,
    z.ZodTypeDef,
    unknown
> = z.object({
    accountId: z.string(),
    transactions: z.array(BankTransactions$inboundSchema),
});

/** @internal */
export type CreateBankTransactions$Outbound = {
    accountId: string;
    transactions: Array<BankTransactions$Outbound>;
};

/** @internal */
export const CreateBankTransactions$outboundSchema: z.ZodType<
    CreateBankTransactions$Outbound,
    z.ZodTypeDef,
    CreateBankTransactions
> = z.object({
    accountId: z.string(),
    transactions: z.array(BankTransactions$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateBankTransactions$ {
    /** @deprecated use `CreateBankTransactions$inboundSchema` instead. */
    export const inboundSchema = CreateBankTransactions$inboundSchema;
    /** @deprecated use `CreateBankTransactions$outboundSchema` instead. */
    export const outboundSchema = CreateBankTransactions$outboundSchema;
    /** @deprecated use `CreateBankTransactions$Outbound` instead. */
    export type Outbound = CreateBankTransactions$Outbound;
}
