/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type BankAccountOption = {
  /**
   * Unique identifier for the bank account.
   */
  id?: string | undefined;
  /**
   * Name of bank account.
   */
  name?: string | undefined;
  /**
   * The type of account.
   */
  accountType?: string | undefined;
};

/** @internal */
export const BankAccountOption$inboundSchema: z.ZodType<
  BankAccountOption,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  accountType: z.string().optional(),
});

/** @internal */
export type BankAccountOption$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  accountType?: string | undefined;
};

/** @internal */
export const BankAccountOption$outboundSchema: z.ZodType<
  BankAccountOption$Outbound,
  z.ZodTypeDef,
  BankAccountOption
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  accountType: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BankAccountOption$ {
  /** @deprecated use `BankAccountOption$inboundSchema` instead. */
  export const inboundSchema = BankAccountOption$inboundSchema;
  /** @deprecated use `BankAccountOption$outboundSchema` instead. */
  export const outboundSchema = BankAccountOption$outboundSchema;
  /** @deprecated use `BankAccountOption$Outbound` instead. */
  export type Outbound = BankAccountOption$Outbound;
}
