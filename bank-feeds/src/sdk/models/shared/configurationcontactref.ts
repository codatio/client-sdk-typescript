/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type ConfigurationContactRef = {
    /**
     * Unique identifier for the supplier/customer.
     */
    id?: string | undefined;
    /**
     * The supplier/customer's name.
     */
    name?: string | undefined;
};

/** @internal */
export const ConfigurationContactRef$inboundSchema: z.ZodType<
    ConfigurationContactRef,
    z.ZodTypeDef,
    unknown
> = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
});

/** @internal */
export type ConfigurationContactRef$Outbound = {
    id?: string | undefined;
    name?: string | undefined;
};

/** @internal */
export const ConfigurationContactRef$outboundSchema: z.ZodType<
    ConfigurationContactRef$Outbound,
    z.ZodTypeDef,
    ConfigurationContactRef
> = z.object({
    id: z.string().optional(),
    name: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConfigurationContactRef$ {
    /** @deprecated use `ConfigurationContactRef$inboundSchema` instead. */
    export const inboundSchema = ConfigurationContactRef$inboundSchema;
    /** @deprecated use `ConfigurationContactRef$outboundSchema` instead. */
    export const outboundSchema = ConfigurationContactRef$outboundSchema;
    /** @deprecated use `ConfigurationContactRef$Outbound` instead. */
    export type Outbound = ConfigurationContactRef$Outbound;
}
