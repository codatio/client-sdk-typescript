/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Information about the company from the underlying accounting software.
 */
export type CompanyInformation = {
  /**
   * Name of the linked company.
   */
  companyName?: string | undefined;
  /**
   * Currency set in the accounting software of the linked company.
   */
  baseCurrency?: string | undefined;
  /**
   * Accounting software subscription type such as Trial, Demo, Standard.
   */
  planType?: string | null | undefined;
  /**
   * Boolean showing if the organisation has multicurrency enabled.
   */
  multicurrencyEnabled?: boolean | undefined;
  /**
   * Array of enabled currencies for the linked company.
   */
  currencies?: Array<string> | null | undefined;
};

/** @internal */
export const CompanyInformation$inboundSchema: z.ZodType<
  CompanyInformation,
  z.ZodTypeDef,
  unknown
> = z.object({
  companyName: z.string().optional(),
  baseCurrency: z.string().optional(),
  planType: z.nullable(z.string()).optional(),
  multicurrencyEnabled: z.boolean().optional(),
  currencies: z.nullable(z.array(z.string())).optional(),
});

/** @internal */
export type CompanyInformation$Outbound = {
  companyName?: string | undefined;
  baseCurrency?: string | undefined;
  planType?: string | null | undefined;
  multicurrencyEnabled?: boolean | undefined;
  currencies?: Array<string> | null | undefined;
};

/** @internal */
export const CompanyInformation$outboundSchema: z.ZodType<
  CompanyInformation$Outbound,
  z.ZodTypeDef,
  CompanyInformation
> = z.object({
  companyName: z.string().optional(),
  baseCurrency: z.string().optional(),
  planType: z.nullable(z.string()).optional(),
  multicurrencyEnabled: z.boolean().optional(),
  currencies: z.nullable(z.array(z.string())).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompanyInformation$ {
  /** @deprecated use `CompanyInformation$inboundSchema` instead. */
  export const inboundSchema = CompanyInformation$inboundSchema;
  /** @deprecated use `CompanyInformation$outboundSchema` instead. */
  export const outboundSchema = CompanyInformation$outboundSchema;
  /** @deprecated use `CompanyInformation$Outbound` instead. */
  export type Outbound = CompanyInformation$Outbound;
}
