/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Result of generate credentials
 */
export type BankAccountCredentials = {
  /**
   * Username used by the bank feeds platform to retrieve transactions
   */
  username?: string | undefined;
  /**
   * Password to enable the bank feeds platform to securely retrieve transactions.
   */
  password?: string | undefined;
};

/** @internal */
export const BankAccountCredentials$inboundSchema: z.ZodType<
  BankAccountCredentials,
  z.ZodTypeDef,
  unknown
> = z.object({
  username: z.string().optional(),
  password: z.string().optional(),
});

/** @internal */
export type BankAccountCredentials$Outbound = {
  username?: string | undefined;
  password?: string | undefined;
};

/** @internal */
export const BankAccountCredentials$outboundSchema: z.ZodType<
  BankAccountCredentials$Outbound,
  z.ZodTypeDef,
  BankAccountCredentials
> = z.object({
  username: z.string().optional(),
  password: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BankAccountCredentials$ {
  /** @deprecated use `BankAccountCredentials$inboundSchema` instead. */
  export const inboundSchema = BankAccountCredentials$inboundSchema;
  /** @deprecated use `BankAccountCredentials$outboundSchema` instead. */
  export const outboundSchema = BankAccountCredentials$outboundSchema;
  /** @deprecated use `BankAccountCredentials$Outbound` instead. */
  export type Outbound = BankAccountCredentials$Outbound;
}
