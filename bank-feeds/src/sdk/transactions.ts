/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { transactionsCreate } from "../funcs/transactionsCreate.js";
import { transactionsGetCreateOperation } from "../funcs/transactionsGetCreateOperation.js";
import { transactionsListCreateOperations } from "../funcs/transactionsListCreateOperations.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Transactions extends ClientSDK {
  /**
   * Create bank transactions
   *
   * @remarks
   * The *Create bank transactions* endpoint creates new [bank transactions](https://docs.codat.io/bank-feeds-api#/schemas/BankTransactions) for a given company's connection.
   *
   * [Bank transactions](https://docs.codat.io/bank-feeds-api#/schemas/BankTransactions) are records of monetary amounts that have moved in and out of an SMB's bank account.
   *
   * **Integration-specific behaviour**
   *
   * Required data may vary by integration. To see what data to post, first call [Get create bank transaction model](https://docs.codat.io/bank-feeds-api#/operations/get-create-bankTransactions-model).
   */
  async create(
    request: operations.CreateBankTransactionsRequest,
    options?: RequestOptions,
  ): Promise<shared.CreateBankTransactionsResponse> {
    return unwrapAsync(transactionsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get create operation
   *
   * @remarks
   * The **Get create operation** endpoint returns a specific [write operation](/using-the-api/push) identified by the `pushOperationKey` that was performed on the company.
   *
   * Write operations are actions that send requests to Codat, enabling the creation, updating, deletion of records, or uploading attachments in the connected accounting software.
   *
   * For bank feeds, your push operations will only relate to the `bankTransactions` data type.
   */
  async getCreateOperation(
    request: operations.GetCreateOperationRequest,
    options?: RequestOptions,
  ): Promise<shared.PushOperation> {
    return unwrapAsync(transactionsGetCreateOperation(
      this,
      request,
      options,
    ));
  }

  /**
   * List create operations
   *
   * @remarks
   * The **List create operations** endpoint returns a list of [write operations](/using-the-api/push) performed on the company.
   *
   * Write operations are actions that send requests to Codat, enabling the creation, updating, deletion of records, or uploading attachments in the connected accounting software.
   *
   * For bank feeds, use this endpoint to view write operations related to the `bankTransactions` data type.
   */
  async listCreateOperations(
    request: operations.ListCreateOperationsRequest,
    options?: RequestOptions,
  ): Promise<shared.PushOperations> {
    return unwrapAsync(transactionsListCreateOperations(
      this,
      request,
      options,
    ));
  }
}
