lockVersion: 2.0.0
id: 87e6188d-fa80-4f96-a443-9e303956b15f
management:
  docChecksum: c57bceaa5f2d5b6d55426976a49ec69d
  docVersion: 3.0.0
  speakeasyVersion: 1.431.0
  generationVersion: 2.451.0
  releaseVersion: 5.1.0
  configChecksum: 7b3fef02acdcbef3acab7d145b28bf16
  repoURL: https://github.com/codatio/client-sdk-typescript.git
  repoSubDirectory: bank-feeds
  installationURL: https://gitpkg.now.sh/codatio/client-sdk-typescript/bank-feeds
  published: true
features:
  typescript:
    additionalDependencies: 0.1.0
    constsAndDefaults: 0.1.11
    core: 3.18.3
    decimal: 0.1.2
    defaultEnabledRetries: 0.1.0
    deprecations: 2.81.1
    enumUnions: 0.1.0
    envVarSecurityUsage: 0.1.2
    examples: 2.81.4
    globalSecurity: 2.82.11
    globalSecurityCallbacks: 0.1.0
    globalSecurityFlattening: 0.1.0
    globalServerURLs: 2.82.4
    methodArguments: 0.1.2
    nameOverrides: 2.81.2
    nullables: 0.1.0
    responseFormat: 0.2.3
    retries: 2.83.0
    sdkHooks: 0.2.0
    serverEventsSentinels: 0.1.0
    tests: 0.7.0
    unions: 2.85.8
    uploadStreams: 0.1.0
    webhooks: 1.0.0
generatedFiles:
  - .eslintrc.cjs
  - .gitattributes
  - .npmignore
  - CONTRIBUTING.md
  - FUNCTIONS.md
  - RUNTIMES.md
  - USAGE.md
  - docs/lib/utils/retryconfig.md
  - docs/sdk/models/errors/errormessage.md
  - docs/sdk/models/operations/createbankaccountmappingrequest.md
  - docs/sdk/models/operations/createbankaccountrequest.md
  - docs/sdk/models/operations/createbanktransactionsrequest.md
  - docs/sdk/models/operations/createconnectionrequest.md
  - docs/sdk/models/operations/createconnectionrequestbody.md
  - docs/sdk/models/operations/createsourceaccountrequest.md
  - docs/sdk/models/operations/createsourceaccountrequestbody.md
  - docs/sdk/models/operations/createsourceaccountresponsebody.md
  - docs/sdk/models/operations/deletebankfeedcredentialsrequest.md
  - docs/sdk/models/operations/deletecompanyrequest.md
  - docs/sdk/models/operations/deleteconnectionrequest.md
  - docs/sdk/models/operations/deletesourceaccountrequest.md
  - docs/sdk/models/operations/generatecredentialsrequest.md
  - docs/sdk/models/operations/getbankaccountmappingrequest.md
  - docs/sdk/models/operations/getcompanyinformationrequest.md
  - docs/sdk/models/operations/getcompanyrequest.md
  - docs/sdk/models/operations/getconfigurationrequest.md
  - docs/sdk/models/operations/getconnectionrequest.md
  - docs/sdk/models/operations/getcreatebankaccountsmodelrequest.md
  - docs/sdk/models/operations/getcreateoperationrequest.md
  - docs/sdk/models/operations/getlastsuccessfulrequest.md
  - docs/sdk/models/operations/listbankaccountsrequest.md
  - docs/sdk/models/operations/listcompaniesrequest.md
  - docs/sdk/models/operations/listconnectionsrequest.md
  - docs/sdk/models/operations/listcreateoperationsrequest.md
  - docs/sdk/models/operations/listsourceaccountsrequest.md
  - docs/sdk/models/operations/listsourceaccountsresponsebody.md
  - docs/sdk/models/operations/setconfigurationrequest.md
  - docs/sdk/models/operations/unlinkconnectionrequest.md
  - docs/sdk/models/operations/unlinkconnectionupdateconnection.md
  - docs/sdk/models/operations/updatecompanyrequest.md
  - docs/sdk/models/operations/updatesourceaccountrequest.md
  - docs/sdk/models/shared/accountinfo.md
  - docs/sdk/models/shared/accountingbankaccount.md
  - docs/sdk/models/shared/accounttype.md
  - docs/sdk/models/shared/bankaccountcreateresponse.md
  - docs/sdk/models/shared/bankaccountcreateresponseaccountingbankaccount.md
  - docs/sdk/models/shared/bankaccountcreateresponsebankaccounttype.md
  - docs/sdk/models/shared/bankaccountcreateresponsemetadata.md
  - docs/sdk/models/shared/bankaccountcreateresponsesupplementaldata.md
  - docs/sdk/models/shared/bankaccountcredentials.md
  - docs/sdk/models/shared/bankaccountoption.md
  - docs/sdk/models/shared/bankaccountprototype.md
  - docs/sdk/models/shared/bankaccounts.md
  - docs/sdk/models/shared/bankaccountsbankaccounttype.md
  - docs/sdk/models/shared/bankaccountstatus.md
  - docs/sdk/models/shared/bankaccounttype.md
  - docs/sdk/models/shared/bankfeedaccountmapping.md
  - docs/sdk/models/shared/bankfeedaccountmappingresponse.md
  - docs/sdk/models/shared/bankfeedmapping.md
  - docs/sdk/models/shared/banktransactions.md
  - docs/sdk/models/shared/banktransactiontype.md
  - docs/sdk/models/shared/clientratelimitreachedwebhook.md
  - docs/sdk/models/shared/clientratelimitreachedwebhookdata.md
  - docs/sdk/models/shared/clientratelimitresetwebhook.md
  - docs/sdk/models/shared/clientratelimitresetwebhookdata.md
  - docs/sdk/models/shared/clientratelimitwebhook.md
  - docs/sdk/models/shared/clientratelimitwebhookpayload.md
  - docs/sdk/models/shared/companies.md
  - docs/sdk/models/shared/company.md
  - docs/sdk/models/shared/companyinformation.md
  - docs/sdk/models/shared/companyreference.md
  - docs/sdk/models/shared/companyreferencelinks.md
  - docs/sdk/models/shared/companyrequestbody.md
  - docs/sdk/models/shared/companysyncstatus.md
  - docs/sdk/models/shared/configuration.md
  - docs/sdk/models/shared/configurationcontactref.md
  - docs/sdk/models/shared/configurationcustomer.md
  - docs/sdk/models/shared/configurationschedule.md
  - docs/sdk/models/shared/configurationsupplier.md
  - docs/sdk/models/shared/connection.md
  - docs/sdk/models/shared/connections.md
  - docs/sdk/models/shared/createbanktransactions.md
  - docs/sdk/models/shared/createbanktransactionsresponse.md
  - docs/sdk/models/shared/dataconnectionerror.md
  - docs/sdk/models/shared/dataconnectionstatus.md
  - docs/sdk/models/shared/datatype.md
  - docs/sdk/models/shared/errorstatus.md
  - docs/sdk/models/shared/errorvalidation.md
  - docs/sdk/models/shared/errorvalidationitem.md
  - docs/sdk/models/shared/halref.md
  - docs/sdk/models/shared/links.md
  - docs/sdk/models/shared/metadata.md
  - docs/sdk/models/shared/pushchangetype.md
  - docs/sdk/models/shared/pushfieldvalidation.md
  - docs/sdk/models/shared/pushoperation.md
  - docs/sdk/models/shared/pushoperationchange.md
  - docs/sdk/models/shared/pushoperationref.md
  - docs/sdk/models/shared/pushoperations.md
  - docs/sdk/models/shared/pushoperationstatus.md
  - docs/sdk/models/shared/pushoption.md
  - docs/sdk/models/shared/pushoptionchoice.md
  - docs/sdk/models/shared/pushoptionproperty.md
  - docs/sdk/models/shared/pushoptiontype.md
  - docs/sdk/models/shared/pushvalidationinfo.md
  - docs/sdk/models/shared/routinginfo.md
  - docs/sdk/models/shared/security.md
  - docs/sdk/models/shared/sourceaccount.md
  - docs/sdk/models/shared/sourceaccountstatus.md
  - docs/sdk/models/shared/sourceaccountv2.md
  - docs/sdk/models/shared/sourceaccountwebhook.md
  - docs/sdk/models/shared/sourceaccountwebhookpayload.md
  - docs/sdk/models/shared/sourcetype.md
  - docs/sdk/models/shared/status.md
  - docs/sdk/models/shared/supplementaldata.md
  - docs/sdk/models/shared/syncasbankfeeds.md
  - docs/sdk/models/shared/syncasexpenses.md
  - docs/sdk/models/shared/syncconfiguration.md
  - docs/sdk/models/shared/targetaccountoption.md
  - docs/sdk/models/shared/type.md
  - docs/sdk/models/shared/validation.md
  - docs/sdk/models/shared/validationitem.md
  - docs/sdks/accountmapping/README.md
  - docs/sdks/bankaccounts/README.md
  - docs/sdks/codatbankfeeds/README.md
  - docs/sdks/companies/README.md
  - docs/sdks/companyinformation/README.md
  - docs/sdks/configuration/README.md
  - docs/sdks/connections/README.md
  - docs/sdks/sourceaccounts/README.md
  - docs/sdks/sync/README.md
  - docs/sdks/transactions/README.md
  - jsr.json
  - package.json
  - src/core.ts
  - src/funcs/accountMappingCreate.ts
  - src/funcs/accountMappingGet.ts
  - src/funcs/bankAccountsCreate.ts
  - src/funcs/bankAccountsGetCreateModel.ts
  - src/funcs/bankAccountsList.ts
  - src/funcs/companiesCreate.ts
  - src/funcs/companiesDelete.ts
  - src/funcs/companiesGet.ts
  - src/funcs/companiesList.ts
  - src/funcs/companiesUpdate.ts
  - src/funcs/companyInformationGet.ts
  - src/funcs/configurationGet.ts
  - src/funcs/configurationSet.ts
  - src/funcs/connectionsCreate.ts
  - src/funcs/connectionsDelete.ts
  - src/funcs/connectionsGet.ts
  - src/funcs/connectionsList.ts
  - src/funcs/connectionsUnlink.ts
  - src/funcs/sourceAccountsCreate.ts
  - src/funcs/sourceAccountsDelete.ts
  - src/funcs/sourceAccountsDeleteCredentials.ts
  - src/funcs/sourceAccountsGenerateCredentials.ts
  - src/funcs/sourceAccountsList.ts
  - src/funcs/sourceAccountsUpdate.ts
  - src/funcs/syncGetLastSuccessfulSync.ts
  - src/funcs/transactionsCreate.ts
  - src/funcs/transactionsGetCreateOperation.ts
  - src/funcs/transactionsListCreateOperations.ts
  - src/hooks/hooks.ts
  - src/hooks/index.ts
  - src/hooks/types.ts
  - src/index.ts
  - src/lib/base64.ts
  - src/lib/config.ts
  - src/lib/dlv.ts
  - src/lib/encodings.ts
  - src/lib/files.ts
  - src/lib/http.ts
  - src/lib/is-plain-object.ts
  - src/lib/logger.ts
  - src/lib/matchers.ts
  - src/lib/primitives.ts
  - src/lib/retries.ts
  - src/lib/schemas.ts
  - src/lib/sdks.ts
  - src/lib/security.ts
  - src/lib/url.ts
  - src/sdk/accountmapping.ts
  - src/sdk/bankaccounts.ts
  - src/sdk/companies.ts
  - src/sdk/companyinformation.ts
  - src/sdk/configuration.ts
  - src/sdk/connections.ts
  - src/sdk/index.ts
  - src/sdk/models/errors/errormessage.ts
  - src/sdk/models/errors/httpclienterrors.ts
  - src/sdk/models/errors/index.ts
  - src/sdk/models/errors/sdkerror.ts
  - src/sdk/models/errors/sdkvalidationerror.ts
  - src/sdk/models/operations/createbankaccount.ts
  - src/sdk/models/operations/createbankaccountmapping.ts
  - src/sdk/models/operations/createbanktransactions.ts
  - src/sdk/models/operations/createconnection.ts
  - src/sdk/models/operations/createsourceaccount.ts
  - src/sdk/models/operations/deletebankfeedcredentials.ts
  - src/sdk/models/operations/deletecompany.ts
  - src/sdk/models/operations/deleteconnection.ts
  - src/sdk/models/operations/deletesourceaccount.ts
  - src/sdk/models/operations/generatecredentials.ts
  - src/sdk/models/operations/getbankaccountmapping.ts
  - src/sdk/models/operations/getcompany.ts
  - src/sdk/models/operations/getcompanyinformation.ts
  - src/sdk/models/operations/getconfiguration.ts
  - src/sdk/models/operations/getconnection.ts
  - src/sdk/models/operations/getcreatebankaccountsmodel.ts
  - src/sdk/models/operations/getcreateoperation.ts
  - src/sdk/models/operations/getlastsuccessful.ts
  - src/sdk/models/operations/index.ts
  - src/sdk/models/operations/listbankaccounts.ts
  - src/sdk/models/operations/listcompanies.ts
  - src/sdk/models/operations/listconnections.ts
  - src/sdk/models/operations/listcreateoperations.ts
  - src/sdk/models/operations/listsourceaccounts.ts
  - src/sdk/models/operations/setconfiguration.ts
  - src/sdk/models/operations/unlinkconnection.ts
  - src/sdk/models/operations/updatecompany.ts
  - src/sdk/models/operations/updatesourceaccount.ts
  - src/sdk/models/shared/accountinfo.ts
  - src/sdk/models/shared/bankaccountcreateresponse.ts
  - src/sdk/models/shared/bankaccountcredentials.ts
  - src/sdk/models/shared/bankaccountoption.ts
  - src/sdk/models/shared/bankaccountprototype.ts
  - src/sdk/models/shared/bankaccounts.ts
  - src/sdk/models/shared/bankaccountstatus.ts
  - src/sdk/models/shared/bankfeedaccountmapping.ts
  - src/sdk/models/shared/bankfeedaccountmappingresponse.ts
  - src/sdk/models/shared/bankfeedmapping.ts
  - src/sdk/models/shared/banktransactions.ts
  - src/sdk/models/shared/clientratelimitreachedwebhook.ts
  - src/sdk/models/shared/clientratelimitreachedwebhookdata.ts
  - src/sdk/models/shared/clientratelimitresetwebhook.ts
  - src/sdk/models/shared/clientratelimitresetwebhookdata.ts
  - src/sdk/models/shared/clientratelimitwebhook.ts
  - src/sdk/models/shared/clientratelimitwebhookpayload.ts
  - src/sdk/models/shared/companies.ts
  - src/sdk/models/shared/company.ts
  - src/sdk/models/shared/companyinformation.ts
  - src/sdk/models/shared/companyreference.ts
  - src/sdk/models/shared/companyrequestbody.ts
  - src/sdk/models/shared/companysyncstatus.ts
  - src/sdk/models/shared/configuration.ts
  - src/sdk/models/shared/configurationcontactref.ts
  - src/sdk/models/shared/configurationcustomer.ts
  - src/sdk/models/shared/configurationschedule.ts
  - src/sdk/models/shared/configurationsupplier.ts
  - src/sdk/models/shared/connection.ts
  - src/sdk/models/shared/connections.ts
  - src/sdk/models/shared/createbanktransactions.ts
  - src/sdk/models/shared/createbanktransactionsresponse.ts
  - src/sdk/models/shared/dataconnectionerror.ts
  - src/sdk/models/shared/dataconnectionstatus.ts
  - src/sdk/models/shared/datatype.ts
  - src/sdk/models/shared/errorvalidation.ts
  - src/sdk/models/shared/errorvalidationitem.ts
  - src/sdk/models/shared/halref.ts
  - src/sdk/models/shared/index.ts
  - src/sdk/models/shared/links.ts
  - src/sdk/models/shared/pushchangetype.ts
  - src/sdk/models/shared/pushfieldvalidation.ts
  - src/sdk/models/shared/pushoperation.ts
  - src/sdk/models/shared/pushoperationchange.ts
  - src/sdk/models/shared/pushoperationref.ts
  - src/sdk/models/shared/pushoperations.ts
  - src/sdk/models/shared/pushoperationstatus.ts
  - src/sdk/models/shared/pushoption.ts
  - src/sdk/models/shared/pushoptionchoice.ts
  - src/sdk/models/shared/pushoptionproperty.ts
  - src/sdk/models/shared/pushoptiontype.ts
  - src/sdk/models/shared/pushvalidationinfo.ts
  - src/sdk/models/shared/routinginfo.ts
  - src/sdk/models/shared/security.ts
  - src/sdk/models/shared/sourceaccount.ts
  - src/sdk/models/shared/sourceaccountv2.ts
  - src/sdk/models/shared/sourceaccountwebhook.ts
  - src/sdk/models/shared/sourceaccountwebhookpayload.ts
  - src/sdk/models/shared/syncasbankfeeds.ts
  - src/sdk/models/shared/syncasexpenses.ts
  - src/sdk/models/shared/syncconfiguration.ts
  - src/sdk/models/shared/targetaccountoption.ts
  - src/sdk/models/shared/validation.ts
  - src/sdk/models/shared/validationitem.ts
  - src/sdk/sdk.ts
  - src/sdk/sourceaccounts.ts
  - src/sdk/sync.ts
  - src/sdk/transactions.ts
  - src/sdk/types/blobs.ts
  - src/sdk/types/constdatetime.ts
  - src/sdk/types/decimal.ts
  - src/sdk/types/enums.ts
  - src/sdk/types/fp.ts
  - src/sdk/types/index.ts
  - src/sdk/types/operations.ts
  - src/sdk/types/rfcdate.ts
  - src/sdk/types/streams.ts
  - tsconfig.json
examples:
  create-company:
    With no description:
      requestBody:
        application/json: {"name": "Technicalium", "description": "Requested early access to the new financing scheme."}
      responses:
        "200":
          application/json: {"id": "ab12c58d-a678-4ebf-a159-ae99e1807bd0", "name": "Technicalium", "description": "", "redirect": "https://link.codat.io/company/ab12c58d-a678-4ebf-a159-ae99e1807bd0", "lastSync": "2022-10-23T00:00:00Z", "created": "2022-11-10T10:45:18.1950523Z", "createdByUserName": "Dan Tzabar", "dataConnections": []}
    With a description:
      requestBody:
        application/json: {"name": "Technicalium", "description": "Technology services, including web and app design and development"}
      responses:
        "200":
          application/json: {"id": "ab12c58d-a678-4ebf-a159-ae99e1807bd0", "name": "Technicalium", "description": "Technology services, including web and app design and development", "redirect": "https://link.codat.io/company/ab12c58d-a678-4ebf-a159-ae99e1807bd0", "lastSync": "2022-10-23T00:00:00Z", "created": "2022-11-10T10:45:18.1950523Z", "createdByUserName": "Dan Tzabar", "dataConnections": []}
    With a tag:
      requestBody:
        application/json: {"name": "Bank of Dave", "description": "Requested early access to the new financing scheme."}
      responses:
        "200":
          application/json: {"id": "ab12c58d-a678-4ebf-a159-ae99e1807bd0", "name": "Technicalium", "description": "", "redirect": "https://link.codat.io/company/ab12c58d-a678-4ebf-a159-ae99e1807bd0", "lastSync": "2022-10-23T00:00:00Z", "created": "2022-11-10T10:45:18.1950523Z", "createdByUserName": "Dan Tzabar", "tags": {"region": "us"}, "dataConnections": []}
    Malformed query:
      requestBody:
        application/json: {"name": "Bank of Dave", "description": "Requested early access to the new financing scheme."}
      responses:
        "400":
          application/json: {"statusCode": 400, "service": "PublicApi", "error": "Error processing request - not valid.", "correlationId": "bc997528a9d7abb9161ef45f05d38599", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  list-companies:
    "":
      parameters:
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "200":
          application/json: {"results": [{"id": "0498e921-9b53-4396-a412-4f2f5983b0a2", "name": "string", "description": "Requested early access to the new financing scheme.", "redirect": "https://link.codat.io/company/27628208-459c-46a2-a705-5641ce25f739", "lastSync": "2022-01-01T12:00:00.000Z", "created": "2022-01-01T12:00:00.000Z", "createdByUserName": "string", "tags": {"region": "us", "uid": "f6b0c253-16c7-4da1-a0c5-9c871e9c9d6c"}, "dataConnections": [{"id": "ee2eb431-c0fa-4dc9-93fa-d29781c12bcd", "integrationId": "bf083d72-62c7-493e-aec9-81b4dbba7e2c", "integrationKey": "dfxm", "sourceId": "bdd831ce-eebd-4896-89a7-20e5ee8989ee", "sourceType": "Banking", "platformName": "Basiq", "linkUrl": "https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start", "status": "Linked", "lastSync": "2022-10-27T10:22:43.6464237Z", "created": "2022-10-27T09:53:29Z", "dataConnectionErrors": [{"erroredOnUtc": "2022-10-23T00:00:00Z", "resolvedOnUtc": "2022-10-23T00:00:00Z"}, {"erroredOnUtc": "2022-10-23T00:00:00Z", "resolvedOnUtc": "2022-10-23T00:00:00Z"}, {"erroredOnUtc": "2022-10-23T00:00:00Z", "resolvedOnUtc": "2022-10-23T00:00:00Z"}]}]}], "pageNumber": 1, "pageSize": 10, "totalResults": 1, "_links": {"self": {"href": "/companies/{id}/data/{dataType}"}, "current": {"href": "/companies/{id}/data/{dataType}?page=1&pageSize=10"}}}
        "400": {}
    One company:
      parameters:
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "200":
          application/json: {"results": [{"id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", "name": "My Test Company", "description": "My Test Company make testing software", "redirect": "https://link.codat.io/company/3fa85f64-5717-4562-b3fc-2c963f66afa6", "lastSync": "2022-01-01T12:30:00.000Z", "created": "2022-01-01T11:30:00Z", "createdByUserName": "Mike Smith", "dataConnections": [{"id": "51baa045-4836-4317-a42e-3542e991e581", "integrationId": "1c312d69-e638-46d4-ad31-72e6c3ba8390", "integrationKey": "vjms", "sourceId": "396c3158-5dd7-481b-a7c4-a795ca31792b", "sourceType": "Accounting", "platformName": "Pandle", "linkUrl": "https://link-api.codat.io/companies/3fa85f64-5717-4562-b3fc-2c963f66afa6/connections/51baa045-4836-4317-a42e-3542e991e581/start", "status": "Linked", "lastSync": "2022-01-01T12:30:00.000Z", "created": "2022-01-01T11:30:00Z", "dataConnectionErrors": [{"erroredOnUtc": "2022-10-23T00:00:00Z", "resolvedOnUtc": "2022-10-23T00:00:00Z"}, {"erroredOnUtc": "2022-10-23T00:00:00Z", "resolvedOnUtc": "2022-10-23T00:00:00Z"}]}]}], "pageNumber": 1, "pageSize": 100, "totalResults": 1, "_links": {"self": {"href": "/companies"}, "current": {"href": "/companies?page=1&pageSize=100"}}}
    List of Companies:
      parameters:
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "200":
          application/json: {"results": [{"id": "d1568dde-adf6-11ed-afa1-0242ac120002", "name": "Technicalium", "description": "Technology services, including web and app design and development", "redirect": "https://link.codat.io/company/d1568dde-adf6-11ed-afa1-0242ac120002", "lastSync": "2022-01-01T12:30:00.000Z", "created": "2022-01-01T11:30:00Z", "createdByUserName": "Joe Bloggs", "dataConnections": [{"id": "51baa045-4836-4317-a42e-3542e991e581", "integrationId": "1c312d69-e638-46d4-ad31-72e6c3ba8390", "integrationKey": "vjms", "sourceId": "396c3158-5dd7-481b-a7c4-a795ca31792b", "sourceType": "Accounting", "platformName": "Pandle", "linkUrl": "https://link-api.codat.io/companies/d1568dde-adf6-11ed-afa1-0242ac120002/connections/51baa045-4836-4317-a42e-3542e991e581/start", "status": "Linked", "lastSync": "2022-01-01T12:30:00.000Z", "created": "2022-01-01T11:30:00Z", "dataConnectionErrors": [{"erroredOnUtc": "2022-10-23T00:00:00Z", "resolvedOnUtc": "2022-10-23T00:00:00Z"}, {"erroredOnUtc": "2022-10-23T00:00:00Z", "resolvedOnUtc": "2022-10-23T00:00:00Z"}]}]}, {"id": "096db70b-78de-4ff0-aa98-299cb5fe17a0", "name": "Godata", "description": "A new digital agency with a passion for creating amazing digital experiences", "redirect": "https://link.codat.io/company/096db70b-78de-4ff0-aa98-299cb5fe17a0", "lastSync": "2022-01-01T12:30:00.000Z", "created": "2022-01-01T11:30:00Z", "createdByUserName": "Mike Smith", "dataConnections": [{"id": "a70bc148-dc21-46b2-a257-d9c58ac15cbb", "integrationId": "1c312d69-e638-46d4-ad31-72e6c3ba8390", "integrationKey": "vjms", "sourceId": "396c3158-5dd7-481b-a7c4-a795ca31792b", "sourceType": "Accounting", "platformName": "Pandle", "linkUrl": "https://link-api.codat.io/companies/096db70b-78de-4ff0-aa98-299cb5fe17a0/connections/a70bc148-dc21-46b2-a257-d9c58ac15cbb/start", "status": "Linked", "lastSync": "2022-01-01T12:30:00.000Z", "created": "2022-01-01T11:30:00Z", "dataConnectionErrors": [{"erroredOnUtc": "2022-10-23T00:00:00Z", "resolvedOnUtc": "2022-10-23T00:00:00Z"}]}]}], "pageNumber": 1, "pageSize": 100, "totalResults": 2, "_links": {"self": {"href": "/companies"}, "current": {"href": "/companies?page=1&pageSize=100"}}}
    Malformed query:
      parameters:
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "400":
          application/json: {"statusCode": 400, "service": "ClientsApi", "error": "Error parsing query - Malformed query.", "correlationId": "bc997528a9d7abb9161ef45f05d38599", "canBeRetried": "Unknown", "detailedErrorCode": 0}
    Unresolved property:
      parameters:
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "400":
          application/json: {"statusCode": 400, "service": "PullApi", "error": "Error parsing query - Could not resolve property isCompleted on Dataset", "correlationId": "98457fb9956b7f9b4b2fd4f6e23bb5c8", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  get-company:
    Simple company:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
      responses:
        "200":
          application/json: {"id": "ab12c58d-a678-4ebf-a159-ae99e1807bd0", "name": "My First Company", "description": "", "redirect": "https://link.codat.io/company/ab12c58d-a678-4ebf-a159-ae99e1807bd0", "lastSync": "2022-10-23T00:00:00Z", "created": "2022-11-10T10:45:18Z", "createdByUserName": "Dan Tzabar", "dataConnections": []}
    Unauthorized:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
      responses:
        "401":
          application/json: {"statusCode": 401, "service": "PublicApi", "error": "Unauthorized", "correlationId": "7eb40d6b415d7bcd99ce658268284056", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  delete-company:
    Unauthorized:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
      responses:
        "401":
          application/json: {"statusCode": 401, "service": "PublicApi", "error": "Unauthorized", "correlationId": "7eb40d6b415d7bcd99ce658268284056", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  update-company:
    Update name:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
      requestBody:
        application/json: {"name": "New Name", "description": "Requested early access to the new financing scheme."}
      responses:
        "200":
          application/json: {"id": "0498e921-9b53-4396-a412-4f2f5983b0a2", "name": "string", "description": "Requested early access to the new financing scheme.", "redirect": "https://link.codat.io/company/27628208-459c-46a2-a705-5641ce25f739", "lastSync": "2022-01-01T12:00:00.000Z", "created": "2022-01-01T12:00:00.000Z", "createdByUserName": "string", "tags": {"region": "us", "uid": "f6b0c253-16c7-4da1-a0c5-9c871e9c9d6c"}, "dataConnections": [{"id": "ee2eb431-c0fa-4dc9-93fa-d29781c12bcd", "integrationId": "bf083d72-62c7-493e-aec9-81b4dbba7e2c", "integrationKey": "dfxm", "sourceId": "bdd831ce-eebd-4896-89a7-20e5ee8989ee", "sourceType": "Banking", "platformName": "Basiq", "linkUrl": "https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start", "status": "Linked", "lastSync": "2022-10-27T10:22:43.6464237Z", "created": "2022-10-27T09:53:29Z", "dataConnectionErrors": [{"erroredOnUtc": "2022-10-23T00:00:00Z", "resolvedOnUtc": "2022-10-23T00:00:00Z"}, {"erroredOnUtc": "2022-10-23T00:00:00Z", "resolvedOnUtc": "2022-10-23T00:00:00Z"}, {"erroredOnUtc": "2022-10-23T00:00:00Z", "resolvedOnUtc": "2022-10-23T00:00:00Z"}]}]}
        "401": {}
    Update description:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
      requestBody:
        application/json: {"name": "Same name", "description": "Additional documents required"}
      responses:
        "200":
          application/json: {"id": "0498e921-9b53-4396-a412-4f2f5983b0a2", "name": "string", "description": "Requested early access to the new financing scheme.", "redirect": "https://link.codat.io/company/27628208-459c-46a2-a705-5641ce25f739", "lastSync": "2022-01-01T12:00:00.000Z", "created": "2022-01-01T12:00:00.000Z", "createdByUserName": "string", "tags": {"region": "us", "uid": "f6b0c253-16c7-4da1-a0c5-9c871e9c9d6c"}, "dataConnections": [{"id": "ee2eb431-c0fa-4dc9-93fa-d29781c12bcd", "integrationId": "bf083d72-62c7-493e-aec9-81b4dbba7e2c", "integrationKey": "dfxm", "sourceId": "bdd831ce-eebd-4896-89a7-20e5ee8989ee", "sourceType": "Banking", "platformName": "Basiq", "linkUrl": "https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start", "status": "Linked", "lastSync": "2022-10-27T10:22:43.6464237Z", "created": "2022-10-27T09:53:29Z", "dataConnectionErrors": []}]}
        "401": {}
    Unauthorized:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
      requestBody:
        application/json: {"name": "Bank of Dave", "description": "Requested early access to the new financing scheme."}
      responses:
        "401":
          application/json: {"statusCode": 401, "service": "PublicApi", "error": "Unauthorized", "correlationId": "7eb40d6b415d7bcd99ce658268284056", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  list-connections:
    "":
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "200":
          application/json: {"results": [{"id": "ee2eb431-c0fa-4dc9-93fa-d29781c12bcd", "integrationId": "bf083d72-62c7-493e-aec9-81b4dbba7e2c", "integrationKey": "dfxm", "sourceId": "bdd831ce-eebd-4896-89a7-20e5ee8989ee", "sourceType": "Banking", "platformName": "Basiq", "linkUrl": "https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start", "status": "Linked", "lastSync": "2022-10-27T10:22:43.6464237Z", "created": "2022-10-27T09:53:29Z", "dataConnectionErrors": [{"erroredOnUtc": "2022-10-23T00:00:00Z", "resolvedOnUtc": "2022-10-23T00:00:00Z"}, {"erroredOnUtc": "2022-10-23T00:00:00Z", "resolvedOnUtc": "2022-10-23T00:00:00Z"}, {"erroredOnUtc": "2022-10-23T00:00:00Z", "resolvedOnUtc": "2022-10-23T00:00:00Z"}]}], "pageNumber": 1, "pageSize": 10, "totalResults": 1, "_links": {"self": {"href": "/companies/{id}/data/{dataType}"}, "current": {"href": "/companies/{id}/data/{dataType}?page=1&pageSize=10"}}}
        "400": {}
    Connections:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "200":
          application/json: {"results": [{"id": "ee2eb431-c0fa-4dc9-93fa-d29781c12bcd", "integrationId": "bf083d72-62c7-493e-aec9-81b4dbba7e2c", "integrationKey": "dfxm", "sourceId": "bdd831ce-eebd-4896-89a7-20e5ee8989ee", "sourceType": "Banking", "platformName": "Basiq", "linkUrl": "https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start", "status": "Linked", "lastSync": "2022-10-27T10:22:43.6464237Z", "created": "2022-10-27T09:53:29Z", "dataConnectionErrors": [{"erroredOnUtc": "2022-10-23T00:00:00Z", "resolvedOnUtc": "2022-10-23T00:00:00Z"}, {"erroredOnUtc": "2022-10-23T00:00:00Z", "resolvedOnUtc": "2022-10-23T00:00:00Z"}]}], "pageNumber": 0, "pageSize": 0, "totalResults": 0, "_links": {"self": {"href": "string"}, "current": {"href": "string"}, "next": {"href": "string"}, "previous": {"href": "string"}}}
    Malformed query:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "400":
          application/json: {"statusCode": 400, "service": "ClientsApi", "error": "Error parsing query - Malformed query.", "correlationId": "bc997528a9d7abb9161ef45f05d38599", "canBeRetried": "Unknown", "detailedErrorCode": 0}
    Unresolved property:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "400":
          application/json: {"statusCode": 400, "service": "PullApi", "error": "Error parsing query - Could not resolve property isCompleted on Dataset", "correlationId": "98457fb9956b7f9b4b2fd4f6e23bb5c8", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  create-connection:
    Connection:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
      requestBody:
        application/json: {"platformKey": "gbol"}
      responses:
        "200":
          application/json: {"id": "ee2eb431-c0fa-4dc9-93fa-d29781c12bcd", "integrationId": "bf083d72-62c7-493e-aec9-81b4dbba7e2c", "integrationKey": "dfxm", "sourceId": "bdd831ce-eebd-4896-89a7-20e5ee8989ee", "sourceType": "Banking", "platformName": "Basiq", "linkUrl": "https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start", "status": "Linked", "lastSync": "2022-10-27T10:22:43.6464237Z", "created": "2022-10-27T09:53:29Z", "dataConnectionErrors": [{"erroredOnUtc": "2022-10-23T00:00:00Z", "resolvedOnUtc": "2022-10-23T00:00:00Z"}]}
    Unauthorized:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
      requestBody:
        application/json: {"platformKey": "gbol"}
      responses:
        "401":
          application/json: {"statusCode": 401, "service": "PublicApi", "error": "Unauthorized", "correlationId": "7eb40d6b415d7bcd99ce658268284056", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  get-connection:
    Connection:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      responses:
        "200":
          application/json: {"id": "ee2eb431-c0fa-4dc9-93fa-d29781c12bcd", "integrationId": "bf083d72-62c7-493e-aec9-81b4dbba7e2c", "integrationKey": "dfxm", "sourceId": "bdd831ce-eebd-4896-89a7-20e5ee8989ee", "sourceType": "Banking", "platformName": "Basiq", "linkUrl": "https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start", "status": "Linked", "lastSync": "2022-10-27T10:22:43.6464237Z", "created": "2022-10-27T09:53:29Z", "dataConnectionErrors": [{"erroredOnUtc": "2022-10-23T00:00:00Z", "resolvedOnUtc": "2022-10-23T00:00:00Z"}, {"erroredOnUtc": "2022-10-23T00:00:00Z", "resolvedOnUtc": "2022-10-23T00:00:00Z"}]}
    Unauthorized:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      responses:
        "401":
          application/json: {"statusCode": 401, "service": "PublicApi", "error": "Unauthorized", "correlationId": "7eb40d6b415d7bcd99ce658268284056", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  delete-connection:
    Unauthorized:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      responses:
        "401":
          application/json: {"statusCode": 401, "service": "PublicApi", "error": "Unauthorized", "correlationId": "7eb40d6b415d7bcd99ce658268284056", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  unlink-connection:
    Example:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      requestBody:
        application/json: {"status": "Unlinked"}
      responses:
        "200":
          application/json: {"id": "ee2eb431-c0fa-4dc9-93fa-d29781c12bcd", "integrationId": "bf083d72-62c7-493e-aec9-81b4dbba7e2c", "integrationKey": "dfxm", "sourceId": "bdd831ce-eebd-4896-89a7-20e5ee8989ee", "sourceType": "Banking", "platformName": "Basiq", "linkUrl": "https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start", "status": "Linked", "lastSync": "2022-10-27T10:22:43.6464237Z", "created": "2022-10-27T09:53:29Z", "dataConnectionErrors": []}
        "401": {}
    Unauthorized:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      responses:
        "401":
          application/json: {"statusCode": 401, "service": "PublicApi", "error": "Unauthorized", "correlationId": "7eb40d6b415d7bcd99ce658268284056", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  get-configuration:
    Unauthorized:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
      responses:
        "401":
          application/json: {"statusCode": 401, "service": "PublicApi", "error": "Unauthorized", "correlationId": "7eb40d6b415d7bcd99ce658268284056", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  set-configuration:
    Unauthorized:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
      requestBody:
        application/json: {"companyId": "8a210b68-6988-11ed-a1eb-0242ac120002"}
      responses:
        "401":
          application/json: {"statusCode": 401, "service": "PublicApi", "error": "Unauthorized", "correlationId": "7eb40d6b415d7bcd99ce658268284056", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  get-last-successful:
    Unauthorized:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
      responses:
        "401":
          application/json: {"statusCode": 401, "service": "PublicApi", "error": "Unauthorized", "correlationId": "7eb40d6b415d7bcd99ce658268284056", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  list-bank-accounts:
    "":
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "200":
          application/json: {"results": [{"modifiedDate": "2022-10-23T00:00:00Z", "sourceModifiedDate": "2022-10-23T00:00:00Z", "currency": "GBP", "status": "Active"}, {"modifiedDate": "2022-10-23T00:00:00Z", "sourceModifiedDate": "2022-10-23T00:00:00Z", "currency": "USD", "status": "Active"}, {"modifiedDate": "2022-10-23T00:00:00Z", "sourceModifiedDate": "2022-10-23T00:00:00Z", "currency": "EUR", "status": "Active"}], "pageNumber": 1, "pageSize": 10, "totalResults": 1, "_links": {"self": {"href": "/companies/{id}/data/{dataType}"}, "current": {"href": "/companies/{id}/data/{dataType}?page=1&pageSize=10"}}}
        "400": {}
    Dynamics 365 Business Central:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "200":
          application/json: {"results": [{"modifiedDate": "2023-03-27T14:21:10Z", "sourceModifiedDate": "2023-02-07T00:00:00", "id": "c9a41bc7-6e5b-ed11-8c34-0022481b8b5b", "accountName": "55", "accountType": "Unknown", "nominalCode": "10500", "sortCode": "", "accountNumber": "", "iBan": "", "currency": "GBP", "balance": -352.03, "overdraftLimit": 0, "status": "Active", "metadata": {"isDeleted": false}}, {"modifiedDate": "2023-03-27T14:21:10Z", "sourceModifiedDate": "2022-06-07T00:00:00", "id": "47020f80-60e6-ec11-82f8-0022481a77f0", "accountName": "555", "accountType": "Unknown", "nominalCode": "40300", "sortCode": "", "accountNumber": "", "iBan": "", "currency": "PLN", "balance": 661.79, "overdraftLimit": 0, "status": "Active", "metadata": {"isDeleted": false}}], "pageNumber": 1, "pageSize": 2, "totalResults": 28, "_links": {"self": {"href": "/companies/d6849caf-c146-41be-8335-b73346e3bd84/connections/60acb117-5cf5-4745-b069-491551da4066/data/bankAccounts"}, "current": {"href": "/companies/d6849caf-c146-41be-8335-b73346e3bd84/connections/60acb117-5cf5-4745-b069-491551da4066/data/bankAccounts?page=1&pageSize=2"}, "next": {"href": "/companies/d6849caf-c146-41be-8335-b73346e3bd84/connections/60acb117-5cf5-4745-b069-491551da4066/data/bankAccounts?page=2&pageSize=2"}}}
    FreeAgent:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "200":
          application/json: {"results": [{"modifiedDate": "2023-04-25T14:19:12Z", "sourceModifiedDate": "2022-10-23T00:00:00Z", "id": "738783", "accountName": "\\w3fw", "accountType": "Debit", "sortCode": "236972", "accountNumber": "A06268209", "currency": "GBP", "balance": -10484.65, "availableBalance": -10484.65, "status": "Active", "metadata": {"isDeleted": false}}, {"modifiedDate": "2023-04-25T14:19:12Z", "sourceModifiedDate": "2022-10-23T00:00:00Z", "id": "738778", "accountName": "2e2bna45hy\\", "accountType": "Debit", "sortCode": "236972", "accountNumber": "D01825250", "currency": "GBP", "balance": -114.4, "availableBalance": -114.4, "status": "Active", "metadata": {"isDeleted": false}}], "pageNumber": 1, "pageSize": 2, "totalResults": 82, "_links": {"self": {"href": "/companies/071ad738-68f3-4561-afd0-69bab9df0803/connections/4fd7c69f-ecc1-45f5-83f2-42ed3391e386/data/bankAccounts"}, "current": {"href": "/companies/071ad738-68f3-4561-afd0-69bab9df0803/connections/4fd7c69f-ecc1-45f5-83f2-42ed3391e386/data/bankAccounts?page=1&pageSize=2"}, "next": {"href": "/companies/071ad738-68f3-4561-afd0-69bab9df0803/connections/4fd7c69f-ecc1-45f5-83f2-42ed3391e386/data/bankAccounts?page=2&pageSize=2"}}}
    KashFlow:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "200":
          application/json: {"results": [{"modifiedDate": "2022-09-30T10:29:16Z", "sourceModifiedDate": "2022-10-23T00:00:00Z", "id": "765768", "accountName": "16th Account", "accountType": "Unknown", "nominalCode": "70700", "currency": "GBP", "balance": 326, "availableBalance": 326, "status": "Active"}, {"modifiedDate": "2022-09-30T10:29:16Z", "sourceModifiedDate": "2022-10-23T00:00:00Z", "id": "765766", "accountName": "1a1a", "accountType": "Unknown", "nominalCode": "70600", "currency": "GBP", "balance": 0, "availableBalance": 0, "status": "Active"}], "pageNumber": 1, "pageSize": 2, "totalResults": 56, "_links": {"self": {"href": "/companies/3a707a99-89da-4b16-a5d6-595333a16352/connections/ecab4f64-1a04-4c53-a343-bfd879f41f67/data/bankAccounts"}, "current": {"href": "/companies/3a707a99-89da-4b16-a5d6-595333a16352/connections/ecab4f64-1a04-4c53-a343-bfd879f41f67/data/bankAccounts?page=1&pageSize=2"}, "next": {"href": "/companies/3a707a99-89da-4b16-a5d6-595333a16352/connections/ecab4f64-1a04-4c53-a343-bfd879f41f67/data/bankAccounts?page=2&pageSize=2"}}}
    Oracle NetSuite:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "200":
          application/json: {"results": [{"modifiedDate": "2023-05-02T13:24:36Z", "sourceModifiedDate": "2022-07-15T11:34:02", "id": "825", "accountName": "Codat Europe Bank", "accountType": "Debit", "nominalCode": "111111122222111", "currency": "GBP", "balance": 558.22, "status": "Active", "metadata": {"isDeleted": false}}, {"modifiedDate": "2023-05-02T13:24:36Z", "sourceModifiedDate": "2021-03-26T10:31:40", "id": "826", "accountName": "Codat Europe Bank USD", "accountType": "Debit", "nominalCode": "1133221133", "currency": "USD", "status": "Active", "metadata": {"isDeleted": false}}], "pageNumber": 1, "pageSize": 2, "totalResults": 4, "_links": {"self": {"href": "/companies/d5074b08-6a34-4b06-a742-236edf5dc4f1/connections/79f8313e-210a-4dc8-b69f-ba7e5004dda7/data/bankAccounts"}, "current": {"href": "/companies/d5074b08-6a34-4b06-a742-236edf5dc4f1/connections/79f8313e-210a-4dc8-b69f-ba7e5004dda7/data/bankAccounts?page=1&pageSize=2"}, "next": {"href": "/companies/d5074b08-6a34-4b06-a742-236edf5dc4f1/connections/79f8313e-210a-4dc8-b69f-ba7e5004dda7/data/bankAccounts?page=2&pageSize=2"}}}
    QuickBooks Desktop:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "200":
          application/json: {"results": [{"modifiedDate": "2023-04-26T09:12:37Z", "sourceModifiedDate": "2023-12-16T05:06:45", "id": "20000-933270541", "accountName": "Checking", "accountType": "Unknown", "nominalCode": "10100", "currency": "GBP", "balance": 46954.1, "availableBalance": 46954.1, "status": "Active", "metadata": {"isDeleted": false}}, {"modifiedDate": "2023-04-26T09:12:37Z", "sourceModifiedDate": "2023-12-16T05:06:45", "id": "550001-1071509830", "accountName": "Petty Cash", "accountType": "Unknown", "nominalCode": "10400", "currency": "GBP", "balance": 500, "availableBalance": 500, "status": "Active", "metadata": {"isDeleted": false}}], "pageNumber": 1, "pageSize": 2, "totalResults": 3, "_links": {"self": {"href": "/companies/fc72ba08-af13-4474-b28a-01dcfa6cfb51/connections/2c26b4da-97d4-4ba9-baad-1e18b49b96ac/data/bankAccounts"}, "current": {"href": "/companies/fc72ba08-af13-4474-b28a-01dcfa6cfb51/connections/2c26b4da-97d4-4ba9-baad-1e18b49b96ac/data/bankAccounts?page=1&pageSize=2"}, "next": {"href": "/companies/fc72ba08-af13-4474-b28a-01dcfa6cfb51/connections/2c26b4da-97d4-4ba9-baad-1e18b49b96ac/data/bankAccounts?page=2&pageSize=2"}}}
    QuickBooks Online Sandbox:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "200":
          application/json: {"results": [{"modifiedDate": "2023-04-26T09:35:57Z", "sourceModifiedDate": "2022-07-20T14:11:28Z", "id": "164", "accountName": "00", "accountType": "Debit", "nominalCode": "123567", "currency": "GBP", "balance": 0, "availableBalance": 0, "status": "Active", "metadata": {"isDeleted": false}}, {"modifiedDate": "2023-04-26T09:35:57Z", "sourceModifiedDate": "2022-07-20T14:11:28Z", "id": "163", "accountName": "11", "accountType": "Debit", "currency": "GBP", "balance": 0, "availableBalance": 0, "status": "Active", "metadata": {"isDeleted": false}}], "pageNumber": 1, "pageSize": 2, "totalResults": 57, "_links": {"self": {"href": "/companies/5a7f3597-36e1-4216-86fe-289ad36088a6/connections/1f9f6013-f8a5-4278-8a47-3ab7fdb6c24c/data/bankAccounts"}, "current": {"href": "/companies/5a7f3597-36e1-4216-86fe-289ad36088a6/connections/1f9f6013-f8a5-4278-8a47-3ab7fdb6c24c/data/bankAccounts?page=1&pageSize=2"}, "next": {"href": "/companies/5a7f3597-36e1-4216-86fe-289ad36088a6/connections/1f9f6013-f8a5-4278-8a47-3ab7fdb6c24c/data/bankAccounts?page=2&pageSize=2"}}}
    QuickBooks Online:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "200":
          application/json: {"results": [{"modifiedDate": "2023-01-18T11:02:37Z", "sourceModifiedDate": "2022-11-11T14:15:13Z", "id": "202", "accountName": "\\aa", "accountType": "Debit", "currency": "GBP", "balance": 123, "availableBalance": 123, "status": "Active"}, {"modifiedDate": "2023-01-18T11:02:37Z", "sourceModifiedDate": "2023-01-18T06:05:12Z", "id": "193", "accountName": "1 year ago", "accountType": "Debit", "currency": "GBP", "balance": 5300.02, "availableBalance": 5300.02, "status": "Active"}], "pageNumber": 1, "pageSize": 2, "totalResults": 140, "_links": {"self": {"href": "/companies/10818b5e-6e6a-4ed4-a1c5-3e3efe626e87/connections/9e28a776-f4be-425b-8a3d-ad49956de2c9/data/bankAccounts"}, "current": {"href": "/companies/10818b5e-6e6a-4ed4-a1c5-3e3efe626e87/connections/9e28a776-f4be-425b-8a3d-ad49956de2c9/data/bankAccounts?page=1&pageSize=2"}, "next": {"href": "/companies/10818b5e-6e6a-4ed4-a1c5-3e3efe626e87/connections/9e28a776-f4be-425b-8a3d-ad49956de2c9/data/bankAccounts?page=2&pageSize=2"}}}
    Sage 50 (UK):
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "200":
          application/json: {"results": [{"modifiedDate": "2023-03-30T14:42:37Z", "sourceModifiedDate": "2022-11-25T09:25:48", "id": "1200", "accountName": "Bank Current Account", "accountType": "Unknown", "nominalCode": "1200", "sortCode": "23-34-34", "accountNumber": "003234234", "iBan": "", "currency": "GBP", "balance": -20091.04, "institution": "Lloyds Bank PLC", "availableBalance": -20091.04, "overdraftLimit": 120000, "status": "Active", "metadata": {"isDeleted": false}}, {"modifiedDate": "2023-03-30T14:42:37Z", "sourceModifiedDate": "2022-11-25T09:25:48", "id": "1210", "accountName": "Bank Deposit Account", "accountType": "Unknown", "nominalCode": "1210", "sortCode": "45-45-45", "accountNumber": "9/00474345", "iBan": "", "currency": "GBP", "balance": 3510, "institution": "Halifax Building Society", "availableBalance": 3510, "overdraftLimit": 0, "status": "Active", "metadata": {"isDeleted": false}}], "pageNumber": 1, "pageSize": 2, "totalResults": 6, "_links": {"self": {"href": "/companies/cf5f2a47-2990-4221-bae6-0c19c86ac304/connections/8ee4910f-4fc1-47e6-89b1-5931fb33d8f7/data/bankAccounts"}, "current": {"href": "/companies/cf5f2a47-2990-4221-bae6-0c19c86ac304/connections/8ee4910f-4fc1-47e6-89b1-5931fb33d8f7/data/bankAccounts?page=1&pageSize=2"}, "next": {"href": "/companies/cf5f2a47-2990-4221-bae6-0c19c86ac304/connections/8ee4910f-4fc1-47e6-89b1-5931fb33d8f7/data/bankAccounts?page=2&pageSize=2"}}}
    Sage Business Cloud Accounting:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "200":
          application/json: {"results": [{"modifiedDate": "2022-10-24T14:52:53Z", "sourceModifiedDate": "2020-01-27T10:53:26Z", "id": "154d05abe9f24c4babe0f6a741dec1b9", "accountName": "Abdi Internet Bank", "accountType": "Unknown", "nominalCode": "1560", "sortCode": "010101", "accountNumber": "11111", "currency": "GBP", "balance": 49.61, "availableBalance": 49.61, "status": "Active"}, {"modifiedDate": "2022-10-24T14:52:53Z", "sourceModifiedDate": "2020-01-28T14:00:20Z", "id": "565ce07212bc492c8c2d04f43f9f67e3", "accountName": "Abdi Live Test", "accountType": "Unknown", "nominalCode": "147852", "sortCode": "123456", "accountNumber": "1234567", "currency": "GBP", "balance": -225830.75, "availableBalance": -225830.75, "status": "Active"}], "pageNumber": 1, "pageSize": 2, "totalResults": 45, "_links": {"self": {"href": "/companies/390083e2-351b-407c-a3be-55081c36c182/connections/37916fb7-b4b8-4a78-8872-1751e20ee0cd/data/bankAccounts"}, "current": {"href": "/companies/390083e2-351b-407c-a3be-55081c36c182/connections/37916fb7-b4b8-4a78-8872-1751e20ee0cd/data/bankAccounts?page=1&pageSize=2"}, "next": {"href": "/companies/390083e2-351b-407c-a3be-55081c36c182/connections/37916fb7-b4b8-4a78-8872-1751e20ee0cd/data/bankAccounts?page=2&pageSize=2"}}}
    Sage Intacct:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "200":
          application/json: {"results": [{"modifiedDate": "2023-04-04T16:31:46Z", "sourceModifiedDate": "2023-03-27T14:11:48", "id": "CREDITCARD:55", "accountName": "CoT Credit Card", "accountType": "Credit", "nominalCode": "10021", "currency": "GBP", "status": "Active", "metadata": {"isDeleted": false}}, {"modifiedDate": "2023-04-04T16:31:46Z", "sourceModifiedDate": "2023-03-27T14:15:11", "id": "CREDITCARD:58", "accountName": "Cot Credit Card 2", "accountType": "Credit", "nominalCode": "11112", "currency": "GBP", "status": "Active", "metadata": {"isDeleted": false}}], "pageNumber": 1, "pageSize": 2, "totalResults": 14, "_links": {"self": {"href": "/companies/df02b289-cb16-4964-ac4d-9fd60b04538e/connections/8f457d9c-1142-4241-a07e-71d1ee2e3052/data/bankAccounts"}, "current": {"href": "/companies/df02b289-cb16-4964-ac4d-9fd60b04538e/connections/8f457d9c-1142-4241-a07e-71d1ee2e3052/data/bankAccounts?page=1&pageSize=2"}, "next": {"href": "/companies/df02b289-cb16-4964-ac4d-9fd60b04538e/connections/8f457d9c-1142-4241-a07e-71d1ee2e3052/data/bankAccounts?page=2&pageSize=2"}}}
    Xero:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "200":
          application/json: {"results": [{"modifiedDate": "2023-03-15T20:36:09Z", "sourceModifiedDate": "2023-03-15T20:35:07", "id": "bd9e85e0-0478-433d-ae9f-0b3c4f04bfe4", "accountName": "Business Bank Account", "accountType": "Debit", "sortCode": "990404", "accountNumber": "987654321", "currency": "GBP", "balance": 6681.79, "status": "Active", "metadata": {"isDeleted": false}}, {"modifiedDate": "2023-03-15T20:36:09Z", "sourceModifiedDate": "2023-03-15T20:36:06", "id": "a8d6fb1a-8c5d-4683-90ce-bf9d28fc62ba", "accountName": "Business Savings Account", "accountType": "Debit", "sortCode": "890303", "accountNumber": "876543210", "currency": "GBP", "balance": 0, "status": "Active", "metadata": {"isDeleted": false}}], "pageNumber": 1, "pageSize": 2, "totalResults": 2, "_links": {"self": {"href": "/companies/5ced9667-a310-443a-a711-958d36377141/connections/6a4bcf97-e46a-465c-abf6-c42cec8e48c0/data/bankAccounts"}, "current": {"href": "/companies/5ced9667-a310-443a-a711-958d36377141/connections/6a4bcf97-e46a-465c-abf6-c42cec8e48c0/data/bankAccounts?page=1&pageSize=2"}}}
    Zoho Books:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "200":
          application/json: {"results": [{"modifiedDate": "2022-10-03T08:40:38Z", "sourceModifiedDate": "2022-10-23T00:00:00Z", "id": "104957000000060010", "accountName": "Abdi Test", "accountType": "Unknown", "sortCode": "112233", "accountNumber": "xxxx5678", "currency": "GBP", "balance": 69858.44, "institution": "Test Bank", "status": "Active"}, {"modifiedDate": "2022-10-03T08:40:38Z", "sourceModifiedDate": "2022-10-23T00:00:00Z", "id": "104957000000065002", "accountName": "Abdi Test 2", "accountType": "Unknown", "sortCode": "", "accountNumber": "", "currency": "AED", "balance": 98.03, "institution": "", "status": "Active"}], "pageNumber": 1, "pageSize": 2, "totalResults": 4, "_links": {"self": {"href": "/companies/d0b68840-db50-4bc3-b88c-96e225333fea/connections/a2324b8e-60e9-451d-8eb1-0fdc8e8224df/data/bankAccounts"}, "current": {"href": "/companies/d0b68840-db50-4bc3-b88c-96e225333fea/connections/a2324b8e-60e9-451d-8eb1-0fdc8e8224df/data/bankAccounts?page=1&pageSize=2"}, "next": {"href": "/companies/d0b68840-db50-4bc3-b88c-96e225333fea/connections/a2324b8e-60e9-451d-8eb1-0fdc8e8224df/data/bankAccounts?page=2&pageSize=2"}}}
    Malformed query:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "400":
          application/json: {"statusCode": 400, "service": "ClientsApi", "error": "Error parsing query - Malformed query.", "correlationId": "bc997528a9d7abb9161ef45f05d38599", "canBeRetried": "Unknown", "detailedErrorCode": 0}
    Unresolved property:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "400":
          application/json: {"statusCode": 400, "service": "PullApi", "error": "Error parsing query - Could not resolve property isCompleted on Dataset", "correlationId": "98457fb9956b7f9b4b2fd4f6e23bb5c8", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  get-create-bankAccounts-model:
    Dynamics 365 Business Central:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      responses:
        "200":
          application/json: {"type": "Object", "displayName": "Bank Account", "description": "An account that bank transactions may be recorded against", "required": true, "properties": {"accountName": {"type": "String", "displayName": "Name", "description": "The name of the bank account in the originating system", "required": true, "validation": {"warnings": [], "information": [{"field": "AccountName", "details": "Needs to be of the format '{No.}-{Name}'"}]}}, "currency": {"type": "String", "displayName": "Currency", "description": "The currency of the bank account", "required": true}, "accountNumber": {"type": "String", "displayName": "Account Number", "description": "The account number for the bank account", "required": false}, "nominalCode": {"type": "String", "displayName": "Nominal Code", "description": "The external reference given to each nominal account for a business", "required": false, "validation": {"warnings": [], "information": [{"field": "NominalCode", "details": "Bank Account Posting Group with Nominal Account must exist"}]}}, "sortCode": {"type": "String", "displayName": "Sort Code", "description": "The sort code for the bank account", "required": false, "validation": {"warnings": [], "information": [{"field": "SortCode", "details": "Must have a length between 0 and 20 characters"}]}}, "iBan": {"type": "String", "displayName": "IBAN", "description": "The international bank account number of the account. Often used when making or receiving international payments", "required": false}, "overdraftLimit": {"type": "Number", "displayName": "Overdraft Limit", "description": "The pre-arranged overdraft limit of the account", "required": false, "validation": {"warnings": [], "information": [{"field": "OverdraftLimit", "details": "Default value is 0"}]}}}}
    Exact (Netherlands):
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      responses:
        "200":
          application/json: {"type": "Object", "displayName": "Bank Account", "description": "An account that bank transactions may be recorded against", "required": true, "properties": {"accountName": {"type": "String", "displayName": "Name", "description": "The name of the bank account in the originating system", "required": true}, "accountNumber": {"type": "String", "displayName": "Account Number", "description": "The account number for the bank account", "required": true, "validation": {"warnings": [{"field": "AccountNumber", "details": "Should not exceed the maximum length of 14 characters if the specified currency is GBP."}], "information": []}}, "sortCode": {"type": "String", "displayName": "Sort Code", "description": "The sort code for the bank account", "required": false, "validation": {"warnings": [{"field": "SortCode", "details": "Must be 6 characters long if the specified currency is GBP."}, {"field": "SortCode", "details": "Must be provided if the specified currency is GBP."}], "information": []}}, "currency": {"type": "String", "displayName": "Currency", "description": "The currency of the bank account", "required": false}, "nominalCode": {"type": "String", "displayName": "Nominal Code", "description": "The external reference given to each nominal account for a business", "required": false}}}
    Exact (UK):
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      responses:
        "200":
          application/json: {"type": "Object", "displayName": "Bank Account", "description": "An account that bank transactions may be recorded against", "required": true, "properties": {"accountName": {"type": "String", "displayName": "Name", "description": "The name of the bank account in the originating system", "required": true}, "accountNumber": {"type": "String", "displayName": "Account Number", "description": "The account number for the bank account", "required": true, "validation": {"warnings": [{"field": "AccountNumber", "details": "Should not exceed the maximum length of 14 characters if the specified currency is GBP."}], "information": []}}, "sortCode": {"type": "String", "displayName": "Sort Code", "description": "The sort code for the bank account", "required": false, "validation": {"warnings": [{"field": "SortCode", "details": "Must be 6 characters long if the specified currency is GBP."}, {"field": "SortCode", "details": "Must be provided if the specified currency is GBP."}], "information": []}}, "currency": {"type": "String", "displayName": "Currency", "description": "The currency of the bank account", "required": false}, "nominalCode": {"type": "String", "displayName": "Nominal Code", "description": "The external reference given to each nominal account for a business", "required": false}}}
    FreeAgent:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      responses:
        "200":
          application/json: {"type": "Object", "displayName": "Bank Account", "description": "An account that bank transactions may be recorded against", "required": true, "properties": {"accountName": {"type": "String", "displayName": "Name", "description": "The name of the bank account in the originating system", "required": true}, "sortCode": {"type": "String", "displayName": "Sort Code", "description": "The sort code for the bank account", "required": false, "validation": {"warnings": [{"field": "SortCode", "details": "Must have a length between 0 and 8 characters"}], "information": []}}, "accountNumber": {"type": "String", "displayName": "Account Number", "description": "The account number for the bank account", "required": false}, "iBan": {"type": "String", "displayName": "IBAN", "description": "The international bank account number of the account. Often used when making or receiving international payments", "required": false}, "currency": {"type": "String", "displayName": "Currency", "description": "The currency of the bank account", "required": true, "options": [{"value": "AED", "type": "String", "displayName": "AED", "required": false}, {"value": "AMD", "type": "String", "displayName": "AMD", "required": false}, {"value": "AOA", "type": "String", "displayName": "AOA", "required": false}, {"value": "ARS", "type": "String", "displayName": "ARS", "required": false}, {"value": "AUD", "type": "String", "displayName": "AUD", "required": false}, {"value": "AWG", "type": "String", "displayName": "AWG", "required": false}, {"value": "AZN", "type": "String", "displayName": "AZN", "required": false}, {"value": "BBD", "type": "String", "displayName": "BBD", "required": false}, {"value": "BDT", "type": "String", "displayName": "BDT", "required": false}, {"value": "BGN", "type": "String", "displayName": "BGN", "required": false}, {"value": "BRL", "type": "String", "displayName": "BRL", "required": false}, {"value": "BWP", "type": "String", "displayName": "BWP", "required": false}, {"value": "CAD", "type": "String", "displayName": "CAD", "required": false}, {"value": "CHF", "type": "String", "displayName": "CHF", "required": false}, {"value": "CLP", "type": "String", "displayName": "CLP", "required": false}, {"value": "CNY", "type": "String", "displayName": "CNY", "required": false}, {"value": "COP", "type": "String", "displayName": "COP", "required": false}, {"value": "CRC", "type": "String", "displayName": "CRC", "required": false}, {"value": "CUC", "type": "String", "displayName": "CUC", "required": false}, {"value": "CUP", "type": "String", "displayName": "CUP", "required": false}, {"value": "CZK", "type": "String", "displayName": "CZK", "required": false}, {"value": "DKK", "type": "String", "displayName": "DKK", "required": false}, {"value": "DOP", "type": "String", "displayName": "DOP", "required": false}, {"value": "EGP", "type": "String", "displayName": "EGP", "required": false}, {"value": "EUR", "type": "String", "displayName": "EUR", "required": false}, {"value": "FJD", "type": "String", "displayName": "FJD", "required": false}, {"value": "GBP", "type": "String", "displayName": "GBP", "required": false}, {"value": "GEL", "type": "String", "displayName": "GEL", "required": false}, {"value": "GHS", "type": "String", "displayName": "GHS", "required": false}, {"value": "GTQ", "type": "String", "displayName": "GTQ", "required": false}, {"value": "GYD", "type": "String", "displayName": "GYD", "required": false}, {"value": "HKD", "type": "String", "displayName": "HKD", "required": false}, {"value": "HNL", "type": "String", "displayName": "HNL", "required": false}, {"value": "HRK", "type": "String", "displayName": "HRK", "required": false}, {"value": "HUF", "type": "String", "displayName": "HUF", "required": false}, {"value": "IDR", "type": "String", "displayName": "IDR", "required": false}, {"value": "ILS", "type": "String", "displayName": "ILS", "required": false}, {"value": "INR", "type": "String", "displayName": "INR", "required": false}, {"value": "ISK", "type": "String", "displayName": "ISK", "required": false}, {"value": "JMD", "type": "String", "displayName": "JMD", "required": false}, {"value": "JPY", "type": "String", "displayName": "JPY", "required": false}, {"value": "KES", "type": "String", "displayName": "KES", "required": false}, {"value": "KRW", "type": "String", "displayName": "KRW", "required": false}, {"value": "KWD", "type": "String", "displayName": "KWD", "required": false}, {"value": "KYD", "type": "String", "displayName": "KYD", "required": false}, {"value": "KZT", "type": "String", "displayName": "KZT", "required": false}, {"value": "LAK", "type": "String", "displayName": "LAK", "required": false}, {"value": "LBP", "type": "String", "displayName": "LBP", "required": false}, {"value": "LKR", "type": "String", "displayName": "LKR", "required": false}, {"value": "LTL", "type": "String", "displayName": "LTL", "required": false}, {"value": "LVL", "type": "String", "displayName": "LVL", "required": false}, {"value": "MAD", "type": "String", "displayName": "MAD", "required": false}, {"value": "MDL", "type": "String", "displayName": "MDL", "required": false}, {"value": "MGA", "type": "String", "displayName": "MGA", "required": false}, {"value": "MUR", "type": "String", "displayName": "MUR", "required": false}, {"value": "MVR", "type": "String", "displayName": "MVR", "required": false}, {"value": "MWK", "type": "String", "displayName": "MWK", "required": false}, {"value": "MXN", "type": "String", "displayName": "MXN", "required": false}, {"value": "MYR", "type": "String", "displayName": "MYR", "required": false}, {"value": "MZN", "type": "String", "displayName": "MZN", "required": false}, {"value": "NAD", "type": "String", "displayName": "NAD", "required": false}, {"value": "NGN", "type": "String", "displayName": "NGN", "required": false}, {"value": "NOK", "type": "String", "displayName": "NOK", "required": false}, {"value": "NPR", "type": "String", "displayName": "NPR", "required": false}, {"value": "NZD", "type": "String", "displayName": "NZD", "required": false}, {"value": "OMR", "type": "String", "displayName": "OMR", "required": false}, {"value": "PEN", "type": "String", "displayName": "PEN", "required": false}, {"value": "PHP", "type": "String", "displayName": "PHP", "required": false}, {"value": "PKR", "type": "String", "displayName": "PKR", "required": false}, {"value": "PLN", "type": "String", "displayName": "PLN", "required": false}, {"value": "QAR", "type": "String", "displayName": "QAR", "required": false}, {"value": "RON", "type": "String", "displayName": "RON", "required": false}, {"value": "RSD", "type": "String", "displayName": "RSD", "required": false}, {"value": "RUB", "type": "String", "displayName": "RUB", "required": false}, {"value": "RWF", "type": "String", "displayName": "RWF", "required": false}, {"value": "SAR", "type": "String", "displayName": "SAR", "required": false}, {"value": "SCR", "type": "String", "displayName": "SCR", "required": false}, {"value": "SEK", "type": "String", "displayName": "SEK", "required": false}, {"value": "SGD", "type": "String", "displayName": "SGD", "required": false}, {"value": "THB", "type": "String", "displayName": "THB", "required": false}, {"value": "TND", "type": "String", "displayName": "TND", "required": false}, {"value": "TRY", "type": "String", "displayName": "TRY", "required": false}, {"value": "TTD", "type": "String", "displayName": "TTD", "required": false}, {"value": "TWD", "type": "String", "displayName": "TWD", "required": false}, {"value": "TZS", "type": "String", "displayName": "TZS", "required": false}, {"value": "UAH", "type": "String", "displayName": "UAH", "required": false}, {"value": "UGX", "type": "String", "displayName": "UGX", "required": false}, {"value": "USD", "type": "String", "displayName": "USD", "required": false}, {"value": "UYU", "type": "String", "displayName": "UYU", "required": false}, {"value": "VEF", "type": "String", "displayName": "VEF", "required": false}, {"value": "VND", "type": "String", "displayName": "VND", "required": false}, {"value": "VUV", "type": "String", "displayName": "VUV", "required": false}, {"value": "XAF", "type": "String", "displayName": "XAF", "required": false}, {"value": "XCD", "type": "String", "displayName": "XCD", "required": false}, {"value": "XOF", "type": "String", "displayName": "XOF", "required": false}, {"value": "ZAR", "type": "String", "displayName": "ZAR", "required": false}, {"value": "ZMK", "type": "String", "displayName": "ZMK", "required": false}]}, "balance": {"type": "Number", "displayName": "Balance", "description": "The balance of the bank account", "required": false, "validation": {"warnings": [], "information": [{"field": "Balance", "details": "The opening balance, in the account currency"}]}}, "institution": {"type": "String", "displayName": "Institution", "description": "The institution of the bank account", "required": false}}}
    KashFlow:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      responses:
        "200":
          application/json: {"type": "Object", "displayName": "Bank Account", "description": "An account that bank transactions may be recorded against", "required": true, "properties": {"accountName": {"type": "String", "displayName": "Account Name", "description": "Name of the bank account as it appears in Kashflow.", "required": true}, "balance": {"type": "Number", "displayName": "Balance", "description": "The opening balance, in the account currency.", "required": false}, "currency": {"type": "String", "displayName": "Currency", "description": "The currency of the bank account.", "required": true}}}
    QuickBooks Desktop:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      responses:
        "200":
          application/json: {"type": "Object", "displayName": "Bank Account", "description": "An account that bank transactions may be recorded against", "required": true, "properties": {"nominalCode": {"type": "String", "displayName": "Nominal Code", "description": "The external reference given to each nominal account for a business", "required": true, "validation": {"warnings": [{"field": "NominalCode", "details": "Max length of 7 characters."}], "information": []}}, "accountName": {"type": "String", "displayName": "Name", "description": "The name of the bank account in the originating system", "required": true, "validation": {"warnings": [{"field": "AccountName", "details": "Max length of 31 characters."}], "information": []}}, "currency": {"type": "String", "displayName": "Currency", "description": "The currency of the bank account", "required": false, "validation": {"warnings": [{"field": "Currency", "details": "The currency must match the base currency of the QuickBooks Desktop company unless the FullyQualifiedCategory is 'Asset.AccountsReceivable','Liability.AccountsPayable' or 'Liability.CreditCard'"}, {"field": "Currency", "details": "Must be a three letter ISO code that matches an existing active currency in the QuickBooks Desktop company"}, {"field": "Currency", "details": "Can only be set if the Quickbooks Desktop company has Multicurrency enabled."}], "information": [{"field": "Currency", "details": "If not set, will default to the base currency of the QuickBooks Desktop company"}]}}, "balance": {"type": "Number", "displayName": "Balance", "description": "The balance of the bank account", "required": false}}}
    QuickBooks Online Sandbox:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      responses:
        "200":
          application/json: {"type": "Object", "displayName": "Bank Account", "description": "An account that bank transactions may be recorded against", "required": true, "properties": {"accountName": {"type": "String", "displayName": "Account Name", "description": "Name of account as it appears in the chart of accounts or general ledger.", "required": true}, "accountNumber": {"type": "String", "displayName": "Account Number", "description": "User-defined account number to help the user in identifying the account within the chart-of-accounts and in deciding what should be posted to the account.", "required": true}, "currency": {"type": "String", "displayName": "Currency", "description": "Currency of the bank account.", "required": true}}}
    Sage Business Cloud Accounting:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      responses:
        "200":
          application/json: {"type": "Object", "displayName": "Bank Account", "description": "An account that bank transactions may be recorded against", "required": true, "properties": {"accountName": {"type": "String", "displayName": "Name", "description": "The name of the bank account in the originating system", "required": true, "validation": {"warnings": [], "information": [{"field": "AccountName", "details": "Must be provided."}, {"field": "AccountName", "details": "Should not be longer than 50 characters."}]}}, "currency": {"type": "String", "displayName": "Currency", "description": "The currency of the bank account", "required": true, "validation": {"warnings": [], "information": [{"field": "Currency", "details": "Must be provided."}, {"field": "Currency", "details": "Must match the company's base currency."}]}}, "sortCode": {"type": "String", "displayName": "Sort Code", "description": "The sort code for the bank account", "required": false, "validation": {"warnings": [], "information": [{"field": "SortCode", "details": "Should be a 6 digit number."}]}}, "accountNumber": {"type": "String", "displayName": "Account Number", "description": "The account number for the bank account", "required": false, "validation": {"warnings": [], "information": [{"field": "AccountNumber", "details": "Should not be longer than 25 characters."}]}}, "iBan": {"type": "String", "displayName": "IBAN", "description": "The international bank account number of the account. Often used when making or receiving international payments", "required": false, "validation": {"warnings": [], "information": [{"field": "IBan", "details": "Should be in the international bank account number format."}]}}, "nominalCode": {"type": "String", "displayName": "Nominal Code", "description": "The external reference given to each nominal account for a business", "required": false, "validation": {"warnings": [], "information": [{"field": "NominalCode", "details": "Should be a number between 1 and 99999999."}]}}}}
    Sandbox:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      responses:
        "200":
          application/json: {"type": "Object", "displayName": "Bank Account", "description": "An account that bank transactions may be recorded against", "required": true, "properties": {"accountName": {"type": "String", "displayName": "Name", "description": "The name of the bank account in the originating system", "required": true}, "accountType": {"type": "String", "displayName": "Account Type", "description": "The type of account", "required": true}, "nominalCode": {"type": "String", "displayName": "Nominal Code", "description": "The external reference given to each nominal account for a business", "required": true}, "sortCode": {"type": "String", "displayName": "Sort Code", "description": "The sort code for the bank account", "required": true}, "accountNumber": {"type": "String", "displayName": "Account Number", "description": "The account number for the bank account", "required": true}, "iBan": {"type": "String", "displayName": "IBAN", "description": "The international bank account number of the account. Often used when making or receiving international payments", "required": true}, "currency": {"type": "String", "displayName": "Currency", "description": "The currency of the bank account", "required": true}, "balance": {"type": "Number", "displayName": "Balance", "description": "The balance of the bank account", "required": true}, "availableBalance": {"type": "Number", "displayName": "Available Balance", "description": "The available balance of the bank account", "required": true}, "overdraftLimit": {"type": "Number", "displayName": "Overdraft Limit", "description": "The pre-arranged overdraft limit of the account", "required": true}, "institution": {"type": "String", "displayName": "Institution", "description": "The institution of the bank account", "required": true}, "metadata": {"type": "Object", "displayName": "Metadata", "description": "Miscellaneous data about the item", "required": true}}}
    Unauthorized:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      responses:
        "401":
          application/json: {"statusCode": 401, "service": "PublicApi", "error": "Unauthorized", "correlationId": "7eb40d6b415d7bcd99ce658268284056", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  create-bank-account:
    Malformed query:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
        query: {}
      requestBody:
        application/json: {"currency": "USD", "status": "Active"}
      responses:
        "400":
          application/json: {"statusCode": 400, "service": "PublicApi", "error": "Error processing request - not valid.", "correlationId": "bc997528a9d7abb9161ef45f05d38599", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  create-source-account:
    Malformed query:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      requestBody:
        application/json: {"id": "acc-002", "accountName": "account-083", "accountType": "savings", "accountNumber": "23456789", "routingInfo": {"bankCode": "21001088", "type": "bankcode"}, "currency": "GBP", "balance": 400, "accountInfo": {"description": "account description 2", "nickname": "account 1290", "accountOpenDate": "2023-05-23T00:00:00Z", "availableBalance": 400}, "modifiedDate": "2024-08-02T00:00:00.000Z", "status": "pending", "feedStartDate": "2024-05-01T00:00:00Z"}
      responses:
        "400":
          application/json: {"statusCode": 400, "service": "PublicApi", "error": "Error processing request - not valid.", "correlationId": "bc997528a9d7abb9161ef45f05d38599", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  list-source-accounts:
    Unauthorized:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      responses:
        "401":
          application/json: {"statusCode": 401, "service": "PublicApi", "error": "Unauthorized", "correlationId": "7eb40d6b415d7bcd99ce658268284056", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  update-source-account:
    Malformed query:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
          accountId: "9wg4lep4ush5cxs79pl8sozmsndbaukll3ind4g7buqbm1h2"
      requestBody:
        application/json: {"id": "acc-003", "accountName": "account-095", "accountType": "Credit", "accountNumber": "12345671", "sortCode": "123456", "currency": "USD", "balance": 0, "modifiedDate": "2023-01-09T14:14:14.1057478Z", "status": "pending", "feedStartDate": "2022-10-23T00:00:00Z"}
      responses:
        "400":
          application/json: {"statusCode": 400, "service": "PublicApi", "error": "Error processing request - not valid.", "correlationId": "bc997528a9d7abb9161ef45f05d38599", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  delete-source-account:
    Unauthorized:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
          accountId: "7110701885"
      responses:
        "401":
          application/json: {"statusCode": 401, "service": "PublicApi", "error": "Unauthorized", "correlationId": "7eb40d6b415d7bcd99ce658268284056", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  generate-credentials:
    Unauthorized:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      responses:
        "401":
          application/json: {"statusCode": 401, "service": "PublicApi", "error": "Unauthorized", "correlationId": "7eb40d6b415d7bcd99ce658268284056", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  delete-bank-feed-credentials:
    Unauthorized:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      responses:
        "401":
          application/json: {"statusCode": 401, "service": "PublicApi", "error": "Unauthorized", "correlationId": "7eb40d6b415d7bcd99ce658268284056", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  get-bank-account-mapping:
    Example:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      responses:
        "200":
          application/json: [{"sourceAccountId": "account-001", "sourceAccountName": "account-001", "sourceAccountNumber": "12345670", "sourceBalance": "99.99", "sourceCurrency": "GBP", "status": "pending", "targetAccountOptions": [{"id": "d21e25d6-98c5-4bfb-b469-105833bea3c8", "name": "Money Bank account", "sortCode": "123456", "accountNumber": "789"}, {"id": "d06ff4b2-e4f2-4681-9841-014bd008cdab", "name": "Bank of Dave account", "sortCode": "998866", "accountNumber": "99887766"}, {"id": "c8f252fc-84f3-4a8b-ace8-ae99f41a81ae", "name": "LuxLend account", "sortCode": "123456", "accountNumber": "123456789"}], "feedStartDate": "2022-10-23T00:00:00Z"}]
    Unauthorized:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      responses:
        "401":
          application/json: {"statusCode": 401, "service": "PublicApi", "error": "Unauthorized", "correlationId": "7eb40d6b415d7bcd99ce658268284056", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  create-bank-account-mapping:
    Example:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      requestBody:
        application/json: {"sourceAccountId": "acc-002", "targetAccountId": "account-081"}
      responses:
        "200":
          application/json: {"sourceAccountId": "acc-002", "targetAccountId": "account-081", "status": "Failed", "error": "A feed connection already exists to this account"}
        "400": {}
    Malformed query:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      requestBody:
        application/json: {"sourceAccountId": "acc-002", "targetAccountId": "account-081"}
      responses:
        "400":
          application/json: {"statusCode": 400, "service": "PublicApi", "error": "Error processing request - not valid.", "correlationId": "bc997528a9d7abb9161ef45f05d38599", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  get-company-information:
    Malformed query:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
      responses:
        "400":
          application/json: {"statusCode": 400, "service": "PublicApi", "error": "Error processing request - not valid.", "correlationId": "bc997528a9d7abb9161ef45f05d38599", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  create-bank-transactions:
    Xero:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
          accountId: "9wg4lep4ush5cxs79pl8sozmsndbaukll3ind4g7buqbm1h2"
        query: {}
      requestBody:
        application/json: {"accountId": "49cd5a42-b311-4750-9361-52e2ed1d4653", "transactions": [{"id": "716422529", "date": "2023-08-22T10:21:00Z", "description": "Repayment of Credit Card", "counterparty": "Bank of Example", "reference": "Ref-12345", "reconciled": true, "amount": 100, "balance": 100, "transactionType": "Credit"}, {"id": "716422530", "date": "2023-08-22T10:22:00Z", "description": "Amazon Purchase", "counterparty": "Amazon", "reference": "Ref-12346", "reconciled": false, "amount": -100, "balance": 0, "transactionType": "Debit"}, {"id": "716422531", "date": "2023-08-22T10:23:00Z", "description": "Office Supplies", "counterparty": "Office Mart", "reference": "Ref-12347", "reconciled": false, "amount": -60, "balance": -60, "transactionType": "Debit"}]}
      responses:
        "200":
          application/json: {"data": {"accountId": "EILBDVJVNUAGVKRQ", "transactions": [{"id": "716422529", "date": "2022-10-23T00:00:00Z", "description": "Debit for Payment Id sdp-1-57379a43-c4b8-49f5-bd7c-699189ee7a60", "counterparty": "ACME INC", "reference": "reference for transaction", "reconciled": false, "amount": 999.99, "balance": -999.99}]}, "changes": [], "dataType": "invoices", "companyId": "8a210b68-6988-11ed-a1eb-0242ac120002", "pushOperationKey": "cf021cd9-cf54-4033-a152-11a509a3080a", "dataConnectionKey": "2e9d2c44-f675-40ba-8049-353bfcb5e171", "requestedOnUtc": "2022-10-23T00:00:00Z", "completedOnUtc": "2022-10-23T00:00:00Z", "status": "Failed", "statusCode": 259772}
        "400": {}
    QuickBooks Online Bank Feeds:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
          accountId: "EILBDVJVNUAGVKRQ"
        query: {}
      requestBody:
        application/json: {"accountId": "49cd5a42-b311-4750-9361-52e2ed1d4653", "transactions": [{"id": "716422529", "date": "2023-08-22T10:21:00Z", "description": "Repayment of Credit Card", "counterparty": "ACME INC", "reference": "reference for transaction", "reconciled": false, "amount": 100, "balance": 100, "transactionType": "Credit"}, {"id": "716422530", "date": "2023-08-22T10:22:00Z", "description": "Amazon Purchase", "counterparty": "ACME INC", "reference": "reference for transaction", "reconciled": false, "amount": -100, "balance": 0, "transactionType": "Debit"}, {"id": "716422531", "date": "2023-08-22T10:23:00Z", "description": "Office Supplies", "counterparty": "ACME INC", "reference": "reference for transaction", "reconciled": false, "amount": -60, "balance": -60, "transactionType": "Debit"}]}
      responses:
        "200":
          application/json: {"data": {"accountId": "13d946f0-c5d5-42bc-b092-97ece17923ab", "transactions": [{"id": "716422529", "date": "2022-10-23T00:00:00Z", "description": "Debit for Payment Id sdp-1-57379a43-c4b8-49f5-bd7c-699189ee7a60", "counterparty": "ACME INC", "reference": "reference for transaction", "reconciled": false, "amount": 999.99, "balance": -999.99}, {"id": "716422529", "date": "2022-10-23T00:00:00Z", "description": "Debit for Payment Id sdp-1-57379a43-c4b8-49f5-bd7c-699189ee7a60", "counterparty": "ACME INC", "reference": "reference for transaction", "reconciled": false, "amount": 999.99, "balance": -999.99}]}, "changes": [{"recordRef": {"dataType": "invoices"}}, {"recordRef": {"dataType": "invoices"}}, {"recordRef": {"dataType": "invoices"}}], "dataType": "invoices", "companyId": "8a210b68-6988-11ed-a1eb-0242ac120002", "pushOperationKey": "37691775-e024-4985-8613-de0ee803d56a", "dataConnectionKey": "2e9d2c44-f675-40ba-8049-353bfcb5e171", "requestedOnUtc": "2022-10-23T00:00:00Z", "completedOnUtc": "2022-10-23T00:00:00Z", "status": "Success", "statusCode": 295558}
        "400": {}
    FreeAgent:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
          accountId: "13d946f0-c5d5-42bc-b092-97ece17923ab"
        query: {}
      requestBody:
        application/json: {"accountId": "49cd5a42-b311-4750-9361-52e2ed1d4653", "transactions": [{"id": "716422529", "date": "2023-08-22T10:21:00Z", "description": "Repayment of Credit Card", "counterparty": "ACME INC", "reference": "reference for transaction", "reconciled": false, "amount": 100, "balance": -999.99, "transactionType": "Credit"}, {"id": "716422530", "date": "2023-08-22T10:22:00Z", "description": "Amazon Purchase", "counterparty": "ACME INC", "reference": "reference for transaction", "reconciled": false, "amount": -100, "balance": -999.99, "transactionType": "Debit"}, {"id": "716422531", "date": "2023-08-22T10:23:00Z", "description": "Office Supplies", "counterparty": "ACME INC", "reference": "reference for transaction", "reconciled": false, "amount": -60, "balance": -999.99, "transactionType": "Debit"}]}
      responses:
        "200":
          application/json: {"data": {"accountId": "7110701885", "transactions": [{"id": "716422529", "date": "2022-10-23T00:00:00Z", "description": "Debit for Payment Id sdp-1-57379a43-c4b8-49f5-bd7c-699189ee7a60", "counterparty": "ACME INC", "reference": "reference for transaction", "reconciled": false, "amount": 999.99, "balance": -999.99}, {"id": "716422529", "date": "2022-10-23T00:00:00Z", "description": "Debit for Payment Id sdp-1-57379a43-c4b8-49f5-bd7c-699189ee7a60", "counterparty": "ACME INC", "reference": "reference for transaction", "reconciled": false, "amount": 999.99, "balance": -999.99}]}, "changes": [], "dataType": "invoices", "companyId": "8a210b68-6988-11ed-a1eb-0242ac120002", "pushOperationKey": "9494798b-c19d-44c5-91e9-9dff42acbeff", "dataConnectionKey": "2e9d2c44-f675-40ba-8049-353bfcb5e171", "requestedOnUtc": "2022-10-23T00:00:00Z", "completedOnUtc": "2022-10-23T00:00:00Z", "status": "TimedOut", "statusCode": 371885}
        "400": {}
    Sage:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
          accountId: "13d946f0-c5d5-42bc-b092-97ece17923ab"
        query: {}
      requestBody:
        application/json: {"accountId": "49cd5a42-b311-4750-9361-52e2ed1d4653", "transactions": [{"id": "716422529", "date": "2023-08-22T10:21:00Z", "description": "Repayment of Credit Card", "counterparty": "Bank of Example", "reference": "Ref-12345", "reconciled": false, "amount": 100, "balance": 100, "transactionType": "Credit"}, {"id": "716422530", "date": "2023-08-22T10:22:00Z", "description": "Amazon Purchase", "counterparty": "Amazon", "reference": "Ref-12346", "reconciled": false, "amount": -100, "balance": 0, "transactionType": "Debit"}, {"id": "716422531", "date": "2023-08-22T10:23:00Z", "description": "Office Supplies", "counterparty": "Office Mart", "reference": "Ref-12347", "reconciled": false, "amount": -60, "balance": -60, "transactionType": "Debit"}]}
      responses:
        "200":
          application/json: {"data": {"accountId": "9wg4lep4ush5cxs79pl8sozmsndbaukll3ind4g7buqbm1h2", "transactions": []}, "changes": [{"recordRef": {"dataType": "invoices"}}, {"recordRef": {"dataType": "invoices"}}, {"recordRef": {"dataType": "invoices"}}], "dataType": "invoices", "companyId": "8a210b68-6988-11ed-a1eb-0242ac120002", "pushOperationKey": "f3ef75c2-4a16-4ac5-ae2b-bd7e44f71b26", "dataConnectionKey": "2e9d2c44-f675-40ba-8049-353bfcb5e171", "requestedOnUtc": "2022-10-23T00:00:00Z", "completedOnUtc": "2022-10-23T00:00:00Z", "status": "Success", "statusCode": 977591}
        "400": {}
    Malformed query:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          connectionId: "2e9d2c44-f675-40ba-8049-353bfcb5e171"
          accountId: "EILBDVJVNUAGVKRQ"
        query: {}
      requestBody:
        application/json: {"accountId": "13d946f0-c5d5-42bc-b092-97ece17923ab", "transactions": [{"id": "716422529", "date": "2022-10-23T00:00:00Z", "description": "Debit for Payment Id sdp-1-57379a43-c4b8-49f5-bd7c-699189ee7a60", "counterparty": "ACME INC", "reference": "reference for transaction", "reconciled": false, "amount": 999.99, "balance": -999.99}]}
      responses:
        "400":
          application/json: {"statusCode": 400, "service": "PublicApi", "error": "Error processing request - not valid.", "correlationId": "bc997528a9d7abb9161ef45f05d38599", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  get-create-operation:
    Unauthorized:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
          pushOperationKey: "1b33a562-bac6-42b7-8818-d55dba8df363"
      responses:
        "401":
          application/json: {"statusCode": 401, "service": "PublicApi", "error": "Unauthorized", "correlationId": "7eb40d6b415d7bcd99ce658268284056", "canBeRetried": "Unknown", "detailedErrorCode": 0}
  list-create-operations:
    "":
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "200":
          application/json: {"results": [{"changes": [{"recordRef": {"dataType": "invoices"}}, {"recordRef": {"dataType": "invoices"}}, {"recordRef": {"dataType": "invoices"}}], "dataType": "invoices", "companyId": "8a210b68-6988-11ed-a1eb-0242ac120002", "pushOperationKey": "48f2dcc7-c2e9-4d56-8004-72bd531f9fb2", "dataConnectionKey": "2e9d2c44-f675-40ba-8049-353bfcb5e171", "requestedOnUtc": "2022-10-23T00:00:00Z", "completedOnUtc": "2022-10-23T00:00:00Z", "status": "Failed", "statusCode": 364430}], "pageNumber": 1, "pageSize": 10, "totalResults": 1, "_links": {"self": {"href": "/companies/{id}/data/{dataType}"}, "current": {"href": "/companies/{id}/data/{dataType}?page=1&pageSize=10"}}}
        "400": {}
    Malformed query:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "400":
          application/json: {"statusCode": 400, "service": "ClientsApi", "error": "Error parsing query - Malformed query.", "correlationId": "bc997528a9d7abb9161ef45f05d38599", "canBeRetried": "Unknown", "detailedErrorCode": 0}
    Unresolved property:
      parameters:
        path:
          companyId: "8a210b68-6988-11ed-a1eb-0242ac120002"
        query:
          page: 1
          pageSize: 100
          query: "id=e3334455-1aed-4e71-ab43-6bccf12092ee"
          orderBy: "-modifiedDate"
      responses:
        "400":
          application/json: {"statusCode": 400, "service": "PullApi", "error": "Error parsing query - Could not resolve property isCompleted on Dataset", "correlationId": "98457fb9956b7f9b4b2fd4f6e23bb5c8", "canBeRetried": "Unknown", "detailedErrorCode": 0}
