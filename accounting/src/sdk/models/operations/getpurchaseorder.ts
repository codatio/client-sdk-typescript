/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetPurchaseOrderRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=companyId",
  })
  companyId: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=purchaseOrderId",
  })
  purchaseOrderId: string;
}

/**
 * Reference to the account to which the line item is linked.
 */
export class GetPurchaseOrderSourceModifiedDateLineItemsAccountRef extends SpeakeasyBase {
  /**
   * 'id' from the Accounts data type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * 'name' from the Accounts data type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Reference to the product or inventory item to which the line item is linked.
 */
export class GetPurchaseOrderSourceModifiedDateLineItemsItemRef extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Reference to the tax rate to which the line item is linked.
 */
export class GetPurchaseOrderSourceModifiedDateLineItemsTaxRateRef extends SpeakeasyBase {
  /**
   * Applicable tax rate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "effectiveTaxRate" })
  effectiveTaxRate?: number;

  /**
   * 'id' from the 'taxRates' data type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * 'name' from the 'taxRates' data type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * References a category against which the item is tracked.
 */
export class GetPurchaseOrderSourceModifiedDateLineItemsTrackingCategoryRefs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class GetPurchaseOrderSourceModifiedDateLineItems extends SpeakeasyBase {
  /**
   * Reference to the account to which the line item is linked.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountRef" })
  @Type(() => GetPurchaseOrderSourceModifiedDateLineItemsAccountRef)
  accountRef?: GetPurchaseOrderSourceModifiedDateLineItemsAccountRef;

  /**
   * Description of the goods / services that have been ordered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Value of any discounts applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discountAmount" })
  discountAmount?: number;

  /**
   * Percentage rate (from 0 to 100) of any discounts applied to the unit amount.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discountPercentage" })
  discountPercentage?: number;

  /**
   * Reference to the product or inventory item to which the line item is linked.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemRef" })
  @Type(() => GetPurchaseOrderSourceModifiedDateLineItemsItemRef)
  itemRef?: GetPurchaseOrderSourceModifiedDateLineItemsItemRef;

  /**
   * Number of units that have been ordered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: number;

  /**
   * Amount of the line, inclusive of discounts but exclusive of tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subTotal" })
  subTotal?: number;

  /**
   * Amount of tax for the line.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxAmount" })
  taxAmount?: number;

  /**
   * Reference to the tax rate to which the line item is linked.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxRateRef" })
  @Type(() => GetPurchaseOrderSourceModifiedDateLineItemsTaxRateRef)
  taxRateRef?: GetPurchaseOrderSourceModifiedDateLineItemsTaxRateRef;

  /**
   * Total amount of the line, inclusive of discounts and tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalAmount" })
  totalAmount?: number;

  /**
   * Reference to the tracking categories to which the line item is linked.
   */
  @SpeakeasyMetadata({
    elemType: GetPurchaseOrderSourceModifiedDateLineItemsTrackingCategoryRefs,
  })
  @Expose({ name: "trackingCategoryRefs" })
  @Type(() => GetPurchaseOrderSourceModifiedDateLineItemsTrackingCategoryRefs)
  trackingCategoryRefs?: GetPurchaseOrderSourceModifiedDateLineItemsTrackingCategoryRefs[];

  /**
   * Price of each unit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unitAmount" })
  unitAmount?: number;
}

export class GetPurchaseOrderSourceModifiedDateMetadata extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "isDeleted" })
  isDeleted?: boolean;
}

/**
 * Type of the address.
 */
export enum GetPurchaseOrderSourceModifiedDateShipToAddressTypeEnum {
  Unknown = "Unknown",
  Billing = "Billing",
  Delivery = "Delivery",
}

/**
 * Delivery address for any goods that have been ordered.
 */
export class GetPurchaseOrderSourceModifiedDateShipToAddress extends SpeakeasyBase {
  /**
   * City of the customer address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  /**
   * Country of the customer address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * Line 1 of the customer address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "line1" })
  line1?: string;

  /**
   * Line 2 of the customer address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "line2" })
  line2?: string;

  /**
   * Postal code or zip code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postalCode" })
  postalCode?: string;

  /**
   * Region of the customer address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  region?: string;

  /**
   * Type of the address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: GetPurchaseOrderSourceModifiedDateShipToAddressTypeEnum;
}

/**
 * Details of the named contact at the delivery address.
 */
export class GetPurchaseOrderSourceModifiedDateShipToContact extends SpeakeasyBase {
  /**
   * Email address of the contact at the delivery address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Name of the contact at the delivery address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Phone number of the contact at the delivery address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone" })
  phone?: string;
}

/**
 * Delivery details for any goods that have been ordered.
 */
export class GetPurchaseOrderSourceModifiedDateShipTo extends SpeakeasyBase {
  /**
   * Delivery address for any goods that have been ordered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  @Type(() => GetPurchaseOrderSourceModifiedDateShipToAddress)
  address?: GetPurchaseOrderSourceModifiedDateShipToAddress;

  /**
   * Details of the named contact at the delivery address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contact" })
  @Type(() => GetPurchaseOrderSourceModifiedDateShipToContact)
  contact?: GetPurchaseOrderSourceModifiedDateShipToContact;
}

/**
 * Current state of the purchase order
 */
export enum GetPurchaseOrderSourceModifiedDateStatusEnum {
  Unknown = "Unknown",
  Draft = "Draft",
  Open = "Open",
  Closed = "Closed",
  Void = "Void",
}

/**
 * Supplier that the purchase order is recorded against in the accounting system.
 */
export class GetPurchaseOrderSourceModifiedDateSupplierRef extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "supplierName" })
  supplierName?: string;
}

/**
 * > View the coverage for purchase orders in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=purchaseOrders" target="_blank">Data coverage explorer</a>.
 *
 * @remarks
 *
 * ## Overview
 *
 * Purchase orders represent a business's intent to purchase goods or services from a supplier and normally include information such as expected delivery dates and shipping details.
 *
 * This information can be used to provide visibility on a business's expected payables and to track a purchase through the full procurement process.
 */
export class GetPurchaseOrderSourceModifiedDate extends SpeakeasyBase {
  /**
   * Currency of the purchase order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: string;

  /**
   * Rate to convert the total amount of the payment into the base currency for the company at the time of the payment.
   *
   * @remarks
   *
   * Currency rates in Codat are implemented as the multiple of foreign currency units to each base currency unit.
   *
   * Where the currency rate is provided by the underlying accounting platform, it will be available from Codat with the same precision (up to a maximum of 9 decimal places).
   *
   * For accounting platforms which do not provide an explicit currency rate, it is calculated as `baseCurrency / foreignCurrency` and will be returned to 9 decimal places.
   *
   * ## Examples with base currency of GBP
   *
   * | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (GBP) |
   * | :--------------- | :------------- | :------------ | :------------------------- |
   * | **USD**          | $20            | 0.781         | £15.62                     |
   * | **EUR**          | €20            | 0.885         | £17.70                     |
   * | **RUB**          | ₽20            | 0.011         | £0.22                      |
   *
   * ## Examples with base currency of USD
   *
   * | Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (USD) |
   * | :--------------- | :------------- | :------------ | :------------------------- |
   * | **GBP**          | £20            | 1.277         | $25.54                     |
   * | **EUR**          | €20            | 1.134         | $22.68                     |
   * | **RUB**          | ₽20            | 0.015         | $0.30                      |
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currencyRate" })
  currencyRate?: number;

  /**
   * Actual delivery date for any goods that have been ordered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deliveryDate" })
  deliveryDate?: string;

  /**
   * Expected delivery date for any goods that have been ordered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expectedDeliveryDate" })
  expectedDeliveryDate?: string;

  /**
   * Identifier for the purchase order, unique for the company in the accounting platform.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Date of the purchase order as recorded in the accounting platform.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issueDate" })
  issueDate?: string;

  /**
   * Array of line items.
   */
  @SpeakeasyMetadata({ elemType: GetPurchaseOrderSourceModifiedDateLineItems })
  @Expose({ name: "lineItems" })
  @Type(() => GetPurchaseOrderSourceModifiedDateLineItems)
  lineItems?: GetPurchaseOrderSourceModifiedDateLineItems[];

  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  @Type(() => GetPurchaseOrderSourceModifiedDateMetadata)
  metadata?: GetPurchaseOrderSourceModifiedDateMetadata;

  /**
   * The date on which this record was last modified in Codat.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modifiedDate" })
  modifiedDate?: string;

  /**
   * Any additional information associated with the purchase order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "note" })
  note?: string;

  /**
   * Date the supplier is due to be paid.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentDueDate" })
  paymentDueDate?: string;

  /**
   * Friendly reference for the purchase order, commonly generated by the accounting platform.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "purchaseOrderNumber" })
  purchaseOrderNumber?: string;

  /**
   * Delivery details for any goods that have been ordered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shipTo" })
  @Type(() => GetPurchaseOrderSourceModifiedDateShipTo)
  shipTo?: GetPurchaseOrderSourceModifiedDateShipTo;

  /**
   * The date on which this record was last modified in the originating system
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceModifiedDate" })
  sourceModifiedDate?: string;

  /**
   * Current state of the purchase order
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: GetPurchaseOrderSourceModifiedDateStatusEnum;

  /**
   * Total amount of the purchase order, including discounts but excluding tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subTotal" })
  subTotal?: number;

  /**
   * Supplier that the purchase order is recorded against in the accounting system.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "supplierRef" })
  @Type(() => GetPurchaseOrderSourceModifiedDateSupplierRef)
  supplierRef?: GetPurchaseOrderSourceModifiedDateSupplierRef;

  /**
   * Total amount of the purchase order, including discounts and tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalAmount" })
  totalAmount?: number;

  /**
   * Total value of any discounts applied to the purchase order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalDiscount" })
  totalDiscount?: number;

  /**
   *
   *
   * @remarks
   * Total amount of tax included in the purchase order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalTaxAmount" })
  totalTaxAmount?: number;
}

export class GetPurchaseOrderResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  sourceModifiedDate?: GetPurchaseOrderSourceModifiedDate;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
