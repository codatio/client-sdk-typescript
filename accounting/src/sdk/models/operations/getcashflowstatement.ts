/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetCashFlowStatementRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=companyId",
  })
  companyId: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=periodLength",
  })
  periodLength: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=periodsToCompare",
  })
  periodsToCompare: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=startMonth;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  startMonth?: Date;
}

/**
 * Accounting method used when aggregating the report data. In this case, Cash.
 */
export enum GetCashFlowStatement200ApplicationJSONReportBasisEnum {
  Unknown = "Unknown",
  Accrual = "Accrual",
  Cash = "Cash",
}

/**
 * Accounting method used to prepare the cash flow statement.
 */
export enum GetCashFlowStatement200ApplicationJSONReportInputEnum {
  Unknown = "Unknown",
  Indirect = "Indirect",
  Direct = "Direct",
}

export class GetCashFlowStatement200ApplicationJSONCashFlowStatementReportLineReportLineReportLineReportLine extends SpeakeasyBase {
  /**
   * Identifier for the account, unique for the company in the accounting platform.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * Name of the report line item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Numerical value of the line item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: number;
}

export class GetCashFlowStatement200ApplicationJSONCashFlowStatementReportLineReportLineReportLine extends SpeakeasyBase {
  /**
   * Identifier for the account, unique for the company in the accounting platform.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * An array of ReportLine items.
   */
  @SpeakeasyMetadata({
    elemType:
      GetCashFlowStatement200ApplicationJSONCashFlowStatementReportLineReportLineReportLineReportLine,
  })
  @Expose({ name: "items" })
  @Type(
    () =>
      GetCashFlowStatement200ApplicationJSONCashFlowStatementReportLineReportLineReportLineReportLine
  )
  items?: GetCashFlowStatement200ApplicationJSONCashFlowStatementReportLineReportLineReportLineReportLine[];

  /**
   * Name of the report line item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Numerical value of the line item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: number;
}

export class GetCashFlowStatement200ApplicationJSONCashFlowStatementReportLineReportLine extends SpeakeasyBase {
  /**
   * Identifier for the account, unique for the company in the accounting platform.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * An array of ReportLine items.
   */
  @SpeakeasyMetadata({
    elemType:
      GetCashFlowStatement200ApplicationJSONCashFlowStatementReportLineReportLineReportLine,
  })
  @Expose({ name: "items" })
  @Type(
    () =>
      GetCashFlowStatement200ApplicationJSONCashFlowStatementReportLineReportLineReportLine
  )
  items?: GetCashFlowStatement200ApplicationJSONCashFlowStatementReportLineReportLineReportLine[];

  /**
   * Name of the report line item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Numerical value of the line item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: number;
}

/**
 * ReportLines for cash payments to suppliers for the purchase of goods or services.
 */
export class GetCashFlowStatement200ApplicationJSONCashFlowStatementReportLine extends SpeakeasyBase {
  /**
   * Identifier for the account, unique for the company in the accounting platform.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * An array of ReportLine items.
   */
  @SpeakeasyMetadata({
    elemType:
      GetCashFlowStatement200ApplicationJSONCashFlowStatementReportLineReportLine,
  })
  @Expose({ name: "items" })
  @Type(
    () =>
      GetCashFlowStatement200ApplicationJSONCashFlowStatementReportLineReportLine
  )
  items?: GetCashFlowStatement200ApplicationJSONCashFlowStatementReportLineReportLine[];

  /**
   * Name of the report line item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Numerical value of the line item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: number;
}

/**
 * > View the coverage for cash flow statement in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=cashFlowStatement" target="_blank">Data coverage explorer</a>.
 *
 * @remarks
 *
 * > ** Operating activities only**
 * >
 * > Currently, the cash flow statement shows cash that flows into and out of the company from operating activities *only*. Operating activities generate cash from the sale of goods or services.
 *
 * ## Overview
 *
 * A cash flow statement is a financial report that records all cash that is received or spent by a company during a given period. It gives you a clearer picture of the companyâ€™s performance, and their ability to pay creditors and finance growth.
 *
 * > **Cash flow statement or balance sheet?**
 * >
 * > Look at the cash flow statement to understand a company's ability to pay its bills. Although the balance sheet may show healthy earnings at a specific point in time, the cash flow statement allows you to see whether the company is meeting its financial commitments, such as paying creditors or its employees.
 */
export class GetCashFlowStatement200ApplicationJSONCashFlowStatement extends SpeakeasyBase {
  /**
   * ReportLines for cash payments to suppliers for the purchase of goods or services.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cashPayments" })
  @Type(() => GetCashFlowStatement200ApplicationJSONCashFlowStatementReportLine)
  cashPayments?: GetCashFlowStatement200ApplicationJSONCashFlowStatementReportLine;

  /**
   * ReportLines for cash receipts from the sale of goods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cashReceipts" })
  @Type(() => GetCashFlowStatement200ApplicationJSONCashFlowStatementReportLine)
  cashReceipts?: GetCashFlowStatement200ApplicationJSONCashFlowStatementReportLine;

  /**
   * Start date for the reporting period.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fromDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  fromDate?: Date;

  /**
   * End date for the reporting period.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  toDate?: Date;
}

/**
 * Success
 */
export class GetCashFlowStatement200ApplicationJSON extends SpeakeasyBase {
  /**
   * Currency of all values in the cash flow statement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency: string;

  @SpeakeasyMetadata()
  @Expose({ name: "earliestAvailableMonth" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  earliestAvailableMonth?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "mostRecentAvailableMonth" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  mostRecentAvailableMonth?: Date;

  /**
   * Accounting method used when aggregating the report data. In this case, Cash.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reportBasis" })
  reportBasis: GetCashFlowStatement200ApplicationJSONReportBasisEnum;

  /**
   * Accounting method used to prepare the cash flow statement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reportInput" })
  reportInput: GetCashFlowStatement200ApplicationJSONReportInputEnum;

  @SpeakeasyMetadata({
    elemType: GetCashFlowStatement200ApplicationJSONCashFlowStatement,
  })
  @Expose({ name: "reports" })
  @Type(() => GetCashFlowStatement200ApplicationJSONCashFlowStatement)
  reports: GetCashFlowStatement200ApplicationJSONCashFlowStatement[];
}

export class GetCashFlowStatementResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  getCashFlowStatement200ApplicationJSONObject?: GetCashFlowStatement200ApplicationJSON;
}
