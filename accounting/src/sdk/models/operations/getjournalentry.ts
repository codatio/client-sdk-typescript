/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetJournalEntryRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=companyId",
  })
  companyId: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=journalEntryId",
  })
  journalEntryId: string;
}

/**
 * Data types that reference an account, for example bill and invoice line items, use an accountRef that includes the ID and name of the linked account.
 */
export class GetJournalEntrySourceModifiedDateJournalLinesAccountRef extends SpeakeasyBase {
  /**
   * 'id' from the Accounts data type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * 'name' from the Accounts data type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * List of record refs associated with the tracking information for the line (eg to a Tracking Category, or customer etc.)
 */
export class GetJournalEntrySourceModifiedDateJournalLinesTracking extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "recordRefs" })
  recordRefs?: string[];
}

export class GetJournalEntrySourceModifiedDateJournalLines extends SpeakeasyBase {
  /**
   * Data types that reference an account, for example bill and invoice line items, use an accountRef that includes the ID and name of the linked account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountRef" })
  @Type(() => GetJournalEntrySourceModifiedDateJournalLinesAccountRef)
  accountRef?: GetJournalEntrySourceModifiedDateJournalLinesAccountRef;

  /**
   * Currency for the journal line item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: string;

  /**
   * Description of the journal line item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Amount for the journal line. Debit entries are considered positive, and credit entries are considered negative.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "netAmount" })
  netAmount: number;

  /**
   * List of record refs associated with the tracking information for the line (eg to a Tracking Category, or customer etc.)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tracking" })
  @Type(() => GetJournalEntrySourceModifiedDateJournalLinesTracking)
  tracking?: GetJournalEntrySourceModifiedDateJournalLinesTracking;
}

/**
 * Links journal entries to the relevant journal in accounting integrations that use multi-book accounting (multiple journals).
 */
export class GetJournalEntrySourceModifiedDateJournalRef extends SpeakeasyBase {
  /**
   * GUID of the underlying journal.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Journal name, 256 characters max.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class GetJournalEntrySourceModifiedDateMetadata extends SpeakeasyBase {
  /**
   * Indicates whether the record has been deleted in the third-party system this record originated from.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isDeleted" })
  isDeleted?: boolean;
}

/**
 * Links to the underlying record or data type.
 *
 * @remarks
 *
 * Found on:
 *
 * - Journal entries
 * - Account transactions
 * - Invoices
 * - Transfers
 */
export class GetJournalEntrySourceModifiedDateRecordRef extends SpeakeasyBase {
  /**
   * Name of the 'dataType'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dataType" })
  dataType?: string;

  /**
   * 'id' of the underlying record or data type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

/**
 * Reference to a configured dynamic key value pair that is unique to the accounting platform. This feature is in private beta, contact us if you would like to learn more.
 */
export class GetJournalEntrySourceModifiedDateSupplementalData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "content" })
  content?: Record<string, Record<string, any>>;
}

/**
 * > **Language tip:** For the top-level record of a company's financial transactions, refer to the [Journals](https://docs.codat.io/accounting-api#/schemas/Journal) data type
 *
 * @remarks
 *
 * > View the coverage for journal entries in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=journalEntries" target="_blank">Data coverage explorer</a>.
 *
 * ## Overview
 *
 * A journal entry report shows the entries made in a company's general ledger, or [accounts](https://docs.codat.io/accounting-api#/schemas/Account), when transactions are approved. The journal line items for each journal entry should balance.
 *
 * A journal entry line item is a single transaction line on the journal entry. For example:
 *
 * - When a journal entry is recording a receipt of cash, the credit to accounts receivable and the debit to cash are separate line items.
 * - When a company needs to recognise revenue from an annual contract on a monthly basis, on receipt of cash for month one, they make a debit to deferred income and a credit to revenue.
 *
 * In Codat a journal entry contains details of:
 *
 * - The date on which the entry was created and posted.
 * - Itemised lines, including amounts and currency.
 * - A reference to the associated accounts.
 * - A reference to the underlying record. For example, the invoice, bill, or other data type that triggered the posting of the journal entry to the general ledger.
 *
 * > **Pushing journal entries**
 * > Codat only supports journal entries in the base currency of the company that are pushed into accounts denominated in the same base currency.
 */
export class GetJournalEntrySourceModifiedDate extends SpeakeasyBase {
  /**
   * Date on which the journal was created in the accounting platform.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdOn" })
  createdOn?: string;

  /**
   * Optional description of the journal entry.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Unique identifier of the journal entry for the company in the accounting platform.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * An array of journal lines.
   */
  @SpeakeasyMetadata({
    elemType: GetJournalEntrySourceModifiedDateJournalLines,
  })
  @Expose({ name: "journalLines" })
  @Type(() => GetJournalEntrySourceModifiedDateJournalLines)
  journalLines?: GetJournalEntrySourceModifiedDateJournalLines[];

  /**
   * Links journal entries to the relevant journal in accounting integrations that use multi-book accounting (multiple journals).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "journalRef" })
  @Type(() => GetJournalEntrySourceModifiedDateJournalRef)
  journalRef?: GetJournalEntrySourceModifiedDateJournalRef;

  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  @Type(() => GetJournalEntrySourceModifiedDateMetadata)
  metadata?: GetJournalEntrySourceModifiedDateMetadata;

  /**
   * The date on which this record was last modified in Codat.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modifiedDate" })
  modifiedDate?: string;

  /**
   * Date on which the journal entry was posted to the accounting platform, and had an impact on the general ledger. This may be different from the creation date.
   *
   * @remarks
   *
   * For example, a user creates a journal entry on Monday and saves it as draft, which has no impact on the general ledger. On Thursday, they return to the entry and post it.
   *
   * The **createdOn** date shows as Monday.
   * The **postedOn** date shows as Thursday.
   * Journal entries can also be backdated, so the **postedOn** date may be earlier than the **createdOn** date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postedOn" })
  postedOn?: string;

  /**
   * Links to the underlying record or data type.
   *
   * @remarks
   *
   * Found on:
   *
   * - Journal entries
   * - Account transactions
   * - Invoices
   * - Transfers
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recordRef" })
  @Type(() => GetJournalEntrySourceModifiedDateRecordRef)
  recordRef?: GetJournalEntrySourceModifiedDateRecordRef;

  /**
   * The date on which this record was last modified in the originating system
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceModifiedDate" })
  sourceModifiedDate?: string;

  /**
   * Reference to a configured dynamic key value pair that is unique to the accounting platform. This feature is in private beta, contact us if you would like to learn more.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "supplementalData" })
  @Type(() => GetJournalEntrySourceModifiedDateSupplementalData)
  supplementalData?: GetJournalEntrySourceModifiedDateSupplementalData;

  /**
   * Date on which the journal was last updated in the accounting platform.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updatedOn" })
  updatedOn?: string;
}

export class GetJournalEntryResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  sourceModifiedDate?: GetJournalEntrySourceModifiedDate;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
