/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetCompanyInfoRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=companyId",
  })
  companyId: string;
}

/**
 * Type of the address.
 */
export enum GetCompanyInfoCompanyInfoAddressesTypeEnum {
  Unknown = "Unknown",
  Billing = "Billing",
  Delivery = "Delivery",
}

export class GetCompanyInfoCompanyInfoAddresses extends SpeakeasyBase {
  /**
   * City of the customer address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  /**
   * Country of the customer address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * Line 1 of the customer address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "line1" })
  line1?: string;

  /**
   * Line 2 of the customer address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "line2" })
  line2?: string;

  /**
   * Postal code or zip code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postalCode" })
  postalCode?: string;

  /**
   * Region of the customer address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  region?: string;

  /**
   * Type of the address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: GetCompanyInfoCompanyInfoAddressesTypeEnum;
}

/**
 * Type of phone number.
 */
export enum GetCompanyInfoCompanyInfoPhoneNumbersTypeEnum {
  Unknown = "Unknown",
  Primary = "Primary",
  Landline = "Landline",
  Mobile = "Mobile",
  Fax = "Fax",
}

export class GetCompanyInfoCompanyInfoPhoneNumbers extends SpeakeasyBase {
  /**
   * Phone number for a customer contact.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;

  /**
   * Type of phone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: GetCompanyInfoCompanyInfoPhoneNumbersTypeEnum;
}

/**
 * Type of web link.
 */
export enum GetCompanyInfoCompanyInfoWebLinksTypeEnum {
  Unknown = "Unknown",
  Website = "Website",
  Social = "Social",
}

export class GetCompanyInfoCompanyInfoWebLinks extends SpeakeasyBase {
  /**
   * Type of web link.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: GetCompanyInfoCompanyInfoWebLinksTypeEnum;

  /**
   * URL of a web link for a linked company.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * Success
 */
export class GetCompanyInfoCompanyInfo extends SpeakeasyBase {
  /**
   * Identifier or reference for the company in the accounting platform.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountingPlatformRef" })
  accountingPlatformRef?: string;

  /**
   * An array of Addresses.
   */
  @SpeakeasyMetadata({ elemType: GetCompanyInfoCompanyInfoAddresses })
  @Expose({ name: "addresses" })
  @Type(() => GetCompanyInfoCompanyInfoAddresses)
  addresses?: GetCompanyInfoCompanyInfoAddresses[];

  /**
   * Currency set in the accounting platform of the linked company. Used by the currency rate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "baseCurrency" })
  baseCurrency?: string;

  /**
   * Registered legal name of the linked company.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "companyLegalName" })
  companyLegalName?: string;

  /**
   * Name of the linked company.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "companyName" })
  companyName?: string;

  /**
   * Date the linked company was created in the accounting platform.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdDate?: Date;

  /**
   * Start date of the financial year for the company.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "financialYearStartDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  financialYearStartDate?: Date;

  /**
   * If set in the accounting platform, the date (in the ISO 8601 date/time format) after which accounting transactions cannot be edited. Commonly used when books are closed at year-end.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ledgerLockDate" })
  ledgerLockDate?: string;

  /**
   * An array of phone numbers.
   */
  @SpeakeasyMetadata({ elemType: GetCompanyInfoCompanyInfoPhoneNumbers })
  @Expose({ name: "phoneNumbers" })
  @Type(() => GetCompanyInfoCompanyInfoPhoneNumbers)
  phoneNumbers?: GetCompanyInfoCompanyInfoPhoneNumbers[];

  /**
   * Registration number given to the linked company by the companies authority in the country of origin. In the UK this is Companies House.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registrationNumber" })
  registrationNumber?: string;

  /**
   * URL addresses for the accounting source.
   *
   * @remarks
   *
   * For example, for Xero integrations two URLs are returned. These have many potential use cases, such as deep linking.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceUrls" })
  sourceUrls?: Record<string, string>;

  /**
   * Company tax number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxNumber" })
  taxNumber?: string;

  /**
   * An array of weblinks.
   */
  @SpeakeasyMetadata({ elemType: GetCompanyInfoCompanyInfoWebLinks })
  @Expose({ name: "webLinks" })
  @Type(() => GetCompanyInfoCompanyInfoWebLinks)
  webLinks?: GetCompanyInfoCompanyInfoWebLinks[];
}

export class GetCompanyInfoResponse extends SpeakeasyBase {
  /**
   * Success
   */
  @SpeakeasyMetadata()
  companyInfo?: GetCompanyInfoCompanyInfo;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
