/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { connectionManagementGetAccessToken } from "../funcs/connectionManagementGetAccessToken.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import { CorsSettings } from "./corssettings.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class ConnectionManagement extends ClientSDK {
  private _corsSettings?: CorsSettings;
  get corsSettings(): CorsSettings {
    return (this._corsSettings ??= new CorsSettings(this.options$));
  }

  /**
   * Get access token
   *
   * @remarks
   * Use the *Get access token* endpoint to retrieve a new access token for use with the [Connections SDK](https://docs.codat.io/auth-flow/optimize/connection-management). The token is only valid for one hour and applies to a single company.
   *
   * The embeddable [Connections SDK](https://docs.codat.io/auth-flow/optimize/connection-management) lets your customers control access to their data by allowing them to manage their existing connections.
   */
  async getAccessToken(
    request: operations.GetConnectionManagementAccessTokenRequest,
    options?: RequestOptions,
  ): Promise<shared.ConnectionManagementAccessToken> {
    return unwrapAsync(connectionManagementGetAccessToken(
      this,
      request,
      options,
    ));
  }
}
