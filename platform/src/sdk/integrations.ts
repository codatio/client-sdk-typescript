/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { integrationsGet } from "../funcs/integrationsGet.js";
import { integrationsGetBranding } from "../funcs/integrationsGetBranding.js";
import { integrationsList } from "../funcs/integrationsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Integrations extends ClientSDK {
  /**
   * List integrations
   *
   * @remarks
   * List your available integrations
   */
  async list(
    request?: operations.ListIntegrationsRequest | undefined,
    options?: RequestOptions,
  ): Promise<shared.Integrations> {
    return unwrapAsync(integrationsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get integration
   *
   * @remarks
   * Get single integration, by platformKey
   */
  async get(
    request: operations.GetIntegrationRequest,
    options?: RequestOptions,
  ): Promise<shared.Integration> {
    return unwrapAsync(integrationsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Get branding
   *
   * @remarks
   * Get branding for platform.
   */
  async getBranding(
    request: operations.GetIntegrationsBrandingRequest,
    options?: RequestOptions,
  ): Promise<shared.Branding> {
    return unwrapAsync(integrationsGetBranding(
      this,
      request,
      options,
    ));
  }
}
