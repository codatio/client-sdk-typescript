/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { supplementalDataConfigure } from "../funcs/supplementalDataConfigure.js";
import { supplementalDataGetConfiguration } from "../funcs/supplementalDataGetConfiguration.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class SupplementalData extends ClientSDK {
  /**
   * Configure
   *
   * @remarks
   * The *Configure* endpoint allows you to maintain or change configuration required to return supplemental data for each integration and data type combination.
   *
   * [Supplemental data](https://docs.codat.io/using-the-api/supplemental-data/overview) is additional data you can include in Codat's standard data types.
   *
   * **Integration-specific behaviour**
   * See the *examples* for integration-specific frequently requested properties.
   */
  async configure(
    request: operations.ConfigureSupplementalDataRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(supplementalDataConfigure(
      this,
      request,
      options,
    ));
  }

  /**
   * Get configuration
   *
   * @remarks
   * The *Get configuration* endpoint returns supplemental data configuration previously created for each integration and data type combination.
   *
   * [Supplemental data](https://docs.codat.io/using-the-api/supplemental-data/overview) is additional data you can include in Codat's standard data types.
   */
  async getConfiguration(
    request: operations.GetSupplementalDataConfigurationRequest,
    options?: RequestOptions,
  ): Promise<shared.SupplementalDataConfiguration> {
    return unwrapAsync(supplementalDataGetConfiguration(
      this,
      request,
      options,
    ));
  }
}
