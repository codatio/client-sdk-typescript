/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Group, Group$inboundSchema, Group$Outbound, Group$outboundSchema } from "./group.js";
import * as z from "zod";

export type Groups = {
    results?: Array<Group> | undefined;
};

/** @internal */
export const Groups$inboundSchema: z.ZodType<Groups, z.ZodTypeDef, unknown> = z.object({
    results: z.array(Group$inboundSchema).optional(),
});

/** @internal */
export type Groups$Outbound = {
    results?: Array<Group$Outbound> | undefined;
};

/** @internal */
export const Groups$outboundSchema: z.ZodType<Groups$Outbound, z.ZodTypeDef, Groups> = z.object({
    results: z.array(Group$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Groups$ {
    /** @deprecated use `Groups$inboundSchema` instead. */
    export const inboundSchema = Groups$inboundSchema;
    /** @deprecated use `Groups$outboundSchema` instead. */
    export const outboundSchema = Groups$outboundSchema;
    /** @deprecated use `Groups$Outbound` instead. */
    export type Outbound = Groups$Outbound;
}
