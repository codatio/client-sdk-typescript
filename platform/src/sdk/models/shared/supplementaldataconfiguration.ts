/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The client's defined name for the object.
 */
export type SupplementalDataSourceConfiguration = {
  /**
   * The underlying endpoint of the source system which the configuration is targeting.
   */
  dataSource?: string | undefined;
  /**
   * The additional properties that are required when pulling records.
   */
  pullData?: { [k: string]: string } | undefined;
  /**
   * The additional properties that are required to create and/or update records.
   */
  pushData?: { [k: string]: string } | undefined;
};

export type SupplementalDataConfiguration = {
  supplementalDataConfig?:
    | { [k: string]: SupplementalDataSourceConfiguration }
    | undefined;
};

/** @internal */
export const SupplementalDataSourceConfiguration$inboundSchema: z.ZodType<
  SupplementalDataSourceConfiguration,
  z.ZodTypeDef,
  unknown
> = z.object({
  dataSource: z.string().optional(),
  pullData: z.record(z.string()).optional(),
  pushData: z.record(z.string()).optional(),
});

/** @internal */
export type SupplementalDataSourceConfiguration$Outbound = {
  dataSource?: string | undefined;
  pullData?: { [k: string]: string } | undefined;
  pushData?: { [k: string]: string } | undefined;
};

/** @internal */
export const SupplementalDataSourceConfiguration$outboundSchema: z.ZodType<
  SupplementalDataSourceConfiguration$Outbound,
  z.ZodTypeDef,
  SupplementalDataSourceConfiguration
> = z.object({
  dataSource: z.string().optional(),
  pullData: z.record(z.string()).optional(),
  pushData: z.record(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SupplementalDataSourceConfiguration$ {
  /** @deprecated use `SupplementalDataSourceConfiguration$inboundSchema` instead. */
  export const inboundSchema =
    SupplementalDataSourceConfiguration$inboundSchema;
  /** @deprecated use `SupplementalDataSourceConfiguration$outboundSchema` instead. */
  export const outboundSchema =
    SupplementalDataSourceConfiguration$outboundSchema;
  /** @deprecated use `SupplementalDataSourceConfiguration$Outbound` instead. */
  export type Outbound = SupplementalDataSourceConfiguration$Outbound;
}

/** @internal */
export const SupplementalDataConfiguration$inboundSchema: z.ZodType<
  SupplementalDataConfiguration,
  z.ZodTypeDef,
  unknown
> = z.object({
  supplementalDataConfig: z.record(
    z.lazy(() => SupplementalDataSourceConfiguration$inboundSchema),
  ).optional(),
});

/** @internal */
export type SupplementalDataConfiguration$Outbound = {
  supplementalDataConfig?: {
    [k: string]: SupplementalDataSourceConfiguration$Outbound;
  } | undefined;
};

/** @internal */
export const SupplementalDataConfiguration$outboundSchema: z.ZodType<
  SupplementalDataConfiguration$Outbound,
  z.ZodTypeDef,
  SupplementalDataConfiguration
> = z.object({
  supplementalDataConfig: z.record(
    z.lazy(() => SupplementalDataSourceConfiguration$outboundSchema),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SupplementalDataConfiguration$ {
  /** @deprecated use `SupplementalDataConfiguration$inboundSchema` instead. */
  export const inboundSchema = SupplementalDataConfiguration$inboundSchema;
  /** @deprecated use `SupplementalDataConfiguration$outboundSchema` instead. */
  export const outboundSchema = SupplementalDataConfiguration$outboundSchema;
  /** @deprecated use `SupplementalDataConfiguration$Outbound` instead. */
  export type Outbound = SupplementalDataConfiguration$Outbound;
}
