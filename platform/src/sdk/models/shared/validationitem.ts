/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ValidationItem = {
  /**
   * Unique identifier for a validation item.
   */
  itemId?: string | null | undefined;
  /**
   * A message outlining validation item's issue.
   */
  message?: string | null | undefined;
  /**
   * Name of validator.
   */
  validatorName?: string | null | undefined;
};

/** @internal */
export const ValidationItem$inboundSchema: z.ZodType<
  ValidationItem,
  z.ZodTypeDef,
  unknown
> = z.object({
  itemId: z.nullable(z.string()).optional(),
  message: z.nullable(z.string()).optional(),
  validatorName: z.nullable(z.string()).optional(),
});

/** @internal */
export type ValidationItem$Outbound = {
  itemId?: string | null | undefined;
  message?: string | null | undefined;
  validatorName?: string | null | undefined;
};

/** @internal */
export const ValidationItem$outboundSchema: z.ZodType<
  ValidationItem$Outbound,
  z.ZodTypeDef,
  ValidationItem
> = z.object({
  itemId: z.nullable(z.string()).optional(),
  message: z.nullable(z.string()).optional(),
  validatorName: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ValidationItem$ {
  /** @deprecated use `ValidationItem$inboundSchema` instead. */
  export const inboundSchema = ValidationItem$inboundSchema;
  /** @deprecated use `ValidationItem$outboundSchema` instead. */
  export const outboundSchema = ValidationItem$outboundSchema;
  /** @deprecated use `ValidationItem$Outbound` instead. */
  export type Outbound = ValidationItem$Outbound;
}
