/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type CompanyGroupAssignment = {
  groupId?: string | undefined;
};

/** @internal */
export const CompanyGroupAssignment$inboundSchema: z.ZodType<
  CompanyGroupAssignment,
  z.ZodTypeDef,
  unknown
> = z.object({
  groupId: z.string().optional(),
});

/** @internal */
export type CompanyGroupAssignment$Outbound = {
  groupId?: string | undefined;
};

/** @internal */
export const CompanyGroupAssignment$outboundSchema: z.ZodType<
  CompanyGroupAssignment$Outbound,
  z.ZodTypeDef,
  CompanyGroupAssignment
> = z.object({
  groupId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompanyGroupAssignment$ {
  /** @deprecated use `CompanyGroupAssignment$inboundSchema` instead. */
  export const inboundSchema = CompanyGroupAssignment$inboundSchema;
  /** @deprecated use `CompanyGroupAssignment$outboundSchema` instead. */
  export const outboundSchema = CompanyGroupAssignment$outboundSchema;
  /** @deprecated use `CompanyGroupAssignment$Outbound` instead. */
  export type Outbound = CompanyGroupAssignment$Outbound;
}
