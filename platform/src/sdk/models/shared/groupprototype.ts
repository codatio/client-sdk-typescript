/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The group template used to create a group.
 */
export type GroupPrototype = {
    /**
     * Descriptive name of the group.
     */
    name?: string | undefined;
};

/** @internal */
export const GroupPrototype$inboundSchema: z.ZodType<GroupPrototype, z.ZodTypeDef, unknown> =
    z.object({
        name: z.string().optional(),
    });

/** @internal */
export type GroupPrototype$Outbound = {
    name?: string | undefined;
};

/** @internal */
export const GroupPrototype$outboundSchema: z.ZodType<
    GroupPrototype$Outbound,
    z.ZodTypeDef,
    GroupPrototype
> = z.object({
    name: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GroupPrototype$ {
    /** @deprecated use `GroupPrototype$inboundSchema` instead. */
    export const inboundSchema = GroupPrototype$inboundSchema;
    /** @deprecated use `GroupPrototype$outboundSchema` instead. */
    export const outboundSchema = GroupPrototype$outboundSchema;
    /** @deprecated use `GroupPrototype$Outbound` instead. */
    export type Outbound = GroupPrototype$Outbound;
}
