/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type CompanyReference = {
  /**
   * Unique identifier for your SMB in Codat.
   */
  id?: string | undefined;
  /**
   * The name of the company
   */
  name?: string | undefined;
  /**
   * Additional information about the company. This can be used to store foreign IDs, references, etc.
   */
  description?: string | undefined;
};

/** @internal */
export const CompanyReference$inboundSchema: z.ZodType<
  CompanyReference,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  description: z.string().optional(),
});

/** @internal */
export type CompanyReference$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  description?: string | undefined;
};

/** @internal */
export const CompanyReference$outboundSchema: z.ZodType<
  CompanyReference$Outbound,
  z.ZodTypeDef,
  CompanyReference
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  description: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompanyReference$ {
  /** @deprecated use `CompanyReference$inboundSchema` instead. */
  export const inboundSchema = CompanyReference$inboundSchema;
  /** @deprecated use `CompanyReference$outboundSchema` instead. */
  export const outboundSchema = CompanyReference$outboundSchema;
  /** @deprecated use `CompanyReference$Outbound` instead. */
  export type Outbound = CompanyReference$Outbound;
}
