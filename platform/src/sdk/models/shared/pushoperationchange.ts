/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PushChangeType,
  PushChangeType$inboundSchema,
  PushChangeType$outboundSchema,
} from "./pushchangetype.js";
import {
  PushOperationRef,
  PushOperationRef$inboundSchema,
  PushOperationRef$Outbound,
  PushOperationRef$outboundSchema,
} from "./pushoperationref.js";

export type PushOperationChange = {
  /**
   * Type of change being applied to record in third party platform.
   */
  type?: PushChangeType | undefined;
  recordRef?: PushOperationRef | undefined;
  /**
   * Unique identifier for the attachment created otherwise null.
   */
  attachmentId?: string | null | undefined;
};

/** @internal */
export const PushOperationChange$inboundSchema: z.ZodType<
  PushOperationChange,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PushChangeType$inboundSchema.optional(),
  recordRef: PushOperationRef$inboundSchema.optional(),
  attachmentId: z.nullable(z.string()).optional(),
});

/** @internal */
export type PushOperationChange$Outbound = {
  type?: string | undefined;
  recordRef?: PushOperationRef$Outbound | undefined;
  attachmentId?: string | null | undefined;
};

/** @internal */
export const PushOperationChange$outboundSchema: z.ZodType<
  PushOperationChange$Outbound,
  z.ZodTypeDef,
  PushOperationChange
> = z.object({
  type: PushChangeType$outboundSchema.optional(),
  recordRef: PushOperationRef$outboundSchema.optional(),
  attachmentId: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PushOperationChange$ {
  /** @deprecated use `PushOperationChange$inboundSchema` instead. */
  export const inboundSchema = PushOperationChange$inboundSchema;
  /** @deprecated use `PushOperationChange$outboundSchema` instead. */
  export const outboundSchema = PushOperationChange$outboundSchema;
  /** @deprecated use `PushOperationChange$Outbound` instead. */
  export type Outbound = PushOperationChange$Outbound;
}

export function pushOperationChangeToJSON(
  pushOperationChange: PushOperationChange,
): string {
  return JSON.stringify(
    PushOperationChange$outboundSchema.parse(pushOperationChange),
  );
}

export function pushOperationChangeFromJSON(
  jsonString: string,
): SafeParseResult<PushOperationChange, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PushOperationChange$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PushOperationChange' from JSON`,
  );
}
