/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type RemoveCompanyFromGroupRequest = {
  /**
   * Unique identifier for a company.
   */
  companyId: string;
  /**
   * Unique identifier for the group.
   */
  groupId: string;
};

/** @internal */
export const RemoveCompanyFromGroupRequest$inboundSchema: z.ZodType<
  RemoveCompanyFromGroupRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  companyId: z.string(),
  groupId: z.string(),
});

/** @internal */
export type RemoveCompanyFromGroupRequest$Outbound = {
  companyId: string;
  groupId: string;
};

/** @internal */
export const RemoveCompanyFromGroupRequest$outboundSchema: z.ZodType<
  RemoveCompanyFromGroupRequest$Outbound,
  z.ZodTypeDef,
  RemoveCompanyFromGroupRequest
> = z.object({
  companyId: z.string(),
  groupId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveCompanyFromGroupRequest$ {
  /** @deprecated use `RemoveCompanyFromGroupRequest$inboundSchema` instead. */
  export const inboundSchema = RemoveCompanyFromGroupRequest$inboundSchema;
  /** @deprecated use `RemoveCompanyFromGroupRequest$outboundSchema` instead. */
  export const outboundSchema = RemoveCompanyFromGroupRequest$outboundSchema;
  /** @deprecated use `RemoveCompanyFromGroupRequest$Outbound` instead. */
  export type Outbound = RemoveCompanyFromGroupRequest$Outbound;
}
