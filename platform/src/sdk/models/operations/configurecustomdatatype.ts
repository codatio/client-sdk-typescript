/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type ConfigureCustomDataTypeRequest = {
    /**
     * A unique 4-letter key to represent a platform in each integration.
     */
    platformKey: string;
    /**
     * Unique identifier for a custom data type.
     */
    customDataIdentifier: string;
    /**
     * Custom data type configuration for the specified platform.
     */
    customDataTypeConfiguration?: shared.CustomDataTypeConfiguration | undefined;
};

/** @internal */
export const ConfigureCustomDataTypeRequest$inboundSchema: z.ZodType<
    ConfigureCustomDataTypeRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        platformKey: z.string(),
        customDataIdentifier: z.string(),
        CustomDataTypeConfiguration: shared.CustomDataTypeConfiguration$inboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            CustomDataTypeConfiguration: "customDataTypeConfiguration",
        });
    });

/** @internal */
export type ConfigureCustomDataTypeRequest$Outbound = {
    platformKey: string;
    customDataIdentifier: string;
    CustomDataTypeConfiguration?: shared.CustomDataTypeConfiguration$Outbound | undefined;
};

/** @internal */
export const ConfigureCustomDataTypeRequest$outboundSchema: z.ZodType<
    ConfigureCustomDataTypeRequest$Outbound,
    z.ZodTypeDef,
    ConfigureCustomDataTypeRequest
> = z
    .object({
        platformKey: z.string(),
        customDataIdentifier: z.string(),
        customDataTypeConfiguration: shared.CustomDataTypeConfiguration$outboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            customDataTypeConfiguration: "CustomDataTypeConfiguration",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConfigureCustomDataTypeRequest$ {
    /** @deprecated use `ConfigureCustomDataTypeRequest$inboundSchema` instead. */
    export const inboundSchema = ConfigureCustomDataTypeRequest$inboundSchema;
    /** @deprecated use `ConfigureCustomDataTypeRequest$outboundSchema` instead. */
    export const outboundSchema = ConfigureCustomDataTypeRequest$outboundSchema;
    /** @deprecated use `ConfigureCustomDataTypeRequest$Outbound` instead. */
    export type Outbound = ConfigureCustomDataTypeRequest$Outbound;
}
