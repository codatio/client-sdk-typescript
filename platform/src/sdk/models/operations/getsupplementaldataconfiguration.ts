/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * Data types that support supplemental data
 */
export const PathParamDataType = {
    ChartOfAccounts: "chartOfAccounts",
    Bills: "bills",
    Company: "company",
    CreditNotes: "creditNotes",
    Customers: "customers",
    Invoices: "invoices",
    Items: "items",
    JournalEntries: "journalEntries",
    Suppliers: "suppliers",
    TaxRates: "taxRates",
    CommerceCompanyInfo: "commerce-companyInfo",
    CommerceCustomers: "commerce-customers",
    CommerceDisputes: "commerce-disputes",
    CommerceLocations: "commerce-locations",
    CommerceOrders: "commerce-orders",
    CommercePayments: "commerce-payments",
    CommercePaymentMethods: "commerce-paymentMethods",
    CommerceProducts: "commerce-products",
    CommerceProductCategories: "commerce-productCategories",
    CommerceTaxComponents: "commerce-taxComponents",
    CommerceTransactions: "commerce-transactions",
} as const;
/**
 * Data types that support supplemental data
 */
export type PathParamDataType = ClosedEnum<typeof PathParamDataType>;

export type GetSupplementalDataConfigurationRequest = {
    /**
     * A unique 4-letter key to represent a platform in each integration.
     */
    platformKey: string;
    /**
     * Supported supplemental data data type.
     */
    dataType: PathParamDataType;
};

/** @internal */
export const PathParamDataType$inboundSchema: z.ZodNativeEnum<typeof PathParamDataType> =
    z.nativeEnum(PathParamDataType);

/** @internal */
export const PathParamDataType$outboundSchema: z.ZodNativeEnum<typeof PathParamDataType> =
    PathParamDataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PathParamDataType$ {
    /** @deprecated use `PathParamDataType$inboundSchema` instead. */
    export const inboundSchema = PathParamDataType$inboundSchema;
    /** @deprecated use `PathParamDataType$outboundSchema` instead. */
    export const outboundSchema = PathParamDataType$outboundSchema;
}

/** @internal */
export const GetSupplementalDataConfigurationRequest$inboundSchema: z.ZodType<
    GetSupplementalDataConfigurationRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    platformKey: z.string(),
    dataType: PathParamDataType$inboundSchema,
});

/** @internal */
export type GetSupplementalDataConfigurationRequest$Outbound = {
    platformKey: string;
    dataType: string;
};

/** @internal */
export const GetSupplementalDataConfigurationRequest$outboundSchema: z.ZodType<
    GetSupplementalDataConfigurationRequest$Outbound,
    z.ZodTypeDef,
    GetSupplementalDataConfigurationRequest
> = z.object({
    platformKey: z.string(),
    dataType: PathParamDataType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetSupplementalDataConfigurationRequest$ {
    /** @deprecated use `GetSupplementalDataConfigurationRequest$inboundSchema` instead. */
    export const inboundSchema = GetSupplementalDataConfigurationRequest$inboundSchema;
    /** @deprecated use `GetSupplementalDataConfigurationRequest$outboundSchema` instead. */
    export const outboundSchema = GetSupplementalDataConfigurationRequest$outboundSchema;
    /** @deprecated use `GetSupplementalDataConfigurationRequest$Outbound` instead. */
    export type Outbound = GetSupplementalDataConfigurationRequest$Outbound;
}
