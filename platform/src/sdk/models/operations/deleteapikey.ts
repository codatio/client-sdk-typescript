/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type DeleteApiKeyRequest = {
    /**
     * Unique identifier for api key.
     */
    apiKeyId: string;
};

/** @internal */
export const DeleteApiKeyRequest$inboundSchema: z.ZodType<
    DeleteApiKeyRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    apiKeyId: z.string(),
});

/** @internal */
export type DeleteApiKeyRequest$Outbound = {
    apiKeyId: string;
};

/** @internal */
export const DeleteApiKeyRequest$outboundSchema: z.ZodType<
    DeleteApiKeyRequest$Outbound,
    z.ZodTypeDef,
    DeleteApiKeyRequest
> = z.object({
    apiKeyId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiKeyRequest$ {
    /** @deprecated use `DeleteApiKeyRequest$inboundSchema` instead. */
    export const inboundSchema = DeleteApiKeyRequest$inboundSchema;
    /** @deprecated use `DeleteApiKeyRequest$outboundSchema` instead. */
    export const outboundSchema = DeleteApiKeyRequest$outboundSchema;
    /** @deprecated use `DeleteApiKeyRequest$Outbound` instead. */
    export type Outbound = DeleteApiKeyRequest$Outbound;
}
