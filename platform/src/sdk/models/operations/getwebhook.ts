/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetWebhookRequest = {
    /**
     * Unique ID of the webhook or rule.
     */
    ruleId: string;
};

/** @internal */
export const GetWebhookRequest$inboundSchema: z.ZodType<GetWebhookRequest, z.ZodTypeDef, unknown> =
    z.object({
        ruleId: z.string(),
    });

/** @internal */
export type GetWebhookRequest$Outbound = {
    ruleId: string;
};

/** @internal */
export const GetWebhookRequest$outboundSchema: z.ZodType<
    GetWebhookRequest$Outbound,
    z.ZodTypeDef,
    GetWebhookRequest
> = z.object({
    ruleId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWebhookRequest$ {
    /** @deprecated use `GetWebhookRequest$inboundSchema` instead. */
    export const inboundSchema = GetWebhookRequest$inboundSchema;
    /** @deprecated use `GetWebhookRequest$outboundSchema` instead. */
    export const outboundSchema = GetWebhookRequest$outboundSchema;
    /** @deprecated use `GetWebhookRequest$Outbound` instead. */
    export type Outbound = GetWebhookRequest$Outbound;
}
