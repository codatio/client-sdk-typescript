/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type ListCustomDataTypeRecordsRequest = {
    /**
     * Unique identifier for a company.
     */
    companyId: string;
    /**
     * Unique identifier for a connection.
     */
    connectionId: string;
    /**
     * Unique identifier for a custom data type.
     */
    customDataIdentifier: string;
    /**
     * Page number. [Read more](https://docs.codat.io/using-the-api/paging).
     */
    page?: number | undefined;
    /**
     * Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).
     */
    pageSize?: number | undefined;
};

/** @internal */
export namespace ListCustomDataTypeRecordsRequest$ {
    export const inboundSchema: z.ZodType<ListCustomDataTypeRecordsRequest, z.ZodTypeDef, unknown> =
        z.object({
            companyId: z.string(),
            connectionId: z.string(),
            customDataIdentifier: z.string(),
            page: z.number().int().default(1),
            pageSize: z.number().int().default(100),
        });

    export type Outbound = {
        companyId: string;
        connectionId: string;
        customDataIdentifier: string;
        page: number;
        pageSize: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ListCustomDataTypeRecordsRequest
    > = z.object({
        companyId: z.string(),
        connectionId: z.string(),
        customDataIdentifier: z.string(),
        page: z.number().int().default(1),
        pageSize: z.number().int().default(100),
    });
}
