/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SyncSetting, SyncSetting$ } from "./syncsetting.js";
import * as z from "zod";

/**
 * Include a `syncSetting` object for each data type.
 *
 * @remarks
 * `syncFromWindow`, `syncFromUTC` & `monthsToSync` only need to be included if you wish to set a value for them.
 */
export type UpdateProfileSyncSettingsRequestBody = {
    /**
     * Unique identifier for your client in Codat.
     */
    clientId: string;
    settings: Array<SyncSetting>;
    /**
     * Set to `True` if you want to override default [sync settings](https://docs.codat.io/knowledge-base/advanced-sync-settings).
     */
    overridesDefaults?: boolean | undefined;
};

/** @internal */
export namespace UpdateProfileSyncSettingsRequestBody$ {
    export const inboundSchema: z.ZodType<
        UpdateProfileSyncSettingsRequestBody,
        z.ZodTypeDef,
        unknown
    > = z.object({
        clientId: z.string(),
        settings: z.array(SyncSetting$.inboundSchema),
        overridesDefaults: z.boolean().default(true),
    });

    export type Outbound = {
        clientId: string;
        settings: Array<SyncSetting$.Outbound>;
        overridesDefaults: boolean;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UpdateProfileSyncSettingsRequestBody
    > = z.object({
        clientId: z.string(),
        settings: z.array(SyncSetting$.outboundSchema),
        overridesDefaults: z.boolean().default(true),
    });
}
