/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../lib/primitives.js";
import {
    CustomDataTypeConfiguration,
    CustomDataTypeConfiguration$,
} from "./customdatatypeconfiguration.js";
import * as z from "zod";

export type ConfigureCustomDataTypeRequest = {
    /**
     * A unique 4-letter key to represent a platform in each integration.
     */
    platformKey: string;
    /**
     * Unique identifier for a custom data type.
     */
    customDataIdentifier: string;
    /**
     * Custom data type configuration for the specified platform.
     */
    customDataTypeConfiguration?: CustomDataTypeConfiguration | undefined;
};

/** @internal */
export namespace ConfigureCustomDataTypeRequest$ {
    export const inboundSchema: z.ZodType<ConfigureCustomDataTypeRequest, z.ZodTypeDef, unknown> = z
        .object({
            platformKey: z.string(),
            customDataIdentifier: z.string(),
            CustomDataTypeConfiguration: CustomDataTypeConfiguration$.inboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                CustomDataTypeConfiguration: "customDataTypeConfiguration",
            });
        });

    export type Outbound = {
        platformKey: string;
        customDataIdentifier: string;
        CustomDataTypeConfiguration?: CustomDataTypeConfiguration$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ConfigureCustomDataTypeRequest> =
        z
            .object({
                platformKey: z.string(),
                customDataIdentifier: z.string(),
                customDataTypeConfiguration: CustomDataTypeConfiguration$.outboundSchema.optional(),
            })
            .transform((v) => {
                return remap$(v, {
                    customDataTypeConfiguration: "CustomDataTypeConfiguration",
                });
            });
}
