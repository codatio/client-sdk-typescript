/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { GroupRef, GroupRef$ } from "./groupref.js";
import * as z from "zod";

export type CompanyRequestBody = {
    /**
     * Name of company being connected.
     */
    name: string;
    /**
     * Additional information about the company. This can be used to store foreign IDs, references, etc.
     */
    description?: string | undefined;
    /**
     * Reference to the groups that the company is assigned to.
     */
    groups?: Array<GroupRef> | undefined;
};

/** @internal */
export namespace CompanyRequestBody$ {
    export const inboundSchema: z.ZodType<CompanyRequestBody, z.ZodTypeDef, unknown> = z.object({
        name: z.string(),
        description: z.string().optional(),
        groups: z.array(GroupRef$.inboundSchema).optional(),
    });

    export type Outbound = {
        name: string;
        description?: string | undefined;
        groups?: Array<GroupRef$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CompanyRequestBody> = z.object({
        name: z.string(),
        description: z.string().optional(),
        groups: z.array(GroupRef$.outboundSchema).optional(),
    });
}
