/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { PushChangeType, PushChangeType$ } from "./pushchangetype.js";
import { PushOperationRef, PushOperationRef$ } from "./pushoperationref.js";
import * as z from "zod";

export type PushOperationChange = {
    /**
     * Type of change being applied to record in third party platform.
     */
    type?: PushChangeType | undefined;
    recordRef?: PushOperationRef | undefined;
    /**
     * Unique identifier for the attachment created otherwise null.
     */
    attachmentId?: string | null | undefined;
};

/** @internal */
export namespace PushOperationChange$ {
    export const inboundSchema: z.ZodType<PushOperationChange, z.ZodTypeDef, unknown> = z.object({
        type: PushChangeType$.inboundSchema.optional(),
        recordRef: PushOperationRef$.inboundSchema.optional(),
        attachmentId: z.nullable(z.string()).optional(),
    });

    export type Outbound = {
        type?: string | undefined;
        recordRef?: PushOperationRef$.Outbound | undefined;
        attachmentId?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PushOperationChange> = z.object({
        type: PushChangeType$.outboundSchema.optional(),
        recordRef: PushOperationRef$.outboundSchema.optional(),
        attachmentId: z.nullable(z.string()).optional(),
    });
}
