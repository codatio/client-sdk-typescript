/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../lib/primitives.js";
import { CompanyRequestBody, CompanyRequestBody$ } from "./companyrequestbody.js";
import * as z from "zod";

export type UpdateCompanyRequest = {
    /**
     * Unique identifier for a company.
     */
    companyId: string;
    companyRequestBody?: CompanyRequestBody | undefined;
};

/** @internal */
export namespace UpdateCompanyRequest$ {
    export const inboundSchema: z.ZodType<UpdateCompanyRequest, z.ZodTypeDef, unknown> = z
        .object({
            companyId: z.string(),
            CompanyRequestBody: CompanyRequestBody$.inboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                CompanyRequestBody: "companyRequestBody",
            });
        });

    export type Outbound = {
        companyId: string;
        CompanyRequestBody?: CompanyRequestBody$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateCompanyRequest> = z
        .object({
            companyId: z.string(),
            companyRequestBody: CompanyRequestBody$.outboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                companyRequestBody: "CompanyRequestBody",
            });
        });
}
