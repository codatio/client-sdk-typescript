/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { BrandingButton, BrandingButton$ } from "./brandingbutton.js";
import { BrandingLogo, BrandingLogo$ } from "./brandinglogo.js";
import * as z from "zod";

export type Branding = {
    /**
     * Logo branding references.
     */
    logo?: BrandingLogo | undefined;
    /**
     * Button branding references.
     */
    button?: BrandingButton | undefined;
    /**
     * A source-specific ID used to distinguish between different sources originating from the same data connection. In general, a data connection is a single data source. However, for TrueLayer, `sourceId` is associated with a specific bank and has a many-to-one relationship with the `integrationId`.
     */
    sourceId?: string | undefined;
};

/** @internal */
export namespace Branding$ {
    export const inboundSchema: z.ZodType<Branding, z.ZodTypeDef, unknown> = z.object({
        logo: BrandingLogo$.inboundSchema.optional(),
        button: BrandingButton$.inboundSchema.optional(),
        sourceId: z.string().optional(),
    });

    export type Outbound = {
        logo?: BrandingLogo$.Outbound | undefined;
        button?: BrandingButton$.Outbound | undefined;
        sourceId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Branding> = z.object({
        logo: BrandingLogo$.outboundSchema.optional(),
        button: BrandingButton$.outboundSchema.optional(),
        sourceId: z.string().optional(),
    });
}
