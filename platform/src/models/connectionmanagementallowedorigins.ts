/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type ConnectionManagementAllowedOrigins = {
    /**
     * An array of allowed origins (i.e. your domains) to permit cross-origin resource sharing ([CORS](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing)).n resource sharing ([CORS](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing)).
     */
    allowedOrigins?: Array<string> | undefined;
};

/** @internal */
export namespace ConnectionManagementAllowedOrigins$ {
    export const inboundSchema: z.ZodType<
        ConnectionManagementAllowedOrigins,
        z.ZodTypeDef,
        unknown
    > = z.object({
        allowedOrigins: z.array(z.string()).optional(),
    });

    export type Outbound = {
        allowedOrigins?: Array<string> | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ConnectionManagementAllowedOrigins
    > = z.object({
        allowedOrigins: z.array(z.string()).optional(),
    });
}
