/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ErrorMessage, ErrorMessage$ } from "./errormessage";
import { PullOperation, PullOperation$ } from "./pulloperation";
import * as z from "zod";

export type RefreshCustomDataTypeRequest = {
    /**
     * Unique identifier for a company.
     */
    companyId: string;
    /**
     * Unique identifier for a connection.
     */
    connectionId: string;
    /**
     * Unique identifier for a custom data type.
     */
    customDataIdentifier: string;
};

export type RefreshCustomDataTypeResponse = ErrorMessage | PullOperation;

/** @internal */
export namespace RefreshCustomDataTypeRequest$ {
    export const inboundSchema: z.ZodType<RefreshCustomDataTypeRequest, z.ZodTypeDef, unknown> = z
        .object({
            companyId: z.string(),
            connectionId: z.string(),
            customDataIdentifier: z.string(),
        })
        .transform((v) => {
            return {
                companyId: v.companyId,
                connectionId: v.connectionId,
                customDataIdentifier: v.customDataIdentifier,
            };
        });

    export type Outbound = {
        companyId: string;
        connectionId: string;
        customDataIdentifier: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RefreshCustomDataTypeRequest> = z
        .object({
            companyId: z.string(),
            connectionId: z.string(),
            customDataIdentifier: z.string(),
        })
        .transform((v) => {
            return {
                companyId: v.companyId,
                connectionId: v.connectionId,
                customDataIdentifier: v.customDataIdentifier,
            };
        });
}

/** @internal */
export namespace RefreshCustomDataTypeResponse$ {
    export const inboundSchema: z.ZodType<RefreshCustomDataTypeResponse, z.ZodTypeDef, unknown> =
        z.union([ErrorMessage$.inboundSchema, PullOperation$.inboundSchema]);

    export type Outbound = ErrorMessage$.Outbound | PullOperation$.Outbound;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RefreshCustomDataTypeResponse> =
        z.union([ErrorMessage$.outboundSchema, PullOperation$.outboundSchema]);
}
