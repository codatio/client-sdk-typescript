/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { HalRef, HalRef$ } from "./halref.js";
import * as z from "zod";

export type Links = {
    self: HalRef;
    current: HalRef;
    next?: HalRef | undefined;
    previous?: HalRef | undefined;
};

/** @internal */
export namespace Links$ {
    export const inboundSchema: z.ZodType<Links, z.ZodTypeDef, unknown> = z.object({
        self: HalRef$.inboundSchema,
        current: HalRef$.inboundSchema,
        next: HalRef$.inboundSchema.optional(),
        previous: HalRef$.inboundSchema.optional(),
    });

    export type Outbound = {
        self: HalRef$.Outbound;
        current: HalRef$.Outbound;
        next?: HalRef$.Outbound | undefined;
        previous?: HalRef$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Links> = z.object({
        self: HalRef$.outboundSchema,
        current: HalRef$.outboundSchema,
        next: HalRef$.outboundSchema.optional(),
        previous: HalRef$.outboundSchema.optional(),
    });
}
