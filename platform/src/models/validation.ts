/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ValidationItem, ValidationItem$ } from "./validationitem.js";
import * as z from "zod";

/**
 * A human-readable object describing validation decisions Codat has made when pushing data into the platform. If a push has failed because of validation errors, they will be detailed here.
 */
export type Validation = {
    errors?: Array<ValidationItem> | null | undefined;
    warnings?: Array<ValidationItem> | null | undefined;
};

/** @internal */
export namespace Validation$ {
    export const inboundSchema: z.ZodType<Validation, z.ZodTypeDef, unknown> = z.object({
        errors: z.nullable(z.array(ValidationItem$.inboundSchema)).optional(),
        warnings: z.nullable(z.array(ValidationItem$.inboundSchema)).optional(),
    });

    export type Outbound = {
        errors?: Array<ValidationItem$.Outbound> | null | undefined;
        warnings?: Array<ValidationItem$.Outbound> | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Validation> = z.object({
        errors: z.nullable(z.array(ValidationItem$.outboundSchema)).optional(),
        warnings: z.nullable(z.array(ValidationItem$.outboundSchema)).optional(),
    });
}
