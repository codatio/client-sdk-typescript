/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../lib/primitives.js";
import * as z from "zod";

export type Security = {
    authHeader: string;
};

/** @internal */
export namespace Security$ {
    export const inboundSchema: z.ZodType<Security, z.ZodTypeDef, unknown> = z
        .object({
            auth_header: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                auth_header: "authHeader",
            });
        });

    export type Outbound = {
        auth_header: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Security> = z
        .object({
            authHeader: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                authHeader: "auth_header",
            });
        });
}
