/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ErrorMessage, ErrorMessage$ } from "./errormessage";
import { PushOperation, PushOperation$ } from "./pushoperation";
import * as z from "zod";

export type GetPushOperationRequest = {
    /**
     * Unique identifier for a company.
     */
    companyId: string;
    /**
     * Push operation key.
     */
    pushOperationKey: string;
};

export type GetPushOperationResponse = ErrorMessage | PushOperation;

/** @internal */
export namespace GetPushOperationRequest$ {
    export const inboundSchema: z.ZodType<GetPushOperationRequest, z.ZodTypeDef, unknown> = z
        .object({
            companyId: z.string(),
            pushOperationKey: z.string(),
        })
        .transform((v) => {
            return {
                companyId: v.companyId,
                pushOperationKey: v.pushOperationKey,
            };
        });

    export type Outbound = {
        companyId: string;
        pushOperationKey: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetPushOperationRequest> = z
        .object({
            companyId: z.string(),
            pushOperationKey: z.string(),
        })
        .transform((v) => {
            return {
                companyId: v.companyId,
                pushOperationKey: v.pushOperationKey,
            };
        });
}

/** @internal */
export namespace GetPushOperationResponse$ {
    export const inboundSchema: z.ZodType<GetPushOperationResponse, z.ZodTypeDef, unknown> =
        z.union([ErrorMessage$.inboundSchema, PushOperation$.inboundSchema]);

    export type Outbound = ErrorMessage$.Outbound | PushOperation$.Outbound;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetPushOperationResponse> =
        z.union([ErrorMessage$.outboundSchema, PushOperation$.outboundSchema]);
}
