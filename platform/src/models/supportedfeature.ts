/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { FeatureState, FeatureState$ } from "./featurestate.js";
import { FeatureType, FeatureType$ } from "./featuretype.js";
import * as z from "zod";

export type SupportedFeature = {
    /**
     * The type of feature.
     */
    featureType: FeatureType;
    /**
     * The current release state of the feature.
     */
    featureState: FeatureState;
};

/** @internal */
export namespace SupportedFeature$ {
    export const inboundSchema: z.ZodType<SupportedFeature, z.ZodTypeDef, unknown> = z.object({
        featureType: FeatureType$.inboundSchema,
        featureState: FeatureState$.inboundSchema,
    });

    export type Outbound = {
        featureType: string;
        featureState: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SupportedFeature> = z.object({
        featureType: FeatureType$.outboundSchema,
        featureState: FeatureState$.outboundSchema,
    });
}
