/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../lib/primitives.js";
import { UpdateConnectionStatus, UpdateConnectionStatus$ } from "./updateconnectionstatus.js";
import * as z from "zod";

export type UnlinkConnectionRequest = {
    /**
     * Unique identifier for a company.
     */
    companyId: string;
    /**
     * Unique identifier for a connection.
     */
    connectionId: string;
    updateConnectionStatus?: UpdateConnectionStatus | undefined;
};

/** @internal */
export namespace UnlinkConnectionRequest$ {
    export const inboundSchema: z.ZodType<UnlinkConnectionRequest, z.ZodTypeDef, unknown> = z
        .object({
            companyId: z.string(),
            connectionId: z.string(),
            UpdateConnectionStatus: UpdateConnectionStatus$.inboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                UpdateConnectionStatus: "updateConnectionStatus",
            });
        });

    export type Outbound = {
        companyId: string;
        connectionId: string;
        UpdateConnectionStatus?: UpdateConnectionStatus$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UnlinkConnectionRequest> = z
        .object({
            companyId: z.string(),
            connectionId: z.string(),
            updateConnectionStatus: UpdateConnectionStatus$.outboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                updateConnectionStatus: "UpdateConnectionStatus",
            });
        });
}
