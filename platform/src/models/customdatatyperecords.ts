/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { CustomDataTypeRecord, CustomDataTypeRecord$ } from "./customdatatyperecord.js";
import * as z from "zod";

/**
 * Resulting records pulled from the source platform for a specific custom data type.
 */
export type CustomDataTypeRecords = {
    results?: Array<CustomDataTypeRecord> | undefined;
    /**
     * Current page number.
     */
    pageNumber?: number | undefined;
    /**
     * Number of items to return in results array.
     */
    pageSize?: number | undefined;
    /**
     * Total number of items.
     */
    totalResults?: number | undefined;
};

/** @internal */
export namespace CustomDataTypeRecords$ {
    export const inboundSchema: z.ZodType<CustomDataTypeRecords, z.ZodTypeDef, unknown> = z.object({
        results: z.array(CustomDataTypeRecord$.inboundSchema).optional(),
        pageNumber: z.number().int().optional(),
        pageSize: z.number().int().optional(),
        totalResults: z.number().int().optional(),
    });

    export type Outbound = {
        results?: Array<CustomDataTypeRecord$.Outbound> | undefined;
        pageNumber?: number | undefined;
        pageSize?: number | undefined;
        totalResults?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CustomDataTypeRecords> =
        z.object({
            results: z.array(CustomDataTypeRecord$.outboundSchema).optional(),
            pageNumber: z.number().int().optional(),
            pageSize: z.number().int().optional(),
            totalResults: z.number().int().optional(),
        });
}
