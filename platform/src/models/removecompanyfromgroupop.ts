/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type RemoveCompanyFromGroupRequest = {
    /**
     * Unique identifier for a company.
     */
    companyId: string;
    /**
     * Unique identifier for the group.
     */
    groupId: string;
};

/** @internal */
export namespace RemoveCompanyFromGroupRequest$ {
    export const inboundSchema: z.ZodType<RemoveCompanyFromGroupRequest, z.ZodTypeDef, unknown> = z
        .object({
            companyId: z.string(),
            groupId: z.string(),
        })
        .transform((v) => {
            return {
                companyId: v.companyId,
                groupId: v.groupId,
            };
        });

    export type Outbound = {
        companyId: string;
        groupId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RemoveCompanyFromGroupRequest> =
        z
            .object({
                companyId: z.string(),
                groupId: z.string(),
            })
            .transform((v) => {
                return {
                    companyId: v.companyId,
                    groupId: v.groupId,
                };
            });
}
