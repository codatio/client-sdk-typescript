/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { PropertieDataType, PropertieDataType$ } from "./propertiedatatype.js";
import { SupportedFeature, SupportedFeature$ } from "./supportedfeature.js";
import * as z from "zod";

/**
 * Describes support for a given datatype and associated operations
 */
export type DataTypeFeature = {
    /**
     * Available data types
     */
    dataType?: PropertieDataType | undefined;
    supportedFeatures: Array<SupportedFeature>;
};

/** @internal */
export namespace DataTypeFeature$ {
    export const inboundSchema: z.ZodType<DataTypeFeature, z.ZodTypeDef, unknown> = z.object({
        dataType: PropertieDataType$.inboundSchema.optional(),
        supportedFeatures: z.array(SupportedFeature$.inboundSchema),
    });

    export type Outbound = {
        dataType?: string | undefined;
        supportedFeatures: Array<SupportedFeature$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DataTypeFeature> = z.object({
        dataType: PropertieDataType$.outboundSchema.optional(),
        supportedFeatures: z.array(SupportedFeature$.outboundSchema),
    });
}
