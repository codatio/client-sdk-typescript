/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { PropertieDataType, PropertieDataType$ } from "./propertiedatatype.js";
import * as z from "zod";

export type DatasetStatusChangedErrorWebhookData = {
    /**
     * Available data types
     */
    dataType?: PropertieDataType | undefined;
    /**
     * The current status of the dataset's sync.
     */
    datasetStatus?: string | undefined;
    /**
     * Unique identifier for the dataset that completed its sync.
     */
    datasetId?: string | undefined;
};

/** @internal */
export namespace DatasetStatusChangedErrorWebhookData$ {
    export const inboundSchema: z.ZodType<
        DatasetStatusChangedErrorWebhookData,
        z.ZodTypeDef,
        unknown
    > = z.object({
        dataType: PropertieDataType$.inboundSchema.optional(),
        datasetStatus: z.string().optional(),
        datasetId: z.string().optional(),
    });

    export type Outbound = {
        dataType?: string | undefined;
        datasetStatus?: string | undefined;
        datasetId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        DatasetStatusChangedErrorWebhookData
    > = z.object({
        dataType: PropertieDataType$.outboundSchema.optional(),
        datasetStatus: z.string().optional(),
        datasetId: z.string().optional(),
    });
}
