/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { DataType, DataType$ } from "./datatype.js";
import * as z from "zod";

export type RefreshDataTypeRequest = {
    /**
     * Unique identifier for a company.
     */
    companyId: string;
    /**
     * The key of a Codat data type
     */
    dataType: DataType;
    /**
     * Optionally, provide a data connection id to only queue pull operations on that connection.
     */
    connectionId?: string | undefined;
};

/** @internal */
export namespace RefreshDataTypeRequest$ {
    export const inboundSchema: z.ZodType<RefreshDataTypeRequest, z.ZodTypeDef, unknown> = z.object(
        {
            companyId: z.string(),
            dataType: DataType$.inboundSchema,
            connectionId: z.string().optional(),
        }
    );

    export type Outbound = {
        companyId: string;
        dataType: string;
        connectionId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RefreshDataTypeRequest> =
        z.object({
            companyId: z.string(),
            dataType: DataType$.outboundSchema,
            connectionId: z.string().optional(),
        });
}
