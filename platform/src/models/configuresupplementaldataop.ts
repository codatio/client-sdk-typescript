/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../lib/primitives.js";
import { ClosedEnum } from "../types/enums.js";
import {
    SupplementalDataConfiguration,
    SupplementalDataConfiguration$,
} from "./supplementaldataconfiguration.js";
import * as z from "zod";

/**
 * Data types that support supplemental data
 */
export const PathParamDataType = {
    ChartOfAccounts: "chartOfAccounts",
    Bills: "bills",
    Company: "company",
    CreditNotes: "creditNotes",
    Customers: "customers",
    Invoices: "invoices",
    Items: "items",
    JournalEntries: "journalEntries",
    Suppliers: "suppliers",
    TaxRates: "taxRates",
    CommerceCompanyInfo: "commerce-companyInfo",
    CommerceCustomers: "commerce-customers",
    CommerceDisputes: "commerce-disputes",
    CommerceLocations: "commerce-locations",
    CommerceOrders: "commerce-orders",
    CommercePayments: "commerce-payments",
    CommercePaymentMethods: "commerce-paymentMethods",
    CommerceProducts: "commerce-products",
    CommerceProductCategories: "commerce-productCategories",
    CommerceTaxComponents: "commerce-taxComponents",
    CommerceTransactions: "commerce-transactions",
} as const;
/**
 * Data types that support supplemental data
 */
export type PathParamDataType = ClosedEnum<typeof PathParamDataType>;

export type ConfigureSupplementalDataRequest = {
    /**
     * A unique 4-letter key to represent a platform in each integration.
     */
    platformKey: string;
    /**
     * Supported supplemental data data type.
     */
    dataType: PathParamDataType;
    /**
     * The configuration for the specified platform and data type.
     */
    supplementalDataConfiguration?: SupplementalDataConfiguration | undefined;
};

/** @internal */
export namespace PathParamDataType$ {
    export const inboundSchema: z.ZodNativeEnum<typeof PathParamDataType> =
        z.nativeEnum(PathParamDataType);
    export const outboundSchema: z.ZodNativeEnum<typeof PathParamDataType> = inboundSchema;
}

/** @internal */
export namespace ConfigureSupplementalDataRequest$ {
    export const inboundSchema: z.ZodType<ConfigureSupplementalDataRequest, z.ZodTypeDef, unknown> =
        z
            .object({
                platformKey: z.string(),
                dataType: PathParamDataType$.inboundSchema,
                SupplementalDataConfiguration:
                    SupplementalDataConfiguration$.inboundSchema.optional(),
            })
            .transform((v) => {
                return remap$(v, {
                    SupplementalDataConfiguration: "supplementalDataConfiguration",
                });
            });

    export type Outbound = {
        platformKey: string;
        dataType: string;
        SupplementalDataConfiguration?: SupplementalDataConfiguration$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ConfigureSupplementalDataRequest
    > = z
        .object({
            platformKey: z.string(),
            dataType: PathParamDataType$.outboundSchema,
            supplementalDataConfiguration: SupplementalDataConfiguration$.outboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                supplementalDataConfiguration: "SupplementalDataConfiguration",
            });
        });
}
