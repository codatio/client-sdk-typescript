/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { PropertieDataType, PropertieDataType$ } from "./propertiedatatype.js";
import { PushOperationStatus, PushOperationStatus$ } from "./pushoperationstatus.js";
import * as z from "zod";

export type PushOperationStatusChangedWebhookData = {
    /**
     * Available data types
     */
    dataType?: PropertieDataType | undefined;
    /**
     * The current status of the push operation.
     */
    status?: PushOperationStatus | undefined;
    /**
     * A unique identifier generated by Codat to represent this single push operation. This identifier can be used to track the status of the push, and should be persisted.
     */
    pushOperationKey?: string | undefined;
};

/** @internal */
export namespace PushOperationStatusChangedWebhookData$ {
    export const inboundSchema: z.ZodType<
        PushOperationStatusChangedWebhookData,
        z.ZodTypeDef,
        unknown
    > = z.object({
        dataType: PropertieDataType$.inboundSchema.optional(),
        status: PushOperationStatus$.inboundSchema.optional(),
        pushOperationKey: z.string().optional(),
    });

    export type Outbound = {
        dataType?: string | undefined;
        status?: string | undefined;
        pushOperationKey?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PushOperationStatusChangedWebhookData
    > = z.object({
        dataType: PropertieDataType$.outboundSchema.optional(),
        status: PushOperationStatus$.outboundSchema.optional(),
        pushOperationKey: z.string().optional(),
    });
}
