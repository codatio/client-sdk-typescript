/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SDKOptions, serverURLFromOptions } from "../lib/config";
import { HTTPClient } from "../lib/http";
import { ClientSDK } from "../lib/sdks";
import { Accounts } from "./accounts";
import { Companies } from "./companies";
import { CompanyInfo } from "./companyinfo";
import { Connections } from "./connections";
import { JournalEntries } from "./journalentries";
import { Journals } from "./journals";
import { ManageData } from "./managedata";
import { TrackingCategories } from "./trackingcategories";

export class CodatSyncPayroll extends ClientSDK {
    private readonly options$: SDKOptions;

    constructor(options: SDKOptions = {}) {
        super({
            client: options.httpClient || new HTTPClient(),
            baseURL: serverURLFromOptions(options),
        });

        this.options$ = options;
        void this.options$;
    }

    private _companies?: Companies;
    get companies() {
        return (this._companies ??= new Companies(this.options$));
    }

    private _connections?: Connections;
    get connections() {
        return (this._connections ??= new Connections(this.options$));
    }

    private _accounts?: Accounts;
    get accounts() {
        return (this._accounts ??= new Accounts(this.options$));
    }

    private _journalEntries?: JournalEntries;
    get journalEntries() {
        return (this._journalEntries ??= new JournalEntries(this.options$));
    }

    private _journals?: Journals;
    get journals() {
        return (this._journals ??= new Journals(this.options$));
    }

    private _manageData?: ManageData;
    get manageData() {
        return (this._manageData ??= new ManageData(this.options$));
    }

    private _companyInfo?: CompanyInfo;
    get companyInfo() {
        return (this._companyInfo ??= new CompanyInfo(this.options$));
    }

    private _trackingCategories?: TrackingCategories;
    get trackingCategories() {
        return (this._trackingCategories ??= new TrackingCategories(this.options$));
    }
}
