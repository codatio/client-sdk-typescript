/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Supplemental data is additional data you can include in our standard data types.
 *
 * @remarks
 *
 * It is referenced as a configured dynamic key value pair that is unique to the accounting platform. [Learn more](https://docs.codat.io/using-the-api/supplemental-data/overview) about supplemental data.
 */
export type SupplementalData = {
    content?: { [k: string]: { [k: string]: any } } | null | undefined;
};

/** @internal */
export const SupplementalData$inboundSchema: z.ZodType<SupplementalData, z.ZodTypeDef, unknown> =
    z.object({
        content: z.nullable(z.record(z.record(z.any()))).optional(),
    });

/** @internal */
export type SupplementalData$Outbound = {
    content?: { [k: string]: { [k: string]: any } } | null | undefined;
};

/** @internal */
export const SupplementalData$outboundSchema: z.ZodType<
    SupplementalData$Outbound,
    z.ZodTypeDef,
    SupplementalData
> = z.object({
    content: z.nullable(z.record(z.record(z.any()))).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SupplementalData$ {
    /** @deprecated use `SupplementalData$inboundSchema` instead. */
    export const inboundSchema = SupplementalData$inboundSchema;
    /** @deprecated use `SupplementalData$outboundSchema` instead. */
    export const outboundSchema = SupplementalData$outboundSchema;
    /** @deprecated use `SupplementalData$Outbound` instead. */
    export type Outbound = SupplementalData$Outbound;
}
