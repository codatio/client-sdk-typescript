/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

/**
 * Supplemental data is additional data you can include in our standard data types.
 *
 * @remarks
 *
 * It is referenced as a configured dynamic key value pair that is unique to the accounting platform. [Learn more](https://docs.codat.io/using-the-api/supplemental-data/overview) about supplemental data.
 */
export type SupplementalData = {
    content?: Record<string, Record<string, any>> | null | undefined;
};

/** @internal */
export namespace SupplementalData$ {
    export type Inbound = {
        content?: Record<string, Record<string, any>> | null | undefined;
    };

    export const inboundSchema: z.ZodType<SupplementalData, z.ZodTypeDef, Inbound> = z
        .object({
            content: z.nullable(z.record(z.record(z.any()))).optional(),
        })
        .transform((v) => {
            return {
                ...(v.content === undefined ? null : { content: v.content }),
            };
        });

    export type Outbound = {
        content?: Record<string, Record<string, any>> | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SupplementalData> = z
        .object({
            content: z.nullable(z.record(z.record(z.any()))).optional(),
        })
        .transform((v) => {
            return {
                ...(v.content === undefined ? null : { content: v.content }),
            };
        });
}
