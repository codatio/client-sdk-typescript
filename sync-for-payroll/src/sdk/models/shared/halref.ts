/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type HalRef = {
    /**
     * Uri hypertext reference.
     */
    href?: string | undefined;
};

/** @internal */
export namespace HalRef$ {
    export type Inbound = {
        href?: string | undefined;
    };

    export const inboundSchema: z.ZodType<HalRef, z.ZodTypeDef, Inbound> = z
        .object({
            href: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.href === undefined ? null : { href: v.href }),
            };
        });

    export type Outbound = {
        href?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, HalRef> = z
        .object({
            href: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.href === undefined ? null : { href: v.href }),
            };
        });
}
