/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type Metadata = {
    /**
     * Indicates whether the record has been deleted in the third-party system this record originated from.
     */
    isDeleted?: boolean | null | undefined;
};

/** @internal */
export namespace Metadata$ {
    export type Inbound = {
        isDeleted?: boolean | null | undefined;
    };

    export const inboundSchema: z.ZodType<Metadata, z.ZodTypeDef, Inbound> = z
        .object({
            isDeleted: z.nullable(z.boolean()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.isDeleted === undefined ? null : { isDeleted: v.isDeleted }),
            };
        });

    export type Outbound = {
        isDeleted?: boolean | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Metadata> = z
        .object({
            isDeleted: z.nullable(z.boolean()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.isDeleted === undefined ? null : { isDeleted: v.isDeleted }),
            };
        });
}
