/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type Items = {
    /**
     * Unique identifier for the group.
     */
    id?: string | undefined;
};

/** @internal */
export const Items$inboundSchema: z.ZodType<Items, z.ZodTypeDef, unknown> = z.object({
    id: z.string().optional(),
});

/** @internal */
export type Items$Outbound = {
    id?: string | undefined;
};

/** @internal */
export const Items$outboundSchema: z.ZodType<Items$Outbound, z.ZodTypeDef, Items> = z.object({
    id: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Items$ {
    /** @deprecated use `Items$inboundSchema` instead. */
    export const inboundSchema = Items$inboundSchema;
    /** @deprecated use `Items$outboundSchema` instead. */
    export const outboundSchema = Items$outboundSchema;
    /** @deprecated use `Items$Outbound` instead. */
    export type Outbound = Items$Outbound;
}
