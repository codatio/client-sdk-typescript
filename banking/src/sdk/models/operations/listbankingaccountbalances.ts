/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ListBankingAccountBalancesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=companyId",
  })
  companyId: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=connectionId",
  })
  connectionId: string;

  /**
   * Field to order results by. [Read more](https://docs.codat.io/using-the-api/ordering-results).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=orderBy",
  })
  orderBy?: string;

  /**
   * Page number. [Read more](https://docs.codat.io/using-the-api/paging).
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page: number;

  /**
   * Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pageSize",
  })
  pageSize?: number;

  /**
   * Codat query string. [Read more](https://docs.codat.io/using-the-api/querying).
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=query" })
  query?: string;
}

export class ListBankingAccountBalances200ApplicationJSONLinksHypertextReference extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;
}

export class ListBankingAccountBalances200ApplicationJSONLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "current" })
  @Type(
    () => ListBankingAccountBalances200ApplicationJSONLinksHypertextReference
  )
  current: ListBankingAccountBalances200ApplicationJSONLinksHypertextReference;

  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  @Type(
    () => ListBankingAccountBalances200ApplicationJSONLinksHypertextReference
  )
  next?: ListBankingAccountBalances200ApplicationJSONLinksHypertextReference;

  @SpeakeasyMetadata()
  @Expose({ name: "previous" })
  @Type(
    () => ListBankingAccountBalances200ApplicationJSONLinksHypertextReference
  )
  previous?: ListBankingAccountBalances200ApplicationJSONLinksHypertextReference;

  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  @Type(
    () => ListBankingAccountBalances200ApplicationJSONLinksHypertextReference
  )
  self: ListBankingAccountBalances200ApplicationJSONLinksHypertextReference;
}

/**
 * An object containing bank balance data.
 */
export class ListBankingAccountBalances200ApplicationJSONSourceModifiedDateBalance extends SpeakeasyBase {
  /**
   * The funds available to withdraw from the bank account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "available" })
  available?: number;

  /**
   * The funds in or owed by the bank account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "current" })
  current: number;

  /**
   * The credit limit or overdraft limit of the bank account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit?: number;
}

/**
 * The Banking Account Balances data type provides a list of balances for a bank account including end-of-day batch balance or running balances per transaction.
 *
 * @remarks
 *
 * Responses are paged, so you should provide `page` and `pageSize` query parameters in your request.
 *
 * > **How often should I pull Account Balances?**
 * >
 * > Because these balances are closing balances, we recommend you pull Account Balance no more frequently than daily. If you require a live intraday balance, this can be found for each account on the [Account](https://docs.codat.io/banking-api#/schemas/Account) data type.
 * >
 * > Whilst you can choose to sync hourly, this may incur usage charges from Plaid or TrueLayer.
 */
export class ListBankingAccountBalances200ApplicationJSONSourceModifiedDate extends SpeakeasyBase {
  /**
   * The unique identifier of the account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId: string;

  /**
   * An object containing bank balance data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "balance" })
  @Type(
    () => ListBankingAccountBalances200ApplicationJSONSourceModifiedDateBalance
  )
  balance: ListBankingAccountBalances200ApplicationJSONSourceModifiedDateBalance;

  /**
   * Date of the balance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  date: string;

  /**
   * The date on which this record was last modified in Codat.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modifiedDate" })
  modifiedDate?: string;

  /**
   * The date on which this record was last modified in the originating system
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceModifiedDate" })
  sourceModifiedDate?: string;
}

/**
 * Success
 */
export class ListBankingAccountBalances200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => ListBankingAccountBalances200ApplicationJSONLinks)
  links: ListBankingAccountBalances200ApplicationJSONLinks;

  @SpeakeasyMetadata()
  @Expose({ name: "pageNumber" })
  pageNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "pageSize" })
  pageSize: number;

  /**
   * The Banking Account Balances data type provides a list of balances for a bank account including end-of-day batch balance or running balances per transaction.
   *
   * @remarks
   *
   * Responses are paged, so you should provide `page` and `pageSize` query parameters in your request.
   *
   * > **How often should I pull Account Balances?**
   * >
   * > Because these balances are closing balances, we recommend you pull Account Balance no more frequently than daily. If you require a live intraday balance, this can be found for each account on the [Account](https://docs.codat.io/banking-api#/schemas/Account) data type.
   * >
   * > Whilst you can choose to sync hourly, this may incur usage charges from Plaid or TrueLayer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "results" })
  @Type(() => ListBankingAccountBalances200ApplicationJSONSourceModifiedDate)
  results?: ListBankingAccountBalances200ApplicationJSONSourceModifiedDate;

  @SpeakeasyMetadata()
  @Expose({ name: "totalResults" })
  totalResults: number;
}

export class ListBankingAccountBalancesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  listBankingAccountBalances200ApplicationJSONObject?: ListBankingAccountBalances200ApplicationJSON;
}
