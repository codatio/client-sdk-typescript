/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ListBankingAccountsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=companyId",
  })
  companyId: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=connectionId",
  })
  connectionId: string;

  /**
   * Field to order results by. [Read more](https://docs.codat.io/using-the-api/ordering-results).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=orderBy",
  })
  orderBy?: string;

  /**
   * Page number. [Read more](https://docs.codat.io/using-the-api/paging).
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page: number;

  /**
   * Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pageSize",
  })
  pageSize?: number;

  /**
   * Codat query string. [Read more](https://docs.codat.io/using-the-api/querying).
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=query" })
  query?: string;
}

export class ListBankingAccountsLinksLinksHypertextReference extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;
}

export class ListBankingAccountsLinksLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "current" })
  @Type(() => ListBankingAccountsLinksLinksHypertextReference)
  current: ListBankingAccountsLinksLinksHypertextReference;

  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  @Type(() => ListBankingAccountsLinksLinksHypertextReference)
  next?: ListBankingAccountsLinksLinksHypertextReference;

  @SpeakeasyMetadata()
  @Expose({ name: "previous" })
  @Type(() => ListBankingAccountsLinksLinksHypertextReference)
  previous?: ListBankingAccountsLinksLinksHypertextReference;

  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  @Type(() => ListBankingAccountsLinksLinksHypertextReference)
  self: ListBankingAccountsLinksLinksHypertextReference;
}

/**
 * An object containing bank balance data.
 */
export class ListBankingAccountsLinksSourceModifiedDateAccountBalanceAmounts extends SpeakeasyBase {
  /**
   * The balance available in the account, including any pending transactions. This doesn't include additional funds available from any overdrafts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "available" })
  available?: number;

  /**
   * The balance of the account only including cleared transactions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "current" })
  current?: number;

  /**
   * The minimum allowed balance for the account. For example, a $100.00 overdraft would show as a limit of -100.00
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit?: number;
}

/**
 * Type of account
 */
export enum ListBankingAccountsLinksSourceModifiedDateAccountIdentifiersTypeEnum {
  Account = "Account",
  Card = "Card",
  Credit = "Credit",
  Depository = "Depository",
  Investment = "Investment",
  Loan = "Loan",
  Other = "Other",
}

/**
 * An object containing bank account identification information.
 */
export class ListBankingAccountsLinksSourceModifiedDateAccountIdentifiers extends SpeakeasyBase {
  /**
   * The local (usually national) routing number for the account.
   *
   * @remarks
   *
   * This is known by different names in different countries:
   * * BSB code (Australia)
   * * routing number (Canada, USA)
   * * sort code (UK)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bankCode" })
  bankCode?: string;

  /**
   * The ISO 9362 code (commonly called SWIFT code, SWIFT-BIC or BIC) for the account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bic" })
  bic?: string;

  /**
   * The international bank account number (IBAN) for the account, if known.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "iban" })
  iban?: string;

  /**
   * A portion of the actual account `number` to help account identification where number is tokenised (Plaid only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maskedAccountNumber" })
  maskedAccountNumber?: string;

  /**
   * The account number for the account. When combined with the`bankCode`, this is usually enough to uniquely identify an account within a jurisdiction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;

  /**
   * Detailed account category
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subtype" })
  subtype?: string;

  /**
   * Type of account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: ListBankingAccountsLinksSourceModifiedDateAccountIdentifiersTypeEnum;
}

/**
 * The bank or other financial institution providing the account.
 */
export class ListBankingAccountsLinksSourceModifiedDateAccountInstitution extends SpeakeasyBase {
  /**
   * The institution's ID, according to the provider.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The institution's name, according to the underlying provider.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * The type of transactions and balances on the account.
 *
 * @remarks
 * For Credit accounts, positive balances are liabilities and positive transactions reduce liabilities.
 * For Debit accounts, positive balances are assets and positive transactions increase assets.
 */
export enum ListBankingAccountsLinksSourceModifiedDateTypeEnum {
  Unknown = "Unknown",
  Credit = "Credit",
  Debit = "Debit",
}

/**
 * An account where payments are made or received, and bank transactions are recorded.
 *
 * @remarks
 *
 * Explore our [data coverage](https://knowledge.codat.io/supported-features/banking?view=tab-by-data-type&dataType=banking-accounts).
 */
export class ListBankingAccountsLinksSourceModifiedDate extends SpeakeasyBase {
  /**
   * An object containing bank balance data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "balance" })
  @Type(() => ListBankingAccountsLinksSourceModifiedDateAccountBalanceAmounts)
  balance: ListBankingAccountsLinksSourceModifiedDateAccountBalanceAmounts;

  /**
   * The currency code for the account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency: string;

  /**
   * The name of the person or company who holds the account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "holder" })
  holder?: string;

  /**
   * The ID of the account from the provider.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * An object containing bank account identification information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identifiers" })
  @Type(() => ListBankingAccountsLinksSourceModifiedDateAccountIdentifiers)
  identifiers: ListBankingAccountsLinksSourceModifiedDateAccountIdentifiers;

  /**
   * The friendly name of the account, chosen by the holder. This may not have been set by the account holder and therefore is not always available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "informalName" })
  informalName?: string;

  /**
   * The bank or other financial institution providing the account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "institution" })
  @Type(() => ListBankingAccountsLinksSourceModifiedDateAccountInstitution)
  institution: ListBankingAccountsLinksSourceModifiedDateAccountInstitution;

  /**
   * The date on which this record was last modified in Codat.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modifiedDate" })
  modifiedDate?: string;

  /**
   * The name of the account according to the provider.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The date on which this record was last modified in the originating system
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceModifiedDate" })
  sourceModifiedDate?: string;

  /**
   * The type of transactions and balances on the account.
   *
   * @remarks
   * For Credit accounts, positive balances are liabilities and positive transactions reduce liabilities.
   * For Debit accounts, positive balances are assets and positive transactions increase assets.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: ListBankingAccountsLinksSourceModifiedDateTypeEnum;
}

/**
 * Codat's Paging Model
 */
export class ListBankingAccountsLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => ListBankingAccountsLinksLinks)
  links: ListBankingAccountsLinksLinks;

  @SpeakeasyMetadata()
  @Expose({ name: "pageNumber" })
  pageNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "pageSize" })
  pageSize: number;

  /**
   * An account where payments are made or received, and bank transactions are recorded.
   *
   * @remarks
   *
   * Explore our [data coverage](https://knowledge.codat.io/supported-features/banking?view=tab-by-data-type&dataType=banking-accounts).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "results" })
  @Type(() => ListBankingAccountsLinksSourceModifiedDate)
  results?: ListBankingAccountsLinksSourceModifiedDate;

  @SpeakeasyMetadata()
  @Expose({ name: "totalResults" })
  totalResults: number;
}

export class ListBankingAccountsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  links?: ListBankingAccountsLinks;
}
