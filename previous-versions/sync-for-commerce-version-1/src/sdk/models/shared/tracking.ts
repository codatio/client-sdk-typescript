/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountingCustomerRef } from "./accountingcustomerref";
import { BilledToType } from "./billedtotype";
import { RecordRef } from "./recordref";
import { TrackingCategoryRefsitems } from "./trackingcategoryrefsitems";
import { Expose, Type } from "class-transformer";

export class TrackingProjectRef extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

/**
 * Categories, and a project and customer, against which the item is tracked.
 */
export class Tracking extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: TrackingCategoryRefsitems })
    @Expose({ name: "categoryRefs" })
    @Type(() => TrackingCategoryRefsitems)
    categoryRefs: TrackingCategoryRefsitems[];

    @SpeakeasyMetadata()
    @Expose({ name: "customerRef" })
    @Type(() => AccountingCustomerRef)
    customerRef?: AccountingCustomerRef;

    @SpeakeasyMetadata()
    @Expose({ name: "isBilledTo" })
    isBilledTo: BilledToType;

    @SpeakeasyMetadata()
    @Expose({ name: "isRebilledTo" })
    isRebilledTo: BilledToType;

    @SpeakeasyMetadata()
    @Expose({ name: "projectRef" })
    @Type(() => TrackingProjectRef)
    projectRef?: TrackingProjectRef;

    /**
     * Links the current record to the underlying record or data type that created it.
     *
     * @remarks
     *
     * For example, if a journal entry is generated based on an invoice, this property allows you to connect the journal entry to the underlying invoice in our data model.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "recordRef" })
    @Type(() => RecordRef)
    recordRef?: RecordRef;
}
