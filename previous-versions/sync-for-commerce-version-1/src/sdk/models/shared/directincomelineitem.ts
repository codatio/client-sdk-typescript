/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountRef } from "./accountref";
import { Expose, Type } from "class-transformer";

/**
 * Reference to the product, service type, or inventory item to which the direct cost is linked.
 */
export class ItemReference extends SpeakeasyBase {
    /**
     * Unique identifier for the item in the accounting platform.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    /**
     * Name of the item in the accounting platform.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

/**
 * Reference to the tax rate to which the line item is linked.
 */
export class TaxRateReference extends SpeakeasyBase {
    /**
     * Applicable tax rate.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "effectiveTaxRate" })
    effectiveTaxRate?: number;

    /**
     * Unique identifier for the tax rate in the accounting platform.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * Name of the tax rate in the accounting platform.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

/**
 * References a category against which the item is tracked.
 *
 * @deprecated class: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export class TrackingCategoryRefs extends SpeakeasyBase {
    /**
     * Unique identifier to the tracking category.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    /**
     * Name of tracking category.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;
}

export class DirectIncomeLineItem extends SpeakeasyBase {
    /**
     * Data types that reference an account, for example bill and invoice line items, use an accountRef that includes the ID and name of the linked account.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "accountRef" })
    @Type(() => AccountRef)
    accountRef?: AccountRef;

    /**
     * A user-friendly name of the goods or services.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    /**
     * Discount amount for the line before tax.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "discountAmount" })
    discountAmount?: number;

    /**
     * Discount percentage for the line before tax.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "discountPercentage" })
    discountPercentage?: number;

    /**
     * Reference to the product, service type, or inventory item to which the direct cost is linked.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "itemRef" })
    @Type(() => ItemReference)
    itemRef?: ItemReference;

    /**
     * The number of units of goods or services received.
     *
     * @remarks
     *
     * Note: If the platform does not provide this information, the quantity will be mapped as 1.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "quantity" })
    quantity: number;

    /**
     * The amount of the line, inclusive of discounts, but exclusive of tax.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "subTotal" })
    subTotal?: number;

    /**
     * The amount of tax for the line.
     *
     * @remarks
     * Note: If the platform does not provide this information, the quantity will be mapped as 0.00.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "taxAmount" })
    taxAmount?: number;

    /**
     * Reference to the tax rate to which the line item is linked.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "taxRateRef" })
    @Type(() => TaxRateReference)
    taxRateRef?: TaxRateReference;

    /**
     * The total amount of the line, including tax.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "totalAmount" })
    totalAmount?: number;

    /**
     * An array of categories against which this direct cost is tracked.
     */
    @SpeakeasyMetadata({ elemType: TrackingCategoryRefs })
    @Expose({ name: "trackingCategoryRefs" })
    @Type(() => TrackingCategoryRefs)
    trackingCategoryRefs?: TrackingCategoryRefs[];

    /**
     * The price of each unit of goods or services.
     *
     * @remarks
     * Note: If the platform does not provide this information, the unit amount will be mapped to the total amount.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "unitAmount" })
    unitAmount: number;
}
