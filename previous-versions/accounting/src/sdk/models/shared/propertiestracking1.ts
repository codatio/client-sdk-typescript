/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountingCustomerRef } from "./accountingcustomerref";
import { BilledToType1 } from "./billedtotype1";
import { InvoiceTo } from "./invoiceto";
import { ProjectRef } from "./projectref";
import { TrackingCategoryRef } from "./trackingcategoryref";
import { Expose, Type } from "class-transformer";

/**
 * Categories, and a project and customer, against which the item is tracked.
 */
export class Propertiestracking1 extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: TrackingCategoryRef })
    @Expose({ name: "categoryRefs" })
    @Type(() => TrackingCategoryRef)
    categoryRefs: TrackingCategoryRef[];

    @SpeakeasyMetadata()
    @Expose({ name: "customerRef" })
    @Type(() => AccountingCustomerRef)
    customerRef?: AccountingCustomerRef;

    /**
     * Defines if the bill or bill credit note is billed/rebilled to a project.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "isBilledTo" })
    isBilledTo: BilledToType1;

    /**
     * Defines if the bill or bill credit note is billed/rebilled to a project.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "isRebilledTo" })
    isRebilledTo: BilledToType1;

    @SpeakeasyMetadata()
    @Expose({ name: "projectRef" })
    @Type(() => ProjectRef)
    projectRef?: ProjectRef;

    /**
     * Links the current record to the underlying record or data type that created it.
     *
     * @remarks
     *
     * For example, if a journal entry is generated based on an invoice, this property allows you to connect the journal entry to the underlying invoice in our data model.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "recordRef" })
    @Type(() => InvoiceTo)
    recordRef?: InvoiceTo;
}
