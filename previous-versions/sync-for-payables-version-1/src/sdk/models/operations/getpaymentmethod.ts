/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type GetPaymentMethodRequest = {
  /**
   * Unique identifier for a company.
   */
  companyId: string;
  /**
   * Unique identifier for a payment method.
   */
  paymentMethodId: string;
};

/** @internal */
export const GetPaymentMethodRequest$inboundSchema: z.ZodType<
  GetPaymentMethodRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  companyId: z.string(),
  paymentMethodId: z.string(),
});

/** @internal */
export type GetPaymentMethodRequest$Outbound = {
  companyId: string;
  paymentMethodId: string;
};

/** @internal */
export const GetPaymentMethodRequest$outboundSchema: z.ZodType<
  GetPaymentMethodRequest$Outbound,
  z.ZodTypeDef,
  GetPaymentMethodRequest
> = z.object({
  companyId: z.string(),
  paymentMethodId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPaymentMethodRequest$ {
  /** @deprecated use `GetPaymentMethodRequest$inboundSchema` instead. */
  export const inboundSchema = GetPaymentMethodRequest$inboundSchema;
  /** @deprecated use `GetPaymentMethodRequest$outboundSchema` instead. */
  export const outboundSchema = GetPaymentMethodRequest$outboundSchema;
  /** @deprecated use `GetPaymentMethodRequest$Outbound` instead. */
  export type Outbound = GetPaymentMethodRequest$Outbound;
}
