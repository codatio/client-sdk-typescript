/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { blobLikeSchema } from "../../types/blobs.js";
import {
  CodatFile,
  CodatFile$inboundSchema,
  CodatFile$Outbound,
  CodatFile$outboundSchema,
} from "./codatfile.js";

export type AttachmentUpload = {
  /**
   * The file to be uploaded as an attachment.
   */
  file: CodatFile | Blob;
};

/** @internal */
export const AttachmentUpload$inboundSchema: z.ZodType<
  AttachmentUpload,
  z.ZodTypeDef,
  unknown
> = z.object({
  file: CodatFile$inboundSchema,
});

/** @internal */
export type AttachmentUpload$Outbound = {
  file: CodatFile$Outbound | Blob;
};

/** @internal */
export const AttachmentUpload$outboundSchema: z.ZodType<
  AttachmentUpload$Outbound,
  z.ZodTypeDef,
  AttachmentUpload
> = z.object({
  file: CodatFile$outboundSchema.or(blobLikeSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AttachmentUpload$ {
  /** @deprecated use `AttachmentUpload$inboundSchema` instead. */
  export const inboundSchema = AttachmentUpload$inboundSchema;
  /** @deprecated use `AttachmentUpload$outboundSchema` instead. */
  export const outboundSchema = AttachmentUpload$outboundSchema;
  /** @deprecated use `AttachmentUpload$Outbound` instead. */
  export type Outbound = AttachmentUpload$Outbound;
}
