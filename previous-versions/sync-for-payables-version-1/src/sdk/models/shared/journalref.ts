/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Links journal entries to the relevant journal in accounting integrations that use multi-book accounting (multiple journals).
 */
export type JournalRef = {
  /**
   * GUID of the underlying journal.
   */
  id: string;
  /**
   * Name of journal
   */
  name?: string | null | undefined;
};

/** @internal */
export const JournalRef$inboundSchema: z.ZodType<
  JournalRef,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  name: z.nullable(z.string()).optional(),
});

/** @internal */
export type JournalRef$Outbound = {
  id: string;
  name?: string | null | undefined;
};

/** @internal */
export const JournalRef$outboundSchema: z.ZodType<
  JournalRef$Outbound,
  z.ZodTypeDef,
  JournalRef
> = z.object({
  id: z.string(),
  name: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JournalRef$ {
  /** @deprecated use `JournalRef$inboundSchema` instead. */
  export const inboundSchema = JournalRef$inboundSchema;
  /** @deprecated use `JournalRef$outboundSchema` instead. */
  export const outboundSchema = JournalRef$outboundSchema;
  /** @deprecated use `JournalRef$Outbound` instead. */
  export type Outbound = JournalRef$Outbound;
}
