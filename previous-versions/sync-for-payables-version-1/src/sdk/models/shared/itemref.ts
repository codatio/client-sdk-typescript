/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Reference to the item the line is linked to.
 */
export type ItemRef = {
  /**
   * Unique identifier for the item in the accounting software.
   */
  id: string;
  /**
   * Name of the item in the accounting software.
   */
  name?: string | null | undefined;
};

/** @internal */
export const ItemRef$inboundSchema: z.ZodType<ItemRef, z.ZodTypeDef, unknown> =
  z.object({
    id: z.string(),
    name: z.nullable(z.string()).optional(),
  });

/** @internal */
export type ItemRef$Outbound = {
  id: string;
  name?: string | null | undefined;
};

/** @internal */
export const ItemRef$outboundSchema: z.ZodType<
  ItemRef$Outbound,
  z.ZodTypeDef,
  ItemRef
> = z.object({
  id: z.string(),
  name: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemRef$ {
  /** @deprecated use `ItemRef$inboundSchema` instead. */
  export const inboundSchema = ItemRef$inboundSchema;
  /** @deprecated use `ItemRef$outboundSchema` instead. */
  export const outboundSchema = ItemRef$outboundSchema;
  /** @deprecated use `ItemRef$Outbound` instead. */
  export type Outbound = ItemRef$Outbound;
}
