/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../../../sdk/models/shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Include a `syncSetting` object for each data type.
 *
 * @remarks
 * `syncFromWindow`, `syncFromUTC` & `monthsToSync` only need to be included if you wish to set a value for them.
 */
export class UpdateProfileSyncSettingsRequestBody extends SpeakeasyBase {
    /**
     * Unique identifier for your client in Codat.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "clientId" })
    clientId: string;

    /**
     * Set to `True` if you want to override default [sync settings](https://docs.codat.io/knowledge-base/advanced-sync-settings).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "overridesDefaults" })
    overridesDefaults?: boolean;

    @SpeakeasyMetadata({ elemType: shared.SyncSetting })
    @Expose({ name: "settings" })
    @Type(() => shared.SyncSetting)
    settings: shared.SyncSetting[];
}

export class UpdateProfileSyncSettingsResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * Your API request was not properly authorized.
     */
    @SpeakeasyMetadata()
    errorMessage?: shared.ErrorMessage;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;
}
