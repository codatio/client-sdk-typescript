/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { billsCreate } from "../funcs/billsCreate.js";
import { billsDownloadAttachment } from "../funcs/billsDownloadAttachment.js";
import { billsGetBillOptions } from "../funcs/billsGetBillOptions.js";
import { billsList } from "../funcs/billsList.js";
import { billsListAttachments } from "../funcs/billsListAttachments.js";
import { billsUploadAttachment } from "../funcs/billsUploadAttachment.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Bills extends ClientSDK {
  /**
   * Get bill mapping options
   *
   * @remarks
   * Use the *Get mapping options - Bills* endpoint to return a list of available mapping options for a given company's connection ID.
   *
   * By default, this endpoint returns a list of active accounts and tax rates. You can use [querying](https://docs.codat.io/using-the-api/querying) to change that.
   *
   * Mapping options are a set of accounts and tax rates used to configure the SMB's payables integration.
   */
  async getBillOptions(
    request: operations.GetMappingOptionsBillsRequest,
    options?: RequestOptions,
  ): Promise<shared.BillMappingOptions> {
    return unwrapAsync(billsGetBillOptions(
      this,
      request,
      options,
    ));
  }

  /**
   * List bills
   *
   * @remarks
   * The *List bills* endpoint returns a list of [bills](https://docs.codat.io/sync-for-payables-api#/schemas/Bill) for a given company's connection.
   *
   * [Bills](https://docs.codat.io/sync-for-payables-api#/schemas/Bill) are invoices that represent the SMB's financial obligations to their supplier for a purchase of goods or services.
   *
   * By default, the endpoint will return all bills with a status of 'Open' & 'PartiallyPaid' to show all oustanding bills.
   */
  async list(
    request: operations.ListBillsRequest,
    options?: RequestOptions,
  ): Promise<shared.Bills> {
    return unwrapAsync(billsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create bill
   *
   * @remarks
   * The *Create bill* endpoint creates a new [bill](https://docs.codat.io/sync-for-payables-api#/schemas/Bill) for a given company's connection.
   *
   * [Bills](https://docs.codat.io/sync-for-payables-api#/schemas/Bill) are invoices that represent the SMB's financial obligations to their supplier for a purchase of goods or services.
   */
  async create(
    request: operations.CreateBillRequest,
    options?: RequestOptions,
  ): Promise<shared.Bill> {
    return unwrapAsync(billsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Upload bill attachment
   *
   * @remarks
   * The *Upload bill attachment* endpoint uploads an attachment and assigns it against a specific `billId`.
   *
   * [Bills](https://docs.codat.io/sync-for-payables-api#/schemas/Bill) are invoices that represent the SMB's financial obligations to their supplier for a purchase of goods or services.
   */
  async uploadAttachment(
    request: operations.UploadBillAttachmentRequest,
    options?: RequestOptions,
  ): Promise<shared.Attachment> {
    return unwrapAsync(billsUploadAttachment(
      this,
      request,
      options,
    ));
  }

  /**
   * List bill attachments
   *
   * @remarks
   * The *List bill attachments* endpoint returns a list of attachments available to download for a given `billId`.
   *
   * [Bills](https://docs.codat.io/sync-for-payables-api#/schemas/Bill) are invoices that represent the SMB's financial obligations to their supplier for a purchase of goods or services.
   */
  async listAttachments(
    request: operations.ListBillAttachmentsRequest,
    options?: RequestOptions,
  ): Promise<Array<shared.Attachment>> {
    return unwrapAsync(billsListAttachments(
      this,
      request,
      options,
    ));
  }

  /**
   * Download bill attachment
   *
   * @remarks
   * The *Download bill attachment* endpoint downloads a specific attachment for a given `billId` and `attachmentId`.
   *
   * [Bills](https://docs.codat.io/sync-for-payables-api#/schemas/Bill) are invoices that represent the SMB's financial obligations to their supplier for a purchase of goods or services.
   *
   * Check out our [coverage explorer](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bills) for integrations that support downloading a bill attachment.
   */
  async downloadAttachment(
    request: operations.DownloadBillAttachmentRequest,
    options?: RequestOptions,
  ): Promise<ReadableStream<Uint8Array>> {
    return unwrapAsync(billsDownloadAttachment(
      this,
      request,
      options,
    ));
  }
}
