/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Reference to the account to which the line item is linked.
 */
export type BillAccountRef = {
  /**
   * 'id' from the Accounts data type.
   */
  id?: string | undefined;
};

/** @internal */
export const BillAccountRef$inboundSchema: z.ZodType<
  BillAccountRef,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
});

/** @internal */
export type BillAccountRef$Outbound = {
  id?: string | undefined;
};

/** @internal */
export const BillAccountRef$outboundSchema: z.ZodType<
  BillAccountRef$Outbound,
  z.ZodTypeDef,
  BillAccountRef
> = z.object({
  id: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BillAccountRef$ {
  /** @deprecated use `BillAccountRef$inboundSchema` instead. */
  export const inboundSchema = BillAccountRef$inboundSchema;
  /** @deprecated use `BillAccountRef$outboundSchema` instead. */
  export const outboundSchema = BillAccountRef$outboundSchema;
  /** @deprecated use `BillAccountRef$Outbound` instead. */
  export type Outbound = BillAccountRef$Outbound;
}

export function billAccountRefToJSON(billAccountRef: BillAccountRef): string {
  return JSON.stringify(BillAccountRef$outboundSchema.parse(billAccountRef));
}

export function billAccountRefFromJSON(
  jsonString: string,
): SafeParseResult<BillAccountRef, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BillAccountRef$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BillAccountRef' from JSON`,
  );
}
