/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Gets the latest basic info for a company.
 */
export type CompanyInformation = {
  /**
   * Name of the linked company.
   */
  companyName?: string | null | undefined;
  /**
   * Currency set in the accounting software of the linked company. Used by the currency rate.
   */
  baseCurrency?: string | null | undefined;
};

/** @internal */
export const CompanyInformation$inboundSchema: z.ZodType<
  CompanyInformation,
  z.ZodTypeDef,
  unknown
> = z.object({
  companyName: z.nullable(z.string()).optional(),
  baseCurrency: z.nullable(z.string()).optional(),
});

/** @internal */
export type CompanyInformation$Outbound = {
  companyName?: string | null | undefined;
  baseCurrency?: string | null | undefined;
};

/** @internal */
export const CompanyInformation$outboundSchema: z.ZodType<
  CompanyInformation$Outbound,
  z.ZodTypeDef,
  CompanyInformation
> = z.object({
  companyName: z.nullable(z.string()).optional(),
  baseCurrency: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompanyInformation$ {
  /** @deprecated use `CompanyInformation$inboundSchema` instead. */
  export const inboundSchema = CompanyInformation$inboundSchema;
  /** @deprecated use `CompanyInformation$outboundSchema` instead. */
  export const outboundSchema = CompanyInformation$outboundSchema;
  /** @deprecated use `CompanyInformation$Outbound` instead. */
  export type Outbound = CompanyInformation$Outbound;
}
