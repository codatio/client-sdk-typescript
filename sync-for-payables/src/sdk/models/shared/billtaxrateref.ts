/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Reference to the tax rate to which the line item is linked.
 */
export type BillTaxRateRef = {
  /**
   * Unique identifier for the tax rate in the accounting software.
   */
  id?: string | undefined;
};

/** @internal */
export const BillTaxRateRef$inboundSchema: z.ZodType<
  BillTaxRateRef,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
});

/** @internal */
export type BillTaxRateRef$Outbound = {
  id?: string | undefined;
};

/** @internal */
export const BillTaxRateRef$outboundSchema: z.ZodType<
  BillTaxRateRef$Outbound,
  z.ZodTypeDef,
  BillTaxRateRef
> = z.object({
  id: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BillTaxRateRef$ {
  /** @deprecated use `BillTaxRateRef$inboundSchema` instead. */
  export const inboundSchema = BillTaxRateRef$inboundSchema;
  /** @deprecated use `BillTaxRateRef$outboundSchema` instead. */
  export const outboundSchema = BillTaxRateRef$outboundSchema;
  /** @deprecated use `BillTaxRateRef$Outbound` instead. */
  export type Outbound = BillTaxRateRef$Outbound;
}

export function billTaxRateRefToJSON(billTaxRateRef: BillTaxRateRef): string {
  return JSON.stringify(BillTaxRateRef$outboundSchema.parse(billTaxRateRef));
}

export function billTaxRateRefFromJSON(
  jsonString: string,
): SafeParseResult<BillTaxRateRef, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BillTaxRateRef$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BillTaxRateRef' from JSON`,
  );
}
