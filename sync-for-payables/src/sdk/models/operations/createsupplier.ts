/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type CreateSupplierRequest = {
  /**
   * Unique identifier for a company.
   */
  companyId: string;
  /**
   * Unique identifier for a connection.
   */
  connectionId: string;
  /**
   * A unique identifier to ensure idempotent behaviour for subsequent requests.
   */
  idempotencyKey?: string | undefined;
  supplierPrototype?: shared.SupplierPrototype | undefined;
};

/** @internal */
export const CreateSupplierRequest$inboundSchema: z.ZodType<
  CreateSupplierRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  companyId: z.string(),
  connectionId: z.string(),
  "Idempotency-Key": z.string().optional(),
  supplierPrototype: shared.SupplierPrototype$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "Idempotency-Key": "idempotencyKey",
  });
});

/** @internal */
export type CreateSupplierRequest$Outbound = {
  companyId: string;
  connectionId: string;
  "Idempotency-Key"?: string | undefined;
  supplierPrototype?: shared.SupplierPrototype$Outbound | undefined;
};

/** @internal */
export const CreateSupplierRequest$outboundSchema: z.ZodType<
  CreateSupplierRequest$Outbound,
  z.ZodTypeDef,
  CreateSupplierRequest
> = z.object({
  companyId: z.string(),
  connectionId: z.string(),
  idempotencyKey: z.string().optional(),
  supplierPrototype: shared.SupplierPrototype$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    idempotencyKey: "Idempotency-Key",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateSupplierRequest$ {
  /** @deprecated use `CreateSupplierRequest$inboundSchema` instead. */
  export const inboundSchema = CreateSupplierRequest$inboundSchema;
  /** @deprecated use `CreateSupplierRequest$outboundSchema` instead. */
  export const outboundSchema = CreateSupplierRequest$outboundSchema;
  /** @deprecated use `CreateSupplierRequest$Outbound` instead. */
  export type Outbound = CreateSupplierRequest$Outbound;
}
