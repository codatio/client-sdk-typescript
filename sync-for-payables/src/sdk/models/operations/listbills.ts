/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ListBillsRequest = {
  /**
   * Unique identifier for a company.
   */
  companyId: string;
  /**
   * Unique identifier for a connection.
   */
  connectionId: string;
  /**
   * Retrieve the next page of results using the continuation token from the previous response.
   */
  continuationToken?: string | undefined;
  /**
   * Codat query string allows you to filter by `status` and `sourceModifiedDate`. Learn more about Codat's query string [here](https://docs.codat.io/using-the-api/querying). Platfrom specfic statuses: Xero supports  Open | PartiallyPaid | Paid | Void | Draft. Qbo supports Open | PartiallyPaid | Paid. FreeAgent supports Open | PartiallyPaid | Paid.
   */
  query?: string | undefined;
};

/** @internal */
export const ListBillsRequest$inboundSchema: z.ZodType<
  ListBillsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  companyId: z.string(),
  connectionId: z.string(),
  continuationToken: z.string().optional(),
  query: z.string().optional(),
});

/** @internal */
export type ListBillsRequest$Outbound = {
  companyId: string;
  connectionId: string;
  continuationToken?: string | undefined;
  query?: string | undefined;
};

/** @internal */
export const ListBillsRequest$outboundSchema: z.ZodType<
  ListBillsRequest$Outbound,
  z.ZodTypeDef,
  ListBillsRequest
> = z.object({
  companyId: z.string(),
  connectionId: z.string(),
  continuationToken: z.string().optional(),
  query: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListBillsRequest$ {
  /** @deprecated use `ListBillsRequest$inboundSchema` instead. */
  export const inboundSchema = ListBillsRequest$inboundSchema;
  /** @deprecated use `ListBillsRequest$outboundSchema` instead. */
  export const outboundSchema = ListBillsRequest$outboundSchema;
  /** @deprecated use `ListBillsRequest$Outbound` instead. */
  export type Outbound = ListBillsRequest$Outbound;
}
