/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type UpdateConfigTextSyncFlowRequest = {
  /**
   * Localization identifier for English (US) or French.
   */
  locale: shared.Locale;
  requestBody?: { [k: string]: shared.Localization } | undefined;
};

/** @internal */
export const UpdateConfigTextSyncFlowRequest$inboundSchema: z.ZodType<
  UpdateConfigTextSyncFlowRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  locale: shared.Locale$inboundSchema,
  RequestBody: z.record(shared.Localization$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type UpdateConfigTextSyncFlowRequest$Outbound = {
  locale: string;
  RequestBody?: { [k: string]: shared.Localization$Outbound } | undefined;
};

/** @internal */
export const UpdateConfigTextSyncFlowRequest$outboundSchema: z.ZodType<
  UpdateConfigTextSyncFlowRequest$Outbound,
  z.ZodTypeDef,
  UpdateConfigTextSyncFlowRequest
> = z.object({
  locale: shared.Locale$outboundSchema,
  requestBody: z.record(shared.Localization$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateConfigTextSyncFlowRequest$ {
  /** @deprecated use `UpdateConfigTextSyncFlowRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateConfigTextSyncFlowRequest$inboundSchema;
  /** @deprecated use `UpdateConfigTextSyncFlowRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateConfigTextSyncFlowRequest$outboundSchema;
  /** @deprecated use `UpdateConfigTextSyncFlowRequest$Outbound` instead. */
  export type Outbound = UpdateConfigTextSyncFlowRequest$Outbound;
}

export function updateConfigTextSyncFlowRequestToJSON(
  updateConfigTextSyncFlowRequest: UpdateConfigTextSyncFlowRequest,
): string {
  return JSON.stringify(
    UpdateConfigTextSyncFlowRequest$outboundSchema.parse(
      updateConfigTextSyncFlowRequest,
    ),
  );
}

export function updateConfigTextSyncFlowRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateConfigTextSyncFlowRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateConfigTextSyncFlowRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateConfigTextSyncFlowRequest' from JSON`,
  );
}
