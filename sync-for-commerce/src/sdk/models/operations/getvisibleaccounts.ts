/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetVisibleAccountsRequest = {
    /**
     * Unique identifier for your client in Codat.
     */
    clientId: string;
    /**
     * A unique 4-letter key to represent a platform in each integration.
     */
    platformKey: string;
};

/** @internal */
export const GetVisibleAccountsRequest$inboundSchema: z.ZodType<
    GetVisibleAccountsRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    clientId: z.string(),
    platformKey: z.string(),
});

/** @internal */
export type GetVisibleAccountsRequest$Outbound = {
    clientId: string;
    platformKey: string;
};

/** @internal */
export const GetVisibleAccountsRequest$outboundSchema: z.ZodType<
    GetVisibleAccountsRequest$Outbound,
    z.ZodTypeDef,
    GetVisibleAccountsRequest
> = z.object({
    clientId: z.string(),
    platformKey: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetVisibleAccountsRequest$ {
    /** @deprecated use `GetVisibleAccountsRequest$inboundSchema` instead. */
    export const inboundSchema = GetVisibleAccountsRequest$inboundSchema;
    /** @deprecated use `GetVisibleAccountsRequest$outboundSchema` instead. */
    export const outboundSchema = GetVisibleAccountsRequest$outboundSchema;
    /** @deprecated use `GetVisibleAccountsRequest$Outbound` instead. */
    export type Outbound = GetVisibleAccountsRequest$Outbound;
}
