/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type UpdateConnectionAuthorizationRequest = {
    /**
     * Unique identifier for a company.
     */
    companyId: string;
    /**
     * Unique identifier for a connection.
     */
    connectionId: string;
    requestBody?: { [k: string]: string } | undefined;
};

/** @internal */
export const UpdateConnectionAuthorizationRequest$inboundSchema: z.ZodType<
    UpdateConnectionAuthorizationRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        companyId: z.string(),
        connectionId: z.string(),
        RequestBody: z.record(z.string()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            RequestBody: "requestBody",
        });
    });

/** @internal */
export type UpdateConnectionAuthorizationRequest$Outbound = {
    companyId: string;
    connectionId: string;
    RequestBody?: { [k: string]: string } | undefined;
};

/** @internal */
export const UpdateConnectionAuthorizationRequest$outboundSchema: z.ZodType<
    UpdateConnectionAuthorizationRequest$Outbound,
    z.ZodTypeDef,
    UpdateConnectionAuthorizationRequest
> = z
    .object({
        companyId: z.string(),
        connectionId: z.string(),
        requestBody: z.record(z.string()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            requestBody: "RequestBody",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateConnectionAuthorizationRequest$ {
    /** @deprecated use `UpdateConnectionAuthorizationRequest$inboundSchema` instead. */
    export const inboundSchema = UpdateConnectionAuthorizationRequest$inboundSchema;
    /** @deprecated use `UpdateConnectionAuthorizationRequest$outboundSchema` instead. */
    export const outboundSchema = UpdateConnectionAuthorizationRequest$outboundSchema;
    /** @deprecated use `UpdateConnectionAuthorizationRequest$Outbound` instead. */
    export type Outbound = UpdateConnectionAuthorizationRequest$Outbound;
}
