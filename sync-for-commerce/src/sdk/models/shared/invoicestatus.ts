/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type InvoiceStatus = {
    /**
     * Options for invoice statuses.
     */
    invoiceStatusOptions?: Array<string> | null | undefined;
    /**
     * Selected option for invoice status for invoice to be synced.
     */
    selectedInvoiceStatus?: string | null | undefined;
};

/** @internal */
export namespace InvoiceStatus$ {
    export type Inbound = {
        invoiceStatusOptions?: Array<string> | null | undefined;
        selectedInvoiceStatus?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<InvoiceStatus, z.ZodTypeDef, Inbound> = z
        .object({
            invoiceStatusOptions: z.nullable(z.array(z.string())).optional(),
            selectedInvoiceStatus: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.invoiceStatusOptions === undefined
                    ? null
                    : { invoiceStatusOptions: v.invoiceStatusOptions }),
                ...(v.selectedInvoiceStatus === undefined
                    ? null
                    : { selectedInvoiceStatus: v.selectedInvoiceStatus }),
            };
        });

    export type Outbound = {
        invoiceStatusOptions?: Array<string> | null | undefined;
        selectedInvoiceStatus?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InvoiceStatus> = z
        .object({
            invoiceStatusOptions: z.nullable(z.array(z.string())).optional(),
            selectedInvoiceStatus: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.invoiceStatusOptions === undefined
                    ? null
                    : { invoiceStatusOptions: v.invoiceStatusOptions }),
                ...(v.selectedInvoiceStatus === undefined
                    ? null
                    : { selectedInvoiceStatus: v.selectedInvoiceStatus }),
            };
        });
}
