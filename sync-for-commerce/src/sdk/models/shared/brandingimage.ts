/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ImageReference,
  ImageReference$inboundSchema,
  ImageReference$Outbound,
  ImageReference$outboundSchema,
} from "./imagereference.js";

export type BrandingImage = {
  /**
   * Image reference.
   */
  image?: ImageReference | undefined;
};

/** @internal */
export const BrandingImage$inboundSchema: z.ZodType<
  BrandingImage,
  z.ZodTypeDef,
  unknown
> = z.object({
  image: ImageReference$inboundSchema.optional(),
});

/** @internal */
export type BrandingImage$Outbound = {
  image?: ImageReference$Outbound | undefined;
};

/** @internal */
export const BrandingImage$outboundSchema: z.ZodType<
  BrandingImage$Outbound,
  z.ZodTypeDef,
  BrandingImage
> = z.object({
  image: ImageReference$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BrandingImage$ {
  /** @deprecated use `BrandingImage$inboundSchema` instead. */
  export const inboundSchema = BrandingImage$inboundSchema;
  /** @deprecated use `BrandingImage$outboundSchema` instead. */
  export const outboundSchema = BrandingImage$outboundSchema;
  /** @deprecated use `BrandingImage$Outbound` instead. */
  export type Outbound = BrandingImage$Outbound;
}

export function brandingImageToJSON(brandingImage: BrandingImage): string {
  return JSON.stringify(BrandingImage$outboundSchema.parse(brandingImage));
}

export function brandingImageFromJSON(
  jsonString: string,
): SafeParseResult<BrandingImage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BrandingImage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BrandingImage' from JSON`,
  );
}
