/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    GroupingLevels,
    GroupingLevels$inboundSchema,
    GroupingLevels$Outbound,
    GroupingLevels$outboundSchema,
} from "./groupinglevels.js";
import {
    GroupingPeriod,
    GroupingPeriod$inboundSchema,
    GroupingPeriod$Outbound,
    GroupingPeriod$outboundSchema,
} from "./groupingperiod.js";
import * as z from "zod";

export type Grouping = {
    groupingPeriod?: GroupingPeriod | undefined;
    groupingLevels?: GroupingLevels | undefined;
};

/** @internal */
export const Grouping$inboundSchema: z.ZodType<Grouping, z.ZodTypeDef, unknown> = z.object({
    groupingPeriod: GroupingPeriod$inboundSchema.optional(),
    groupingLevels: GroupingLevels$inboundSchema.optional(),
});

/** @internal */
export type Grouping$Outbound = {
    groupingPeriod?: GroupingPeriod$Outbound | undefined;
    groupingLevels?: GroupingLevels$Outbound | undefined;
};

/** @internal */
export const Grouping$outboundSchema: z.ZodType<Grouping$Outbound, z.ZodTypeDef, Grouping> =
    z.object({
        groupingPeriod: GroupingPeriod$outboundSchema.optional(),
        groupingLevels: GroupingLevels$outboundSchema.optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Grouping$ {
    /** @deprecated use `Grouping$inboundSchema` instead. */
    export const inboundSchema = Grouping$inboundSchema;
    /** @deprecated use `Grouping$outboundSchema` instead. */
    export const outboundSchema = Grouping$outboundSchema;
    /** @deprecated use `Grouping$Outbound` instead. */
    export type Outbound = Grouping$Outbound;
}
