/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { DataConnectionStatus, DataConnectionStatus$ } from "./dataconnectionstatus";
import { z } from "zod";

export type UpdateConnection = {
    /**
     * The current authorization status of the data connection.
     */
    status?: DataConnectionStatus | undefined;
};

/** @internal */
export namespace UpdateConnection$ {
    export type Inbound = {
        status?: DataConnectionStatus | undefined;
    };

    export const inboundSchema: z.ZodType<UpdateConnection, z.ZodTypeDef, Inbound> = z
        .object({
            status: DataConnectionStatus$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.status === undefined ? null : { status: v.status }),
            };
        });

    export type Outbound = {
        status?: DataConnectionStatus | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateConnection> = z
        .object({
            status: DataConnectionStatus$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.status === undefined ? null : { status: v.status }),
            };
        });
}
