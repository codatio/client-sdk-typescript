/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    ConfigurationOption,
    ConfigurationOption$inboundSchema,
    ConfigurationOption$Outbound,
    ConfigurationOption$outboundSchema,
} from "./configurationoption.js";
import {
    TaxRateMapping,
    TaxRateMapping$inboundSchema,
    TaxRateMapping$Outbound,
    TaxRateMapping$outboundSchema,
} from "./taxratemapping.js";
import * as z from "zod";

export type NewTaxRates = {
    /**
     * Array of accounting tax rate options.
     */
    accountingTaxRateOptions?: Array<ConfigurationOption> | null | undefined;
    /**
     * Array of tax component options.
     */
    commerceTaxRateOptions?: Array<ConfigurationOption> | null | undefined;
    /**
     * Array of tax component to rate mappings.
     */
    taxRateMappings?: Array<TaxRateMapping> | null | undefined;
    /**
     * Default tax rate selected for sync.
     */
    selectedDefaultZeroTaxRateId?: string | null | undefined;
    /**
     * Default zero tax rate selected for sync.
     */
    defaultZeroTaxRateOptions?: Array<ConfigurationOption> | null | undefined;
};

/** @internal */
export const NewTaxRates$inboundSchema: z.ZodType<NewTaxRates, z.ZodTypeDef, unknown> = z.object({
    accountingTaxRateOptions: z.nullable(z.array(ConfigurationOption$inboundSchema)).optional(),
    commerceTaxRateOptions: z.nullable(z.array(ConfigurationOption$inboundSchema)).optional(),
    taxRateMappings: z.nullable(z.array(TaxRateMapping$inboundSchema)).optional(),
    selectedDefaultZeroTaxRateId: z.nullable(z.string()).optional(),
    defaultZeroTaxRateOptions: z.nullable(z.array(ConfigurationOption$inboundSchema)).optional(),
});

/** @internal */
export type NewTaxRates$Outbound = {
    accountingTaxRateOptions?: Array<ConfigurationOption$Outbound> | null | undefined;
    commerceTaxRateOptions?: Array<ConfigurationOption$Outbound> | null | undefined;
    taxRateMappings?: Array<TaxRateMapping$Outbound> | null | undefined;
    selectedDefaultZeroTaxRateId?: string | null | undefined;
    defaultZeroTaxRateOptions?: Array<ConfigurationOption$Outbound> | null | undefined;
};

/** @internal */
export const NewTaxRates$outboundSchema: z.ZodType<
    NewTaxRates$Outbound,
    z.ZodTypeDef,
    NewTaxRates
> = z.object({
    accountingTaxRateOptions: z.nullable(z.array(ConfigurationOption$outboundSchema)).optional(),
    commerceTaxRateOptions: z.nullable(z.array(ConfigurationOption$outboundSchema)).optional(),
    taxRateMappings: z.nullable(z.array(TaxRateMapping$outboundSchema)).optional(),
    selectedDefaultZeroTaxRateId: z.nullable(z.string()).optional(),
    defaultZeroTaxRateOptions: z.nullable(z.array(ConfigurationOption$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NewTaxRates$ {
    /** @deprecated use `NewTaxRates$inboundSchema` instead. */
    export const inboundSchema = NewTaxRates$inboundSchema;
    /** @deprecated use `NewTaxRates$outboundSchema` instead. */
    export const outboundSchema = NewTaxRates$outboundSchema;
    /** @deprecated use `NewTaxRates$Outbound` instead. */
    export type Outbound = NewTaxRates$Outbound;
}
