/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    ConfigurationOption,
    ConfigurationOption$inboundSchema,
    ConfigurationOption$Outbound,
    ConfigurationOption$outboundSchema,
} from "./configurationoption.js";
import * as z from "zod";

export type TaxRateAmount = {
    /**
     * Selected tax rate id from the list of tax rates on the accounting software.
     */
    selectedTaxRateId?: string | null | undefined;
    /**
     * Array of tax rate options object.
     */
    taxRateOptions?: Array<ConfigurationOption> | null | undefined;
};

/** @internal */
export const TaxRateAmount$inboundSchema: z.ZodType<TaxRateAmount, z.ZodTypeDef, unknown> =
    z.object({
        selectedTaxRateId: z.nullable(z.string()).optional(),
        taxRateOptions: z.nullable(z.array(ConfigurationOption$inboundSchema)).optional(),
    });

/** @internal */
export type TaxRateAmount$Outbound = {
    selectedTaxRateId?: string | null | undefined;
    taxRateOptions?: Array<ConfigurationOption$Outbound> | null | undefined;
};

/** @internal */
export const TaxRateAmount$outboundSchema: z.ZodType<
    TaxRateAmount$Outbound,
    z.ZodTypeDef,
    TaxRateAmount
> = z.object({
    selectedTaxRateId: z.nullable(z.string()).optional(),
    taxRateOptions: z.nullable(z.array(ConfigurationOption$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TaxRateAmount$ {
    /** @deprecated use `TaxRateAmount$inboundSchema` instead. */
    export const inboundSchema = TaxRateAmount$inboundSchema;
    /** @deprecated use `TaxRateAmount$outboundSchema` instead. */
    export const outboundSchema = TaxRateAmount$outboundSchema;
    /** @deprecated use `TaxRateAmount$Outbound` instead. */
    export type Outbound = TaxRateAmount$Outbound;
}
