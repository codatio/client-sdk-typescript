/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Option, Option$ } from "./option";
import { z } from "zod";

export type TaxRateAmount = {
    /**
     * Selected tax rate id from the list of tax rates on the accounting software.
     */
    selectedTaxRateId?: string | null | undefined;
    /**
     * Array of tax rate options object.
     */
    taxRateOptions?: Array<Option> | null | undefined;
};

/** @internal */
export namespace TaxRateAmount$ {
    export type Inbound = {
        selectedTaxRateId?: string | null | undefined;
        taxRateOptions?: Array<Option$.Inbound> | null | undefined;
    };

    export const inboundSchema: z.ZodType<TaxRateAmount, z.ZodTypeDef, Inbound> = z
        .object({
            selectedTaxRateId: z.nullable(z.string()).optional(),
            taxRateOptions: z.nullable(z.array(Option$.inboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.selectedTaxRateId === undefined
                    ? null
                    : { selectedTaxRateId: v.selectedTaxRateId }),
                ...(v.taxRateOptions === undefined ? null : { taxRateOptions: v.taxRateOptions }),
            };
        });

    export type Outbound = {
        selectedTaxRateId?: string | null | undefined;
        taxRateOptions?: Array<Option$.Outbound> | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaxRateAmount> = z
        .object({
            selectedTaxRateId: z.nullable(z.string()).optional(),
            taxRateOptions: z.nullable(z.array(Option$.outboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.selectedTaxRateId === undefined
                    ? null
                    : { selectedTaxRateId: v.selectedTaxRateId }),
                ...(v.taxRateOptions === undefined ? null : { taxRateOptions: v.taxRateOptions }),
            };
        });
}
