/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    AccountConfiguration,
    AccountConfiguration$inboundSchema,
    AccountConfiguration$Outbound,
    AccountConfiguration$outboundSchema,
} from "./accountconfiguration.js";
import * as z from "zod";

export type NewPaymentsConfiguration = {
    /**
     * Boolean indicator for syncing payments.
     */
    syncPayments?: boolean | undefined;
    accounts?: { [k: string]: AccountConfiguration } | null | undefined;
};

/** @internal */
export const NewPaymentsConfiguration$inboundSchema: z.ZodType<
    NewPaymentsConfiguration,
    z.ZodTypeDef,
    unknown
> = z.object({
    syncPayments: z.boolean().optional(),
    accounts: z.nullable(z.record(AccountConfiguration$inboundSchema)).optional(),
});

/** @internal */
export type NewPaymentsConfiguration$Outbound = {
    syncPayments?: boolean | undefined;
    accounts?: { [k: string]: AccountConfiguration$Outbound } | null | undefined;
};

/** @internal */
export const NewPaymentsConfiguration$outboundSchema: z.ZodType<
    NewPaymentsConfiguration$Outbound,
    z.ZodTypeDef,
    NewPaymentsConfiguration
> = z.object({
    syncPayments: z.boolean().optional(),
    accounts: z.nullable(z.record(AccountConfiguration$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NewPaymentsConfiguration$ {
    /** @deprecated use `NewPaymentsConfiguration$inboundSchema` instead. */
    export const inboundSchema = NewPaymentsConfiguration$inboundSchema;
    /** @deprecated use `NewPaymentsConfiguration$outboundSchema` instead. */
    export const outboundSchema = NewPaymentsConfiguration$outboundSchema;
    /** @deprecated use `NewPaymentsConfiguration$Outbound` instead. */
    export type Outbound = NewPaymentsConfiguration$Outbound;
}
