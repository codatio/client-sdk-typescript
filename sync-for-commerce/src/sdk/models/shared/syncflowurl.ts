/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type SyncFlowUrl = {
  /**
   * Sync flow URL.
   */
  url?: string | undefined;
};

/** @internal */
export const SyncFlowUrl$inboundSchema: z.ZodType<
  SyncFlowUrl,
  z.ZodTypeDef,
  unknown
> = z.object({
  url: z.string().optional(),
});

/** @internal */
export type SyncFlowUrl$Outbound = {
  url?: string | undefined;
};

/** @internal */
export const SyncFlowUrl$outboundSchema: z.ZodType<
  SyncFlowUrl$Outbound,
  z.ZodTypeDef,
  SyncFlowUrl
> = z.object({
  url: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SyncFlowUrl$ {
  /** @deprecated use `SyncFlowUrl$inboundSchema` instead. */
  export const inboundSchema = SyncFlowUrl$inboundSchema;
  /** @deprecated use `SyncFlowUrl$outboundSchema` instead. */
  export const outboundSchema = SyncFlowUrl$outboundSchema;
  /** @deprecated use `SyncFlowUrl$Outbound` instead. */
  export type Outbound = SyncFlowUrl$Outbound;
}

export function syncFlowUrlToJSON(syncFlowUrl: SyncFlowUrl): string {
  return JSON.stringify(SyncFlowUrl$outboundSchema.parse(syncFlowUrl));
}

export function syncFlowUrlFromJSON(
  jsonString: string,
): SafeParseResult<SyncFlowUrl, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SyncFlowUrl$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SyncFlowUrl' from JSON`,
  );
}
