/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    ConfigurationOption,
    ConfigurationOption$inboundSchema,
    ConfigurationOption$Outbound,
    ConfigurationOption$outboundSchema,
} from "./configurationoption.js";
import * as z from "zod";

export type FeesSupplier = {
    /**
     * Selected supplier id from the list of supplier records on the accounting software.
     */
    selectedSupplierId?: string | null | undefined;
    /**
     * List of supplier options from the list of supplier records on the accounting software.
     */
    supplierOptions?: Array<ConfigurationOption> | null | undefined;
};

/** @internal */
export const FeesSupplier$inboundSchema: z.ZodType<FeesSupplier, z.ZodTypeDef, unknown> = z.object({
    selectedSupplierId: z.nullable(z.string()).optional(),
    supplierOptions: z.nullable(z.array(ConfigurationOption$inboundSchema)).optional(),
});

/** @internal */
export type FeesSupplier$Outbound = {
    selectedSupplierId?: string | null | undefined;
    supplierOptions?: Array<ConfigurationOption$Outbound> | null | undefined;
};

/** @internal */
export const FeesSupplier$outboundSchema: z.ZodType<
    FeesSupplier$Outbound,
    z.ZodTypeDef,
    FeesSupplier
> = z.object({
    selectedSupplierId: z.nullable(z.string()).optional(),
    supplierOptions: z.nullable(z.array(ConfigurationOption$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FeesSupplier$ {
    /** @deprecated use `FeesSupplier$inboundSchema` instead. */
    export const inboundSchema = FeesSupplier$inboundSchema;
    /** @deprecated use `FeesSupplier$outboundSchema` instead. */
    export const outboundSchema = FeesSupplier$outboundSchema;
    /** @deprecated use `FeesSupplier$Outbound` instead. */
    export type Outbound = FeesSupplier$Outbound;
}
