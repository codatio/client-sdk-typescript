/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type VisibleAccounts = {
    /**
     * Visible accounts on sync flow.
     */
    visibleAccounts?: Array<string> | null | undefined;
};

/** @internal */
export const VisibleAccounts$inboundSchema: z.ZodType<VisibleAccounts, z.ZodTypeDef, unknown> =
    z.object({
        visibleAccounts: z.nullable(z.array(z.string())).optional(),
    });

/** @internal */
export type VisibleAccounts$Outbound = {
    visibleAccounts?: Array<string> | null | undefined;
};

/** @internal */
export const VisibleAccounts$outboundSchema: z.ZodType<
    VisibleAccounts$Outbound,
    z.ZodTypeDef,
    VisibleAccounts
> = z.object({
    visibleAccounts: z.nullable(z.array(z.string())).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VisibleAccounts$ {
    /** @deprecated use `VisibleAccounts$inboundSchema` instead. */
    export const inboundSchema = VisibleAccounts$inboundSchema;
    /** @deprecated use `VisibleAccounts$outboundSchema` instead. */
    export const outboundSchema = VisibleAccounts$outboundSchema;
    /** @deprecated use `VisibleAccounts$Outbound` instead. */
    export type Outbound = VisibleAccounts$Outbound;
}
