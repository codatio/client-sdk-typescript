/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SDKOptions, serverURLFromOptions } from "../lib/config";
import { HTTPClient } from "../lib/http";
import { ClientSDK } from "../lib/sdks";
import { AdvancedControls } from "./advancedcontrols";
import { Connections } from "./connections";
import { Integrations } from "./integrations";
import { Sync } from "./sync";
import { SyncFlowSettings } from "./syncflowsettings";

export class CodatSyncCommerce extends ClientSDK {
    private readonly options$: SDKOptions;

    constructor(options: SDKOptions = {}) {
        super({
            client: options.httpClient || new HTTPClient(),
            baseURL: serverURLFromOptions(options),
        });

        this.options$ = options;
        void this.options$;
    }

    private _syncFlowSettings?: SyncFlowSettings;
    get syncFlowSettings() {
        return (this._syncFlowSettings ??= new SyncFlowSettings(this.options$));
    }

    private _advancedControls?: AdvancedControls;
    get advancedControls() {
        return (this._advancedControls ??= new AdvancedControls(this.options$));
    }

    private _connections?: Connections;
    get connections() {
        return (this._connections ??= new Connections(this.options$));
    }

    private _sync?: Sync;
    get sync() {
        return (this._sync ??= new Sync(this.options$));
    }

    private _integrations?: Integrations;
    get integrations() {
        return (this._integrations ??= new Integrations(this.options$));
    }
}
