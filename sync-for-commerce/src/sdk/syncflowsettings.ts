/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { syncFlowSettingsGetConfigTextSyncFlow } from "../funcs/syncFlowSettingsGetConfigTextSyncFlow.js";
import { syncFlowSettingsGetVisibleAccounts } from "../funcs/syncFlowSettingsGetVisibleAccounts.js";
import { syncFlowSettingsUpdateConfigTextSyncFlow } from "../funcs/syncFlowSettingsUpdateConfigTextSyncFlow.js";
import { syncFlowSettingsUpdateVisibleAccountsSyncFlow } from "../funcs/syncFlowSettingsUpdateVisibleAccountsSyncFlow.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class SyncFlowSettings extends ClientSDK {
  /**
   * Get preferences for text fields
   *
   * @remarks
   * Return preferences set for the text fields on sync flow.
   */
  async getConfigTextSyncFlow(
    request: operations.GetConfigTextSyncFlowRequest,
    options?: RequestOptions,
  ): Promise<{ [k: string]: shared.Localization }> {
    return unwrapAsync(syncFlowSettingsGetConfigTextSyncFlow(
      this,
      request,
      options,
    ));
  }

  /**
   * Update preferences for text fields
   *
   * @remarks
   * Set preferences for the text fields on sync flow.
   */
  async updateConfigTextSyncFlow(
    request: operations.UpdateConfigTextSyncFlowRequest,
    options?: RequestOptions,
  ): Promise<{ [k: string]: shared.Localization }> {
    return unwrapAsync(syncFlowSettingsUpdateConfigTextSyncFlow(
      this,
      request,
      options,
    ));
  }

  /**
   * List visible accounts
   *
   * @remarks
   * Return accounts which are visible on sync flow.
   */
  async getVisibleAccounts(
    request: operations.GetVisibleAccountsRequest,
    options?: RequestOptions,
  ): Promise<shared.VisibleAccounts> {
    return unwrapAsync(syncFlowSettingsGetVisibleAccounts(
      this,
      request,
      options,
    ));
  }

  /**
   * Update visible accounts
   *
   * @remarks
   * Update which accounts are visible on sync flow.
   */
  async updateVisibleAccountsSyncFlow(
    request: operations.UpdateVisibleAccountsSyncFlowRequest,
    options?: RequestOptions,
  ): Promise<shared.VisibleAccounts> {
    return unwrapAsync(syncFlowSettingsUpdateVisibleAccountsSyncFlow(
      this,
      request,
      options,
    ));
  }
}
