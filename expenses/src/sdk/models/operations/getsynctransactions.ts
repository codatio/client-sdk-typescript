/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, plainToInstance, Transform, Type } from "class-transformer";

export class GetSyncTransactionsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=companyId",
  })
  companyId: string;

  /**
   * Page number. [Read more](https://docs.codat.io/using-the-api/paging).
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page: number;

  /**
   * Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pageSize",
  })
  pageSize?: number;

  /**
   * Unique identifier for a sync.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=syncId",
  })
  syncId: string;
}

export class GetSyncTransactions200ApplicationJSONHalLink extends SpeakeasyBase {
  /**
   * Link to next page in paginated response
   */
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;
}

/**
 * Type of transaction that has been processed e.g. Expense or Bank Feed.
 */
export enum GetSyncTransactions200ApplicationJSONResultsIntegrationTypeEnum {
  Expenses = "expenses",
  Bankfeeds = "bankfeeds",
}

/**
 * Status of the transaction.
 */
export enum GetSyncTransactions200ApplicationJSONResultsStatusEnum {
  Unknown = "Unknown",
  Pending = "Pending",
  ValidationError = "ValidationError",
  Completed = "Completed",
  PushError = "PushError",
}

export class GetSyncTransactions200ApplicationJSONResults extends SpeakeasyBase {
  /**
   * Type of transaction that has been processed e.g. Expense or Bank Feed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "integrationType" })
  integrationType?: GetSyncTransactions200ApplicationJSONResultsIntegrationTypeEnum;

  /**
   * Metadata such as validation errors or the resulting record created in the accounting software.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  /**
   * Status of the transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: GetSyncTransactions200ApplicationJSONResultsStatusEnum;

  /**
   * Your unique idenfier of the transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transactionId" })
  transactionId?: string;
}

/**
 * Success
 */
export class GetSyncTransactions200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: GetSyncTransactions200ApplicationJSONHalLink })
  @Expose({ name: "links" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, GetSyncTransactions200ApplicationJSONHalLink> =
        {};
      for (const key in value) {
        obj[key] = plainToInstance(
          GetSyncTransactions200ApplicationJSONHalLink,
          value[key] as GetSyncTransactions200ApplicationJSONHalLink,
          { excludeExtraneousValues: true }
        );
      }
      return obj;
    },
    { toClassOnly: true }
  )
  links?: Record<string, GetSyncTransactions200ApplicationJSONHalLink>;

  /**
   * Page of current request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pageNumber" })
  pageNumber: number;

  /**
   * Page size of current request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pageSize" })
  pageSize: number;

  @SpeakeasyMetadata({ elemType: GetSyncTransactions200ApplicationJSONResults })
  @Expose({ name: "results" })
  @Type(() => GetSyncTransactions200ApplicationJSONResults)
  results?: GetSyncTransactions200ApplicationJSONResults[];

  /**
   * Total number of transactions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalResults" })
  totalResults: number;
}

export class GetSyncTransactionsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  getSyncTransactions200ApplicationJSONObject?: GetSyncTransactions200ApplicationJSON;
}
