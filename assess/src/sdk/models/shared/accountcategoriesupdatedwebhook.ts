/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class AccountCategoriesUpdatedWebhookData extends SpeakeasyBase {
    /**
     * The date on which this account categories were last modified in Codat.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "modifiedDate" })
    modifiedDate?: string;
}

/**
 * Webhook request body for account categories updated.
 */
export class AccountCategoriesUpdatedWebhook extends SpeakeasyBase {
    /**
     * Unique identifier of the alert.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "alertId" })
    alertId?: string;

    /**
     * Unique identifier for your client in Codat.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "clientId" })
    clientId?: string;

    /**
     * Name of your client in Codat.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "clientName" })
    clientName?: string;

    /**
     * Unique identifier for your SMB in Codat.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "companyId" })
    companyId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "data" })
    @Type(() => AccountCategoriesUpdatedWebhookData)
    data?: AccountCategoriesUpdatedWebhookData;

    /**
     * Unique identifier for a company's data connection.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "dataConnectionId" })
    dataConnectionId?: string;

    /**
     * A human readable message about the webhook.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message?: string;

    /**
     * Unique identifier for the rule.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "ruleId" })
    ruleId?: string;

    /**
     * The type of rule.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "ruleType" })
    ruleType?: string;
}
